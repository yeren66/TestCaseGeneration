{
    "project_name": "Java",
    "file_name": "Lower.java",
    "relative_path": "Java/src/main/java/com/thealgorithms/strings/Lower.java",
    "execute_path": "Java",
    "package": "com.thealgorithms.strings",
    "docstring": "/**\n     * Converts all of the characters in this {@code String} to lower case\n     *\n     * @param s the string to convert\n     * @return the {@code String}, converted to lowercase.\n     */",
    "source_code": "\npublic static String toLowerCase(String s) {\n    char[] values = s.toCharArray();\n    for (int i = 0; i < values.length; ++i) {\n        if (Character.isLetter(values[i]) && Character.isUpperCase(values[i])) {\n            values[i] = Character.toLowerCase(values[i]);\n        }\n    }\n    return new String(values);\n}\n",
    "class_name": "Lower",
    "method_name": "toLowerCase",
    "arguments": [
        "String s"
    ],
    "generate_test": [
        "package com.thealgorithms.strings;\n\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.assertEquals;\n\npublic class LowerTest {\n\n    @Test\n    public void toLowerCaseTest() {\n        // Test with a basic string\n        assertEquals(\"hello\", Lower.toLowerCase(\"Hello\"), \"Should convert 'Hello' to 'hello'\");\n\n        // Test with a string that is already in lowercase\n        assertEquals(\"hello\", Lower.toLowerCase(\"hello\"), \"Should not change 'hello'\");\n\n        // Test with a string containing all uppercase letters\n        assertEquals(\"world\", Lower.toLowerCase(\"WORLD\"), \"Should convert 'WORLD' to 'world'\");\n\n        // Test with a string containing numbers and symbols; they should remain unchanged\n        assertEquals(\"123!@#abc\", Lower.toLowerCase(\"123!@#ABC\"), \"Should only change letters to lowercase\");\n\n        // Test with a string that is empty\n        assertEquals(\"\", Lower.toLowerCase(\"\"), \"An empty string should remain unchanged\");\n\n        // Test with a string containing a mix of upper and lower case letters\n        assertEquals(\"java is fun!\", Lower.toLowerCase(\"Java IS Fun!\"), \"Should convert mixed case to all lowercase\");\n\n        // Test with a string containing non-English characters (which may or may not have case)\n        assertEquals(\"\u0444\u0443\u043d\u043a\u0446\u0438\u044f\", Lower.toLowerCase(\"\u0424\u0443\u043d\u043a\u0446\u0438\u044f\"), \"Should handle non-English characters if there is a case\");\n    }\n}",
        "package com.thealgorithms.strings;\n\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.assertEquals;\n\npublic class LowerTest {\n\n    @Test\n    public void toLowerCaseTest() {\n        assertEquals(\"hello\", Lower.toLowerCase(\"Hello\"), \"Conversion to lower case failed for word with initial uppercase\");\n        assertEquals(\"hello world\", Lower.toLowerCase(\"Hello World\"), \"Conversion to lower case failed for sentence with uppercase\");\n        assertEquals(\"already lowercase\", Lower.toLowerCase(\"already lowercase\"), \"Conversion to lower case failed for already lowercase sentence\");\n        assertEquals(\"\", Lower.toLowerCase(\"\"), \"Conversion to lower case failed for empty string\");\n        assertEquals(\"123\", Lower.toLowerCase(\"123\"), \"Conversion to lower case failed for string with digits\");\n        assertEquals(\"@#$%^&*\", Lower.toLowerCase(\"@#$%^&*\"), \"Conversion to lower case failed for string with special characters\");\n        assertEquals(\"hello123\", Lower.toLowerCase(\"Hello123\"), \"Conversion to lower case failed for alphanumeric string\");\n        assertEquals(\"\u0938\u094d\u0935\u093e\u0917\u0924\u092e\u094d\", Lower.toLowerCase(\"\u0938\u094d\u0935\u093e\u0917\u0924\u092e\u094d\"), \"Conversion to lower case failed for non-Latin characters\");\n    }\n}",
        "package com.thealgorithms.strings;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class LowerTest {\n    @Test\n    public void toLowerCaseTest() {\n        // Test with standard mixed case string\n        assertEquals(\"hello\", Lower.toLowerCase(\"Hello\"), \"Should convert to all lower case\");\n        \n        // Test with all upper case string\n        assertEquals(\"world\", Lower.toLowerCase(\"WORLD\"), \"Should convert to all lower case\");\n\n        // Test with all lower case string (no conversion expected)\n        assertEquals(\"peace\", Lower.toLowerCase(\"peace\"), \"Should remain the same as input\");\n\n        // Test with numeric and special characters (no letters)\n        assertEquals(\"12345!@#\", Lower.toLowerCase(\"12345!@#\"), \"Should remain the same as input\");\n\n        // Test with empty string\n        assertEquals(\"\", Lower.toLowerCase(\"\"), \"Should return empty string for empty input\");\n\n        // Test with string containing spaces\n        assertEquals(\"a b c\", Lower.toLowerCase(\"A B C\"), \"Should convert letters to lower case and retain spaces\");\n\n        // Test with null input\n        assertThrows(NullPointerException.class, () -> Lower.toLowerCase(null), \"Should throw NullPointerException for null input\");\n    }\n}",
        "package com.thealgorithms.strings;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class LowerTest {\n    @Test\n    public void toLowerCaseTest() {\n        assertEquals(\"hello\", Lower.toLowerCase(\"Hello\"));\n        assertEquals(\"world\", Lower.toLowerCase(\"World\"));\n        assertEquals(\"test\", Lower.toLowerCase(\"test\"));\n        assertEquals(\"\", Lower.toLowerCase(\"\"));\n        assertEquals(\"123\", Lower.toLowerCase(\"123\"));\n        assertEquals(\"hello world!\", Lower.toLowerCase(\"Hello World!\"));\n        assertEquals(\"java programming\", Lower.toLowerCase(\"Java Programming\"));\n    }\n}",
        "Timeout",
        "Timeout",
        "Timeout",
        "Timeout",
        "Timeout",
        "Timeout"
    ]
}