{
    "project_name": "Java",
    "file_name": "HammingDistance.java",
    "relative_path": "Java/src/main/java/com/thealgorithms/strings/HammingDistance.java",
    "execute_path": "Java",
    "package": "com.thealgorithms.strings",
    "docstring": "/**\n     * calculate the hamming distance between two strings of equal length\n     *\n     * @param s1 the first string\n     * @param s2 the second string\n     * @return {@code int} hamming distance\n     * @throws Exception\n     */",
    "source_code": "\npublic static int calculateHammingDistance(String s1, String s2) throws Exception {\n    if (s1.length() != s2.length()) {\n        throw new Exception(\"String lengths must be equal\");\n    }\n\n    int stringLength = s1.length();\n    int counter = 0;\n\n    for (int i = 0; i < stringLength; i++) {\n        if (s1.charAt(i) != s2.charAt(i)) {\n            counter++;\n        }\n    }\n    return counter;\n}\n",
    "class_name": "HammingDistance",
    "method_name": "calculateHammingDistance",
    "arguments": [
        "String s1",
        "String s2"
    ],
    "generate_test": [
        "package com.thealgorithms.strings;\n\nimport org.junit.jupiter.api.Test;\n\nimport static org.junit.jupiter.api.Assertions.assertEquals;\nimport static org.junit.jupiter.api.Assertions.assertThrows;\n\npublic class HammingDistanceTest {\n\n    @Test\n    public void calculateHammingDistanceTest() throws Exception {\n        // Test for equal strings (Hamming Distance should be 0)\n        assertEquals(0, HammingDistance.calculateHammingDistance(\"test\", \"test\"));\n\n        // Test for strings with Hamming Distance of 2\n        assertEquals(2, HammingDistance.calculateHammingDistance(\"1011101\", \"1001001\"));\n\n        // Test for strings with Hamming Distance of 1\n        assertEquals(1, HammingDistance.calculateHammingDistance(\"karolin\", \"kathrin\"));\n\n        // Test with exception due to different lengths\n        Exception exception = assertThrows(Exception.class, () -> {\n            HammingDistance.calculateHammingDistance(\"abc\", \"abcd\");\n        });\n        assertEquals(\"String lengths must be equal\", exception.getMessage());\n    }\n}",
        "Timeout",
        "Timeout",
        "Timeout",
        "Timeout",
        "Timeout",
        "Timeout",
        "Timeout",
        "Timeout",
        "Timeout"
    ]
}