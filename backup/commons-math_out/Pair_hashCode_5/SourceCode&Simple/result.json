["\npackage org.apache.commons.math4.legacy.core;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class PairTest {\n    @Test\n    public void hashCodeTest() {\n        // Create a Pair object with key and value\n        Pair<Integer, String> pair = new Pair<>(10, \"test\");\n        \n        // Check the hash code of the Pair object\n        assertEquals(pair.hashCode(), 37 * (10 ^ 2) + (0 ^ 2));\n    }\n}", "\n@Test\npublic void hashCodeTest() {\n    // Create a pair with null key and value\n    Pair<String, Integer> pair1 = new Pair<>(null, null);\n    assertEquals(0, pair1.hashCode());\n\n    // Create a pair with non-null key and null value\n    Pair<String, Integer> pair2 = new Pair<>(\"key\", null);\n    assertEquals(37 * \"key\".hashCode(), pair2.hashCode());\n\n    // Create a pair with non-null key and value\n    Pair<String, Integer> pair3 = new Pair<>(\"key\", 10);\n    int expectedHashCode = 37 * (pair3.getKey().hashCode() + pair3.getValue().hashCode());\n    assertEquals(expectedHashCode, pair3.hashCode());\n}", "package org.apache.commons.math4.legacy.core;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class PairTest {\n    @Test\n    public void hashCodeTest() {\n        // Test with null key and value\n        Pair<Integer, String> pair = new Pair<>(null, null);\n        assertEquals(0, pair.hashCode());\n\n        // Test with non-null key and value\n        pair = new Pair<>(1, \"Hello\");\n        assertEquals(37 * (pair.getKey().hashCode() ^ (pair.getValue().hashCode() >>> 16)), pair.hashCode());\n    }\n}", "\n@Test\npublic void hashCodeTest() {\n    Pair<Integer, String> pair1 = new Pair<>(10, \"Hello\");\n    Pair<Integer, String> pair2 = new Pair<>(10, \"World\");\n    assertEquals(pair1.hashCode(), pair2.hashCode());\n}", "\n@Test\npublic void hashCodeTest() {\n    Pair<Integer, String> pair1 = new Pair<>(10, \"apple\");\n    Pair<Integer, String> pair2 = new Pair<>(20, \"banana\");\n    assertEquals(pair1.hashCode(), pair2.hashCode());\n}", "@Test\npublic void hashCodeTest() {\n    Pair<Integer, String> pair1 = new Pair<>(10, \"ABC\");\n    int expectedHashCode = 10 ^ (16 * (\"ABC\".hashCode()));\n    assertEquals(expectedHashCode, pair1.hashCode());\n}", "\n@Test\npublic void hashCodeTest() {\n    Pair<String, Integer> pair1 = new Pair<>(\"key\", 1);\n    int result = pair1.hashCode();\n\n    assertEquals(result, pair1.getKey().hashCode());\n    assertEquals(result, pair1.getValue().hashCode() ^ (pair1.getValue().hashCode() >>> 16));\n}", "package org.apache.commons.math4.legacy.core;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class PairTest {\n    @Test\n    public void hashCodeTest() {\n        // Create a pair with key and value\n        Pair<String, Integer> pair = new Pair<>(\"key\", 1);\n\n        // Test the hash code of the pair\n        assertEquals(pair.hashCode(), 37 * (\"key\".hashCode()) + (1 ^ (1 >>> 16)));\n    }\n}", "@Test\npublic void hashCodeTest() {\n    Pair<String, Integer> pair = new Pair<>(\"key\", 10);\n    int expectedHashCode = 15463827;\n    assertEquals(expectedHashCode, pair.hashCode());\n}", "@Test\npublic void hashCodeTest() {\n    Pair<String, Integer> pair1 = new Pair<>(\"hello\", 5);\n    Pair<String, Integer> pair2 = new Pair<>(\"world\", 6);\n    \n    assertEquals(pair1.hashCode(), pair2.hashCode());\n}"]