{
    "project_name": "jfreechart",
    "file_name": "JSONUtils.java",
    "relative_path": "jfreechart/src/main/java/org/jfree/data/json/JSONUtils.java",
    "execute_path": "jfreechart",
    "package": "org.jfree.data.json",
    "docstring": "/**\n     * Returns a string containing the data in JSON format.  The format is\n     * an array of arrays, where each sub-array represents one data value.\n     * The sub-array should contain two items, first the item key as a string\n     * and second the item value as a number.  For example:\n     * {@code [[\"Key A\", 1.0], [\"Key B\", 2.0]]}\n     * <br><br>\n     * Note that this method can be used with instances of {@link PieDataset}.\n     * \n     * @param data  the data ({@code null} not permitted).\n     * \n     * @return A string in JSON format. \n     */",
    "source_code": "\npublic static String writeKeyedValues(KeyedValues data) {\n    Args.nullNotPermitted(data, \"data\");\n    StringWriter sw = new StringWriter();\n    try {\n        writeKeyedValues(data, sw);\n    } catch (IOException ex) {\n        throw new RuntimeException(ex);\n    }\n    return sw.toString();\n}\n",
    "class_name": "JSONUtils",
    "method_name": "writeKeyedValues",
    "arguments": [
        "KeyedValues data"
    ],
    "generate_test": [
        "package org.jfree.data.json;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class JSONUtilsTest {\n    @Test\n    public void writeKeyedValuesTest() {\n        // Create a sample KeyedValues object\n        DefaultKeyedValues data = new DefaultKeyedValues();\n        data.addValue(\"Key A\", 1.0);\n        data.addValue(\"Key B\", 2.0);\n\n        // Call the writeKeyedValues method and get the result\n        String result = JSONUtils.writeKeyedValues(data);\n\n        // Assert that the result matches the expected JSON string\n        String expected = \"[[\\\"Key A\\\", 1.0], [\\\"Key B\\\", 2.0]]\";\n        assertEquals(expected, result);\n    }\n}",
        "@Test\npublic void writeKeyedValuesTest() {\n    // Create a KeyedValues object to test\n    DefaultKeyedValues keyedValues = new DefaultKeyedValues();\n    keyedValues.addValue(\"Key A\", 1.0);\n    keyedValues.addValue(\"Key B\", 2.0);\n\n    // Call the writeKeyedValues method and get the result\n    String result = JSONUtils.writeKeyedValues(keyedValues);\n\n    // Define the expected JSON string\n    String expected = \"[[\\\"Key A\\\", 1.0], [\\\"Key B\\\", 2.0]]\";\n\n    // Assert that the result matches the expected JSON string\n    assertEquals(expected, result);\n}",
        "package org.jfree.data.json;\n\nimport org.jfree.data.KeyedValues;\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class JSONUtilsTest {\n    @Test\n    public void writeKeyedValuesTest() {\n        KeyedValues data = new DefaultKeyedValues();\n        data.addValue(\"Key A\", 1.0);\n        data.addValue(\"Key B\", 2.0);\n\n        String expected = \"[[\\\"Key A\\\", 1.0], [\\\"Key B\\\", 2.0]]\";\n        String actual = JSONUtils.writeKeyedValues(data);\n\n        assertEquals(expected, actual);\n    }\n}",
        "public void writeKeyedValuesTest() {\n    // Create a sample KeyedValues object\n    DefaultKeyedValues data = new DefaultKeyedValues();\n    data.addValue(\"Key A\", 1.0);\n    data.addValue(\"Key B\", 2.0);\n\n    // Call the writeKeyedValues method and store the result\n    String result = JSONUtils.writeKeyedValues(data);\n\n    // Define the expected JSON string\n    String expected = \"[[\\\"Key A\\\", 1.0], [\\\"Key B\\\", 2.0]]\";\n\n    // Assert that the result matches the expected string\n    assertEquals(expected, result);\n}",
        "@Test\npublic void writeKeyedValuesTest() {\n    KeyedValues data = new DefaultKeyedValues();\n    data.addValue(\"Key A\", 1.0);\n    data.addValue(\"Key B\", 2.0);\n    \n    String expected = \"[[\\\"Key A\\\", 1.0], [\\\"Key B\\\", 2.0]]\";\n    String actual = JSONUtils.writeKeyedValues(data);\n    \n    assertEquals(expected, actual);\n}",
        "@Test\n    public void writeKeyedValuesTest() {\n        KeyedValues data = new DefaultKeyedValues();\n        data.addValue(\"Key A\", 1.0);\n        data.addValue(\"Key B\", 2.0);\n        String expected = \"[[\\\"Key A\\\", 1.0], [\\\"Key B\\\", 2.0]]\";\n        String result = JSONUtils.writeKeyedValues(data);\n        assertEquals(expected, result);\n    }",
        "public void writeKeyedValuesTest() {\n    // Create a KeyedValues object for testing\n    DefaultKeyedValues data = new DefaultKeyedValues();\n    data.addValue(\"Key A\", 1.0);\n    data.addValue(\"Key B\", 2.0);\n\n    // Call the writeKeyedValues method with the test data\n    String result = JSONUtils.writeKeyedValues(data);\n\n    // Verify the expected JSON string\n    String expected = \"[[\\\"Key A\\\", 1.0], [\\\"Key B\\\", 2.0]]\";\n    assertEquals(expected, result);\n}",
        "package org.jfree.data.json;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class JSONUtilsTest {\n    @Test\n    public void writeKeyedValuesTest() {\n        KeyedValues data = new DefaultKeyedValues();\n        data.addValue(\"Key A\", 1.0);\n        data.addValue(\"Key B\", 2.0);\n        \n        String expected = \"[[\\\"Key A\\\", 1.0], [\\\"Key B\\\", 2.0]]\";\n        String actual = JSONUtils.writeKeyedValues(data);\n        \n        assertEquals(expected, actual);\n    }\n}",
        "package org.jfree.data.json;\n\nimport org.jfree.data.KeyedValues;\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class JSONUtilsTest {\n    @Test\n    public void writeKeyedValuesTest() {\n        // Create KeyedValues data for testing\n        KeyedValues data = new DefaultKeyedValues();\n        data.addValue(\"Key A\", 1.0);\n        data.addValue(\"Key B\", 2.0);\n        \n        // Call the method to be tested\n        String result = JSONUtils.writeKeyedValues(data);\n        \n        // Verify the result\n        assertEquals(\"[[\\\"Key A\\\", 1.0], [\\\"Key B\\\", 2.0]]\", result);\n    }\n}",
        "package org.jfree.data.json;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\nimport org.mockito.Mockito;\n\npublic class JSONUtilsTest {\n    @Test\n    public void writeKeyedValuesTest() {\n        // Create a mock object for KeyedValues\n        KeyedValues mockData = Mockito.mock(KeyedValues.class);\n\n        // Define the behavior of the mock object\n        Mockito.when(mockData.getKeys()).thenReturn(Arrays.asList(\"Key A\", \"Key B\"));\n        Mockito.when(mockData.getValue(\"Key A\")).thenReturn(1.0);\n        Mockito.when(mockData.getValue(\"Key B\")).thenReturn(2.0);\n\n        // Call the method under test\n        String result = JSONUtils.writeKeyedValues(mockData);\n\n        // Assert the expected JSON output\n        String expected = \"[[\\\"Key A\\\", 1.0], [\\\"Key B\\\", 2.0]]\";\n        assertEquals(expected, result);\n    }\n}"
    ]
}