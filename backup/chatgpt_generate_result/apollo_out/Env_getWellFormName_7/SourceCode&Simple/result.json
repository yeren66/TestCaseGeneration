{
    "project_name": "apollo",
    "file_name": "Env.java",
    "relative_path": "apollo/apollo-portal/src/main/java/com/ctrip/framework/apollo/portal/environment/Env.java",
    "execute_path": "apollo",
    "package": "com.ctrip.framework.apollo.portal.environment",
    "docstring": "/**\n   * add some change to environment name trim and to upper\n   *\n   * @param envName\n   * @return\n   */",
    "source_code": "\nprivate static String getWellFormName(String envName) {\n  if (StringUtils.isBlank(envName)) {\n    return \"\";\n  }\n\n  String envWellFormName = envName.trim().toUpperCase();\n\n  // special case for production in case of typo\n  if (\"PROD\".equals(envWellFormName)) {\n    return Env.PRO.name;\n  }\n\n  // special case that FAT & FWS should map to FAT\n  if (\"FWS\".equals(envWellFormName)) {\n    return Env.FAT.name;\n  }\n\n  return envWellFormName;\n}\n",
    "class_name": "Env",
    "method_name": "getWellFormName",
    "arguments": [
        "String envName"
    ],
    "generate_test": [
        "@Test\npublic void getWellFormNameTest() {\n    // Test when envName is blank\n    String result1 = Env.getWellFormName(\"\");\n    assertEquals(\"\", result1);\n    \n    // Test when envName is null\n    String result2 = Env.getWellFormName(null);\n    assertEquals(\"\", result2);\n    \n    // Test when envName is \"PROD\"\n    String result3 = Env.getWellFormName(\"PROD\");\n    assertEquals(\"PRO\", result3);\n    \n    // Test when envName is \"FWS\"\n    String result4 = Env.getWellFormName(\"FWS\");\n    assertEquals(\"FAT\", result4);\n    \n    // Test when envName is any other value\n    String result5 = Env.getWellFormName(\"DEV\");\n    assertEquals(\"DEV\", result5);\n}",
        "@Test\npublic void getWellFormNameTest() {\n    String result1 = Env.getWellFormName(\"\"); // Test the case when envName is blank\n    assertEquals(\"\", result1); // Verify that the expected result is an empty string\n\n    String result2 = Env.getWellFormName(\"prod\"); // Test the case when envName is \"prod\"\n    assertEquals(\"PRO\", result2); // Verify that the expected result is \"PRO\"\n\n    String result3 = Env.getWellFormName(\"FWS\"); // Test the case when envName is \"FWS\"\n    assertEquals(\"FAT\", result3); // Verify that the expected result is \"FAT\"\n\n    String result4 = Env.getWellFormName(\"uat\"); // Test the case when envName is neither blank, \"prod\", nor \"FWS\"\n    assertEquals(\"UAT\", result4); // Verify that the expected result is the uppercase of the input string\n}",
        "@Test\npublic void getWellFormNameTest() {\n  // Test for blank envName\n  String result1 = Env.getWellFormName(\"\");\n  assertEquals(\"\", result1);\n\n  // Test for PROD\n  String result2 = Env.getWellFormName(\"PROD\");\n  assertEquals(Env.PRO.name, result2);\n\n  // Test for FWS\n  String result3 = Env.getWellFormName(\"FWS\");\n  assertEquals(Env.FAT.name, result3);\n\n  // Test for other cases\n  String result4 = Env.getWellFormName(\"DEV\");\n  assertEquals(\"DEV\", result4);\n\n  String result5 = Env.getWellFormName(\"LPT\");\n  assertEquals(\"LPT\", result5);\n}",
        "@Test\npublic void getWellFormNameTest() {\n    String result1 = Env.getWellFormName(\"\");\n    assertEquals(\"\", result1);\n    \n    String result2 = Env.getWellFormName(\"   \");\n    assertEquals(\"\", result2);\n    \n    String result3 = Env.getWellFormName(\"prod\");\n    assertEquals(\"PRO\", result3);\n    \n    String result4 = Env.getWellFormName(\"FWS\");\n    assertEquals(\"FAT\", result4);\n    \n    String result5 = Env.getWellFormName(\"uat\");\n    assertEquals(\"UAT\", result5);\n    \n    String result6 = Env.getWellFormName(\"lpt\");\n    assertEquals(\"LPT\", result6);\n    \n    String result7 = Env.getWellFormName(\"tools\");\n    assertEquals(\"TOOLS\", result7);\n    \n    String result8 = Env.getWellFormName(\"unknown\");\n    assertEquals(\"UNKNOWN\", result8);\n}",
        "@Test\npublic void getWellFormNameTest() {\n    // Test case 1: Blank input\n    String result1 = Env.getWellFormName(\"\");\n    assertEquals(\"\", result1);\n\n    // Test case 2: Null input\n    String result2 = Env.getWellFormName(null);\n    assertEquals(\"\", result2);\n\n    // Test case 3: Input is already in uppercase\n    String result3 = Env.getWellFormName(\"DEV\");\n    assertEquals(\"DEV\", result3);\n\n    // Test case 4: Input has leading and trailing spaces\n    String result4 = Env.getWellFormName(\"  UAT  \");\n    assertEquals(\"UAT\", result4);\n\n    // Test case 5: Special case for production\n    String result5 = Env.getWellFormName(\"PROD\");\n    assertEquals(Env.PRO.name, result5);\n\n    // Test case 6: Special case for FWS\n    String result6 = Env.getWellFormName(\"FWS\");\n    assertEquals(Env.FAT.name, result6);\n\n    // Test case 7: Normal case\n    String result7 = Env.getWellFormName(\"staging\");\n    assertEquals(\"STAGING\", result7);\n}",
        "@Test\npublic void getWellFormNameTest() {\n    assertEquals(\"\", Env.getWellFormName(\"\"));\n    assertEquals(\"PRO\", Env.getWellFormName(\"Prod\"));\n    assertEquals(\"FAT\", Env.getWellFormName(\"FWS\"));\n    assertEquals(\"DEV\", Env.getWellFormName(\"DEV\"));\n    assertEquals(\"UNKNOWN\", Env.getWellFormName(\"unknown\"));\n    assertEquals(\"TOOLS\", Env.getWellFormName(\"Tools\"));\n}",
        "@Test\npublic void getWellFormNameTest() {\n    // Test case for blank envName\n    String result1 = Env.getWellFormName(\"\");\n    assertEquals(\"\", result1);\n\n    // Test case for envName with typo \"PROD\"\n    String result2 = Env.getWellFormName(\"PROD\");\n    assertEquals(\"PRO\", result2);\n\n    // Test case for envName \"FWS\"\n    String result3 = Env.getWellFormName(\"FWS\");\n    assertEquals(\"FAT\", result3);\n\n    // Test case for envName \"DEV\"\n    String result4 = Env.getWellFormName(\"DEV\");\n    assertEquals(\"DEV\", result4);\n}",
        "@Test\npublic void getWellFormNameTest() {\n    // Test case 1: when envName is blank\n    String result1 = Env.getWellFormName(\"\");\n    assertEquals(\"\", result1);\n\n    // Test case 2: when envName is \"PROD\"\n    String result2 = Env.getWellFormName(\"PROD\");\n    assertEquals(Env.PRO.name, result2);\n\n    // Test case 3: when envName is \"FWS\"\n    String result3 = Env.getWellFormName(\"FWS\");\n    assertEquals(Env.FAT.name, result3);\n\n    // Test case 4: when envName is any other value\n    String result4 = Env.getWellFormName(\"DEV\");\n    assertEquals(\"DEV\", result4);\n}",
        "@Test\npublic void getWellFormNameTest() {\n   String envWellFormName = Env.getWellFormName(\"dev\");\n   assertEquals(\"DEV\", envWellFormName);\n\n   envWellFormName = Env.getWellFormName(\"prod\");\n   assertEquals(\"PRO\", envWellFormName);\n\n   envWellFormName = Env.getWellFormName(\"fws\");\n   assertEquals(\"FAT\", envWellFormName);\n\n   envWellFormName = Env.getWellFormName(\"\");\n   assertEquals(\"\", envWellFormName);\n\n   envWellFormName = Env.getWellFormName(\"unknown\");\n   assertEquals(\"UNKNOWN\", envWellFormName);\n}",
        "@Test\npublic void getWellFormNameTest() {\n  // Test for null input\n  String result = Env.getWellFormName(null);\n  assertEquals(\"\", result);\n\n  // Test for empty input\n  result = Env.getWellFormName(\"\");\n  assertEquals(\"\", result);\n\n  // Test for valid input with no special cases\n  result = Env.getWellFormName(\"DEV\");\n  assertEquals(\"DEV\", result);\n\n  // Test for special case: PROD\n  result = Env.getWellFormName(\"PROD\");\n  assertEquals(\"PRO\", result);\n\n  // Test for special case: FWS\n  result = Env.getWellFormName(\"FWS\");\n  assertEquals(\"FAT\", result);\n}"
    ]
}