{
    "project_name": "javacv",
    "file_name": "PS3EyeFrameGrabber.java",
    "relative_path": "javacv/src/main/java/org/bytedeco/javacv/PS3EyeFrameGrabber.java",
    "execute_path": "javacv",
    "package": "org.bytedeco.javacv",
    "docstring": "/** Ask the driver for all installed PS3 cameras. Resulting array is sorted in order of camera index.\n     *  Its size is defined by CLCamera.cameraCount().\n     * \n     * @return array of camera unique uuids or null if there is no PS3 camera\n     */",
    "source_code": "\npublic static String[] listPS3Cameras() {\n    int no = getCameraCount();\n    String[] uuids;\n    if (no > 0) {\n        uuids = new String[no];\n        for (--no; no >=0; no--) { uuids[no] = CLCamera.cameraUUID(no); }\n        return uuids;\n    }\n    return null;\n}\n",
    "class_name": "PS3EyeFrameGrabber",
    "method_name": "listPS3Cameras",
    "arguments": [],
    "generate_test": [
        "@Test\npublic void listPS3CamerasTest() {\n    String[] expectedUuids = PS3EyeFrameGrabber.listPS3Cameras();\n    String[] actualUuids = PS3EyeFrameGrabber.listPS3Cameras();\n\n    assertArrayEquals(expectedUuids, actualUuids);\n}",
        "@Test\npublic void listPS3CamerasTest() {\n    String[] expected = PS3EyeFrameGrabber.listPS3Cameras();\n    String[] actual = new String[]{\"uuid1\", \"uuid2\", \"uuid3\"};\n    assertArrayEquals(expected, actual);\n}",
        "@Test\npublic void listPS3CamerasTest() {\n    String[] expected = {\"uuid1\", \"uuid2\", \"uuid3\"};\n    String[] actual = PS3EyeFrameGrabber.listPS3Cameras();\n    assertArrayEquals(expected, actual);\n}",
        "@Test\npublic void listPS3CamerasTest() {\n    String[] expected = PS3EyeFrameGrabber.listPS3Cameras();\n    String[] actual = {\"uuid1\", \"uuid2\", \"uuid3\"};\n    assertArrayEquals(expected, actual);\n}",
        "@Test\n    public void listPS3CamerasTest() {\n        String[] expected = {\"uuid1\", \"uuid2\", \"uuid3\"};\n        String[] actual = PS3EyeFrameGrabber.listPS3Cameras();\n        assertArrayEquals(expected, actual);\n    }",
        "@Test\npublic void listPS3CamerasTest() {\n    String[] expected = PS3EyeFrameGrabber.listPS3Cameras();\n    String[] actual = {\"cameraUuid1\", \"cameraUuid2\", \"cameraUuid3\"};\n    assertArrayEquals(expected, actual);\n}",
        "@Test\npublic void listPS3CamerasTest() {\n    String[] expectedResult = {\"uuid1\", \"uuid2\", \"uuid3\"};\n    String[] actualResult = PS3EyeFrameGrabber.listPS3Cameras();\n    assertArrayEquals(expectedResult, actualResult);\n}",
        "@Test\npublic void listPS3CamerasTest() {\n    String[] expected = PS3EyeFrameGrabber.listPS3Cameras();\n    String[] actual = {\"uuid1\", \"uuid2\", \"uuid3\"}; // Add the actual UUIDs of PS3 cameras\n    assertArrayEquals(expected, actual);\n}",
        "@Test\npublic void listPS3CamerasTest() {\n    String[] expectedUuids = PS3EyeFrameGrabber.listPS3Cameras();\n    String[] actualUuids = new String[expectedUuids.length];\n    assertArrayEquals(expectedUuids, actualUuids);\n}",
        "@Test\npublic void listPS3CamerasTest() {\n    String[] expectedUuids = PS3EyeFrameGrabber.listPS3Cameras();\n    String[] actualUuids = PS3EyeFrameGrabberTest.listPS3Cameras();\n    assertArrayEquals(expectedUuids, actualUuids);\n}"
    ]
}