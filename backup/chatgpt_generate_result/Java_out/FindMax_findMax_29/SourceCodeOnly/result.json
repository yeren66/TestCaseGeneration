{
    "project_name": "Java",
    "file_name": "FindMax.java",
    "relative_path": "Java/src/main/java/com/thealgorithms/maths/FindMax.java",
    "execute_path": "Java",
    "package": "com.thealgorithms.maths",
    "docstring": "/**\n     * @brief finds the maximum value stored in the input array\n     *\n     * @param array the input array\n     * @exception IllegalArgumentException input array is empty\n     * @return the maximum value stored in the input array\n     */",
    "source_code": "\npublic static int findMax(final int[] array) {\n    int n = array.length;\n    if (n == 0) {\n        throw new IllegalArgumentException(\"Array must be non-empty.\");\n    }\n    int max = array[0];\n    for (int i = 1; i < n; i++) {\n        if (array[i] > max) {\n            max = array[i];\n        }\n    }\n    return max;\n}\n",
    "class_name": "FindMax",
    "method_name": "findMax",
    "arguments": [
        "int[] array"
    ],
    "generate_test": [
        "@Test\npublic void findMaxTest() {\n    int[] array = {1, 2, 3, 4, 5};\n    int expected = 5;\n    int actual = FindMax.findMax(array);\n    assertEquals(expected, actual);\n}",
        "@Test\npublic void findMaxTest() {\n    int[] array = {5, 10, 2, 8, 3};\n    int expected = 10;\n    int actual = FindMax.findMax(array);\n    assertEquals(expected, actual);\n}",
        "@Test\npublic void findMaxTest() {\n    int[] array = {1, 3, 2, 5, 4};\n    int expectedMax = 5;\n    int actualMax = FindMax.findMax(array);\n    assertEquals(expectedMax, actualMax);\n}",
        "@Test\npublic void findMaxTest() {\n    int[] array = {1, 2, 3, 4, 5};\n    int expected = 5;\n    int actual = FindMax.findMax(array);\n    assertEquals(expected, actual);\n}",
        "package com.thealgorithms.maths;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class FindMaxTest {\n    @Test\n    public void findMaxTest() {\n        int[] array1 = {1, 2, 3, 4, 5};\n        int[] array2 = {5, 4, 3, 2, 1};\n        int[] array3 = {1, 3, 2, 5, 4};\n\n        assertEquals(5, FindMax.findMax(array1));\n        assertEquals(5, FindMax.findMax(array2));\n        assertEquals(5, FindMax.findMax(array3));\n    }\n}",
        "package com.thealgorithms.maths;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class FindMaxTest {\n    @Test\n    public void findMaxTest() {\n        int[] array = {2, 5, 7, 1, 10};\n        int expectedResult = 10;\n        int actualResult = FindMax.findMax(array);\n        assertEquals(expectedResult, actualResult);\n    }\n}",
        "package com.thealgorithms.maths;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class FindMaxTest {\n    @Test\n    public void findMaxTest() {\n        int[] array = {1, 2, 3, 4, 5};\n        int expectedMax = 5; // Expected maximum value in the array\n        int actualMax = FindMax.findMax(array);\n        assertEquals(expectedMax, actualMax, \"Max value is incorrect\");\n    }\n}",
        "public class FindMaxTest {\n    @Test\n    public void findMaxTest() {\n        int[] array = {1, 2, 3, 4};\n        int expectedResult = 4;\n        int actualResult = FindMax.findMax(array);\n        assertEquals(expectedResult, actualResult);\n    }\n}",
        "@Test\npublic void findMaxTest() {\n    int[] array = {1, 2, 3, 4, 5};\n    int expected = 5;\n    int actual = FindMax.findMax(array);\n    assertEquals(expected, actual);\n}",
        "@Test\npublic void findMaxTest() {\n    int[] array = {1, 2, 5, 3, 4};\n    int expected = 5;\n\n    int result = FindMax.findMax(array);\n\n    assertEquals(expected, result);\n}"
    ]
}