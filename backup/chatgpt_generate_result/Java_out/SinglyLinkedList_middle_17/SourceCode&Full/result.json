{
    "project_name": "Java",
    "file_name": "SinglyLinkedList.java",
    "relative_path": "Java/src/main/java/com/thealgorithms/datastructures/lists/SinglyLinkedList.java",
    "execute_path": "Java",
    "package": "com.thealgorithms.datastructures.lists",
    "docstring": "/**\n     * Return the node in the middle of the list\n     * If the length of the list is even then return item number length/2\n     * @return middle node of the list\n     */",
    "source_code": "\npublic Node middle() {\n    if (head == null) {\n        return null;\n    }\n    Node firstCounter = head;\n    Node secondCounter = firstCounter.next;\n    while (secondCounter != null && secondCounter.next != null) {\n        firstCounter = firstCounter.next;\n        secondCounter = secondCounter.next.next;\n    }\n    return firstCounter;\n}\n",
    "class_name": "SinglyLinkedList",
    "method_name": "middle",
    "arguments": [],
    "generate_test": [
        "@Test\npublic void middleTest() {\n    SinglyLinkedList list = new SinglyLinkedList();\n    list.insertHead(1);\n    list.insertHead(2);\n    list.insertHead(3);\n    list.insertHead(4);\n    list.insertHead(5);\n\n    Node middleNode = list.middle();\n\n    assertEquals(3, middleNode.value);\n}",
        "@Test\npublic void middleTest() {\n    SinglyLinkedList list = new SinglyLinkedList();\n    Node node1 = new Node(1);\n    Node node2 = new Node(2);\n    Node node3 = new Node(3);\n    Node node4 = new Node(4);\n    list.setHead(node1);\n    node1.next = node2;\n    node2.next = node3;\n    node3.next = node4;\n\n    Node middleNode = list.middle();\n    assertEquals(2, middleNode.value);\n}",
        "\n    @Test\n    public void middleTest() {\n        SinglyLinkedList list = new SinglyLinkedList();\n        list.insert(1);\n        list.insert(2);\n        list.insert(3);\n        list.insert(4);\n        list.insert(5);\n        Node middleNode = list.middle();\n        assertEquals(3, middleNode.value);\n    }\n",
        "package com.thealgorithms.datastructures.lists;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class SinglyLinkedListTest {\n    @Test\n    public void middleTest() {\n        SinglyLinkedList list = new SinglyLinkedList();\n        list.insert(1);\n        list.insert(2);\n        list.insert(3);\n        list.insert(4);\n        list.insert(5);\n        \n        Node middleNode = list.middle();\n        \n        assertEquals(3, middleNode.value);\n    }\n}",
        "package com.thealgorithms.datastructures.lists;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class SinglyLinkedListTest {\n    @Test\n    public void middleTest() {\n        SinglyLinkedList list = new SinglyLinkedList();\n        // Create a test list\n        list.insert(1);\n        list.insert(2);\n        list.insert(3);\n        list.insert(4);\n\n        // Get the middle node\n        Node middleNode = list.middle();\n\n        // Assert the middle node value is expected\n        assertEquals(2, middleNode.value);\n    }\n}",
        "@Test\n    public void middleTest() {\n        SinglyLinkedList list = new SinglyLinkedList();\n        list.insert(1);\n        list.insert(2);\n        list.insert(3);\n        list.insert(4);\n        list.insert(5);\n        \n        Node expectedMiddleNode = list.getHead().next.next;\n        Node actualMiddleNode = list.middle();\n        \n        assertEquals(expectedMiddleNode, actualMiddleNode);\n    }",
        "@Test\npublic void middleTest() {\n    SinglyLinkedList list = new SinglyLinkedList();\n    Node node1 = new Node(1);\n    Node node2 = new Node(2);\n    Node node3 = new Node(3);\n    Node node4 = new Node(4);\n    node1.next = node2;\n    node2.next = node3;\n    node3.next = node4;\n    list.setHead(node1);\n    Node middleNode = list.middle();\n    assertEquals(2, middleNode.value);\n}",
        "package com.thealgorithms.datastructures.lists;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class SinglyLinkedListTest {\n    @Test\n    public void middleTest() {\n        // Create a SinglyLinkedList object\n        SinglyLinkedList list = new SinglyLinkedList();\n        \n        // Insert elements into the list\n        list.insert(1);\n        list.insert(2);\n        list.insert(3);\n        list.insert(4);\n        list.insert(5);\n        \n        // Call the middle() method\n        Node result = list.middle();\n        \n        // Assert the value of the middle node\n        assertEquals(3, result.value);\n    }\n}",
        "@Test\npublic void middleTest() {\n    SinglyLinkedList list = new SinglyLinkedList();\n    list.insert(1);\n    list.insert(2);\n    list.insert(3);\n    list.insert(4);\n    list.insert(5);\n    \n    Node middleNode = list.middle();\n    \n    // Assert that the value of the middle node is 3\n    assertEquals(3, middleNode.value);\n}",
        "@Test\npublic void middleTest() {\n    SinglyLinkedList list = new SinglyLinkedList();\n    list.insert(1);\n    list.insert(2);\n    list.insert(3);\n    list.insert(4);\n    list.insert(5);\n\n    // Get the middle node\n    Node middleNode = list.middle();\n\n    // Check if the middle node is correct\n    assertEquals(3, middleNode.value);\n}"
    ]
}