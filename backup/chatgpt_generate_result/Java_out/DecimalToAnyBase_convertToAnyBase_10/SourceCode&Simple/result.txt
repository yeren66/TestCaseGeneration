Source code: 


public static String convertToAnyBase(int inp, int base) {
    ArrayList<Character> charArr = new ArrayList<>();

    while (inp > 0) {
        charArr.add(reVal(inp % base));
        inp /= base;
    }

    StringBuilder str = new StringBuilder(charArr.size());

    for (Character ch : charArr) {
        str.append(ch);
    }

    return str.reverse().toString();
}



No.1 generated result --------------------------

@Test
public void convertToAnyBaseTest() {
    assertEquals("10", DecimalToAnyBase.convertToAnyBase(2, 2));
    assertEquals("101", DecimalToAnyBase.convertToAnyBase(5, 2));
    assertEquals("A", DecimalToAnyBase.convertToAnyBase(10, 16));
}


No.2 generated result --------------------------

@Test
public void convertToAnyBaseTest() {
    String expected1 = "110";
    String actual1 = DecimalToAnyBase.convertToAnyBase(6, 2);
    assertEquals(expected1, actual1);
    
    String expected2 = "14";
    String actual2 = DecimalToAnyBase.convertToAnyBase(20, 16);
    assertEquals(expected2, actual2);
    
    // Add more test cases as needed
}


No.3 generated result --------------------------

@Test
public void convertToAnyBaseTest() {
    int inp = 10;
    int base = 2;
    String expectedOutput = "1010";
    
    String convertedValue = DecimalToAnyBase.convertToAnyBase(inp, base);
    
    assertEquals(expectedOutput, convertedValue);
}


No.4 generated result --------------------------

@Test
public void convertToAnyBaseTest() {
    int inp = 14;
    int base = 2;
    String expected = "1110";
    
    String result = DecimalToAnyBase.convertToAnyBase(inp, base);
    
    assertEquals(expected, result);
}


No.5 generated result --------------------------

@Test
public void convertToAnyBaseTest() {
    int inp = 15;
    int base = 2;
    String expected = "1111";
    String result = DecimalToAnyBase.convertToAnyBase(inp, base);
    assertEquals(expected, result);
}


No.6 generated result --------------------------

@Test
public void convertToAnyBaseTest() {
    int inp = 625;
    int base = 5;
    String expectedOutput = "2300";
    
    String actualOutput = DecimalToAnyBase.convertToAnyBase(inp, base);
    
    assertEquals(expectedOutput, actualOutput);
}


No.7 generated result --------------------------

@Test
public void convertToAnyBaseTest() {
    String result = DecimalToAnyBase.convertToAnyBase(19, 2);
    assertEquals("10011", result);
}


No.8 generated result --------------------------

@Test
public void convertToAnyBaseTest() {
    int input = 15;
    int base = 2;
    String expected = "1111";
    String result = DecimalToAnyBase.convertToAnyBase(input, base);
    assertEquals(expected, result);
}


No.9 generated result --------------------------

@Test
public void convertToAnyBaseTest() {
    int inp = 15;
    int base = 2;
    String expected = "1111";
    
    String result = DecimalToAnyBase.convertToAnyBase(inp, base);
    
    assertEquals(expected, result);
}


No.10 generated result --------------------------

@Test
public void convertToAnyBaseTest() {
    int inp = 10;
    int base = 2;
    
    String expectedOutput = "1010";
    String actualOutput = DecimalToAnyBase.convertToAnyBase(inp, base);
    
    assertEquals(expectedOutput, actualOutput);
}


