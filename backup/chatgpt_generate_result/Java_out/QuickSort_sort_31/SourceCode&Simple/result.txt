Source code: 


@Override
public <T extends Comparable<T>> T[] sort(T[] array) {
    doSort(array, 0, array.length - 1);
    return array;
}



No.1 generated result --------------------------

package com.thealgorithms.sorts;

import org.junit.jupiter.api.*;
import static org.junit.jupiter.api.Assertions.*;

public class QuickSortTest {
    @Test
    public void sortTest() {
        QuickSort quickSort = new QuickSort();
        
        // Test case 1: Sorting an array of integers
        Integer[] array1 = {5, 3, 8, 1, 2};
        Integer[] expectedArray1 = {1, 2, 3, 5, 8};
        assertArrayEquals(expectedArray1, quickSort.sort(array1));
        
        // Test case 2: Sorting an array of strings
        String[] array2 = {"cat", "dog", "apple", "banana"};
        String[] expectedArray2 = {"apple", "banana", "cat", "dog"};
        assertArrayEquals(expectedArray2, quickSort.sort(array2));
        
        // Test case 3: Sorting an array of custom objects
        Person[] array3 = {new Person("Alice", 25), new Person("Bob", 20), new Person("Charlie", 30)};
        Person[] expectedArray3 = {new Person("Bob", 20), new Person("Alice", 25), new Person("Charlie", 30)};
        assertArrayEquals(expectedArray3, quickSort.sort(array3));
    }
}


No.2 generated result --------------------------

@Test
public void sortTest() {
    QuickSort quickSort = new QuickSort();
    Integer[] array = {5, 2, 8, 6, 1};
    Integer[] expected = {1, 2, 5, 6, 8};
    
    Integer[] actual = quickSort.sort(array);

    assertArrayEquals(expected, actual);
}


No.3 generated result --------------------------

package com.thealgorithms.sorts;

import org.junit.jupiter.api.*;
import static org.junit.jupiter.api.Assertions.*;

public class QuickSortTest {
    @Test
    public void sortTest() {
        QuickSort quickSort = new QuickSort();
        
        Integer[] inputArray = {5, 2, 8, 9, 1};
        Integer[] expectedOutput = {1, 2, 5, 8, 9};
        
        Integer[] sortedArray = quickSort.sort(inputArray);
        
        assertArrayEquals(expectedOutput, sortedArray);
    }
}


No.4 generated result --------------------------

@Test
public void sortTest() {
    QuickSort quickSort = new QuickSort();
    Integer[] array = {4, 2, 7, 1, 5};
    Integer[] sortedArray = quickSort.sort(array);
    Integer[] expectedArray = {1, 2, 4, 5, 7};
    assertArrayEquals(expectedArray, sortedArray);
}


No.5 generated result --------------------------

package com.thealgorithms.sorts;

import org.junit.jupiter.api.*;
import static org.junit.jupiter.api.Assertions.*;

public class QuickSortTest {
    @Test
    public void sortTest() {
        QuickSort quickSort = new QuickSort();
        Integer[] array = {5, 3, 8, 2, 1, 9, 4, 7, 6};
        Integer[] expected = {1, 2, 3, 4, 5, 6, 7, 8, 9};

        Integer[] result = quickSort.sort(array);

        assertArrayEquals(expected, result);
    }
}


No.6 generated result --------------------------

package com.thealgorithms.sorts;

import org.junit.jupiter.api.*;
import static org.junit.jupiter.api.Assertions.*;

public class QuickSortTest {
    @Test
    public void sortTest() {
        Integer[] array = {5, 3, 1, 2, 4};
        QuickSort quickSort = new QuickSort();
        Integer[] expected = {1, 2, 3, 4, 5};
        Integer[] result = quickSort.sort(array);
        assertArrayEquals(expected, result);
    }
}


No.7 generated result --------------------------

package com.thealgorithms.sorts;

import org.junit.jupiter.api.*;
import static org.junit.jupiter.api.Assertions.*;

public class QuickSortTest {
    @Test
    public void sortTest() {
        QuickSort quickSort = new QuickSort();
        Integer[] array = {5, 3, 2, 4, 1};
        Integer[] sortedArray = {1, 2, 3, 4, 5};
        assertArrayEquals(sortedArray, quickSort.sort(array));
    }
}


No.8 generated result --------------------------

package com.thealgorithms.sorts;

import org.junit.jupiter.api.*;
import static org.junit.jupiter.api.Assertions.*;

public class QuickSortTest {
    @Test
    public void sortTest() {
        Integer[] array = {5, 1, 4, 2, 8};
        QuickSort quickSort = new QuickSort();
        Integer[] sortedArray = quickSort.sort(array);
        Integer[] expectedArray = {1, 2, 4, 5, 8};
        assertArrayEquals(expectedArray, sortedArray);
    }
}


No.9 generated result --------------------------

package com.thealgorithms.sorts;

import org.junit.jupiter.api.*;
import static org.junit.jupiter.api.Assertions.*;

public class QuickSortTest {
    @Test
    public void sortTest() {
        QuickSort quickSort = new QuickSort();
        
        Integer[] array = {5, 2, 9, 1, 7};
        Integer[] expected = {1, 2, 5, 7, 9};
        
        Integer[] sortedArray = quickSort.sort(array);
        
        assertArrayEquals(expected, sortedArray);
    }
}


No.10 generated result --------------------------

@Test
public void sortTest() {
    QuickSort quickSort = new QuickSort();
    
    // Create input array
    Integer[] array = {5, 2, 8, 9, 1, 3};
    
    // Sort the array using QuickSort
    Integer[] sortedArray = quickSort.sort(array);
    
    // Verify that the array is sorted
    Integer[] expectedArray = {1, 2, 3, 5, 8, 9};
    assertArrayEquals(expectedArray, sortedArray);
}


