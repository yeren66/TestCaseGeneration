{
    "project_name": "Java",
    "file_name": "OctalToHexadecimal.java",
    "relative_path": "Java/src/main/java/com/thealgorithms/conversions/OctalToHexadecimal.java",
    "execute_path": "Java",
    "package": "com.thealgorithms.conversions",
    "docstring": "/**\n     * This method converts a Decimal number to a Hexadecimal number\n     *\n     * @param d The Decimal Number\n     * @return The Hexadecimal number\n     */",
    "source_code": "\npublic static String decimalToHex(int d) {\n    String digits = \"0123456789ABCDEF\";\n    if (d <= 0) {\n        return \"0\";\n    }\n    String hex = \"\";\n    while (d > 0) {\n        int digit = d % 16;\n        hex = digits.charAt(digit) + hex;\n        d = d / 16;\n    }\n    return hex;\n}\n",
    "class_name": "OctalToHexadecimal",
    "method_name": "decimalToHex",
    "arguments": [
        "int d"
    ],
    "generate_test": [
        "@Test\npublic void decimalToHexTest() {\n    // Test case 1: Test for decimal value 10\n    assertEquals(\"A\", decimalToHex(10));\n    \n    // Test case 2: Test for decimal value 15\n    assertEquals(\"F\", decimalToHex(15));\n    \n    // Test case 3: Test for decimal value 255\n    assertEquals(\"FF\", decimalToHex(255));\n    \n    // Test case 4: Test for decimal value 16\n    assertEquals(\"10\", decimalToHex(16));\n    \n    // Test case 5: Test for decimal value 0\n    assertEquals(\"0\", decimalToHex(0));\n}",
        "@Test\npublic void decimalToHexTest() {\n    // Test Case 1: decimalToHex(0) should return \"0\"\n    assertEquals(\"0\", OctalToHexadecimal.decimalToHex(0));\n    \n    // Test Case 2: decimalToHex(10) should return \"A\"\n    assertEquals(\"A\", OctalToHexadecimal.decimalToHex(10));\n    \n    // Test Case 3: decimalToHex(16) should return \"10\"\n    assertEquals(\"10\", OctalToHexadecimal.decimalToHex(16));\n    \n    // Test Case 4: decimalToHex(255) should return \"FF\"\n    assertEquals(\"FF\", OctalToHexadecimal.decimalToHex(255));\n    \n    // Test Case 5: decimalToHex(4096) should return \"1000\"\n    assertEquals(\"1000\", OctalToHexadecimal.decimalToHex(4096));\n}",
        "package com.thealgorithms.conversions;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class OctalToHexadecimalTest {\n    @Test\n    public void decimalToHexTest() {\n        // Test when d is positive\n        int d1 = 255;\n        String expected1 = \"FF\";\n        String actual1 = OctalToHexadecimal.decimalToHex(d1);\n        assertEquals(expected1, actual1);\n\n        // Test when d is 0\n        int d2 = 0;\n        String expected2 = \"0\";\n        String actual2 = OctalToHexadecimal.decimalToHex(d2);\n        assertEquals(expected2, actual2);\n\n        // Test when d is negative\n        int d3 = -15;\n        String expected3 = \"0\";\n        String actual3 = OctalToHexadecimal.decimalToHex(d3);\n        assertEquals(expected3, actual3);\n    }\n}",
        "@Test\npublic void decimalToHexTest() {\n    // Test case 1: d = 0\n    int d1 = 0;\n    String expected1 = \"0\";\n    String result1 = OctalToHexadecimal.decimalToHex(d1);\n    assertEquals(expected1, result1);\n\n    // Test case 2: d = 10\n    int d2 = 10;\n    String expected2 = \"A\";\n    String result2 = OctalToHexadecimal.decimalToHex(d2);\n    assertEquals(expected2, result2);\n\n    // Test case 3: d = 255\n    int d3 = 255;\n    String expected3 = \"FF\";\n    String result3 = OctalToHexadecimal.decimalToHex(d3);\n    assertEquals(expected3, result3);\n\n    // Test case 4: d = 4096\n    int d4 = 4096;\n    String expected4 = \"1000\";\n    String result4 = OctalToHexadecimal.decimalToHex(d4);\n    assertEquals(expected4, result4);\n}",
        "@Test\npublic void decimalToHexTest() {\n    // Test case 1: d = 0\n    int d1 = 0;\n    String expectedHex1 = \"0\";\n    String actualHex1 = OctalToHexadecimal.decimalToHex(d1);\n    assertEquals(expectedHex1, actualHex1);\n\n    // Test case 2: d = 10\n    int d2 = 10;\n    String expectedHex2 = \"A\";\n    String actualHex2 = OctalToHexadecimal.decimalToHex(d2);\n    assertEquals(expectedHex2, actualHex2);\n\n    // Test case 3: d = 16\n    int d3 = 16;\n    String expectedHex3 = \"10\";\n    String actualHex3 = OctalToHexadecimal.decimalToHex(d3);\n    assertEquals(expectedHex3, actualHex3);\n\n    // Test case 4: d = 255\n    int d4 = 255;\n    String expectedHex4 = \"FF\";\n    String actualHex4 = OctalToHexadecimal.decimalToHex(d4);\n    assertEquals(expectedHex4, actualHex4);\n\n    // Test case 5: d = -5\n    int d5 = -5;\n    String expectedHex5 = \"0\";\n    String actualHex5 = OctalToHexadecimal.decimalToHex(d5);\n    assertEquals(expectedHex5, actualHex5);\n}",
        "@Test\npublic void decimalToHexTest() {\n    // Test cases for positive numbers\n    assertEquals(\"0\", OctalToHexadecimal.decimalToHex(0));\n    assertEquals(\"1\", OctalToHexadecimal.decimalToHex(1));\n    assertEquals(\"A\", OctalToHexadecimal.decimalToHex(10));\n    assertEquals(\"FF\", OctalToHexadecimal.decimalToHex(255));\n    \n    // Test case for negative number\n    assertEquals(\"0\", OctalToHexadecimal.decimalToHex(-1));\n}",
        "@Test\npublic void decimalToHexTest() {\n    // Test case 1: Positive value\n    int input1 = 255;\n    String expectedResult1 = \"FF\";\n    String actualResult1 = OctalToHexadecimal.decimalToHex(input1);\n    assertEquals(expectedResult1, actualResult1, \"Input: \" + input1);\n    \n    // Test case 2: Zero value\n    int input2 = 0;\n    String expectedResult2 = \"0\";\n    String actualResult2 = OctalToHexadecimal.decimalToHex(input2);\n    assertEquals(expectedResult2, actualResult2, \"Input: \" + input2);\n    \n    // Test case 3: Negative value\n    int input3 = -10;\n    String expectedResult3 = \"0\";\n    String actualResult3 = OctalToHexadecimal.decimalToHex(input3);\n    assertEquals(expectedResult3, actualResult3, \"Input: \" + input3);\n}",
        "@Test\npublic void decimalToHexTest() {\n    int decimal = 255;\n    String expectedHex = \"FF\";\n    String actualHex = OctalToHexadecimal.decimalToHex(decimal);\n    assertEquals(expectedHex, actualHex);\n}",
        "@Test\npublic void decimalToHexTest() {\n    // Test case 1: d = 0\n    int d1 = 0;\n    String expected1 = \"0\";\n    String result1 = OctalToHexadecimal.decimalToHex(d1);\n    assertEquals(expected1, result1);\n    \n    // Test case 2: d = 10\n    int d2 = 10;\n    String expected2 = \"A\";\n    String result2 = OctalToHexadecimal.decimalToHex(d2);\n    assertEquals(expected2, result2);\n    \n    // Test case 3: d = 255\n    int d3 = 255;\n    String expected3 = \"FF\";\n    String result3 = OctalToHexadecimal.decimalToHex(d3);\n    assertEquals(expected3, result3);\n}",
        "@Test\npublic void decimalToHexTest() {\n    // Test case 1: decimalToHex(0) should return \"0\"\n    assertEquals(\"0\", OctalToHexadecimal.decimalToHex(0));\n\n    // Test case 2: decimalToHex(10) should return \"A\"\n    assertEquals(\"A\", OctalToHexadecimal.decimalToHex(10));\n\n    // Test case 3: decimalToHex(255) should return \"FF\"\n    assertEquals(\"FF\", OctalToHexadecimal.decimalToHex(255));\n\n    // Test case 4: decimalToHex(16) should return \"10\"\n    assertEquals(\"10\", OctalToHexadecimal.decimalToHex(16));\n}"
    ]
}