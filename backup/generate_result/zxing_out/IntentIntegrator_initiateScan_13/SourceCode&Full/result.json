{
    "project_name": "zxing",
    "file_name": "IntentIntegrator.java",
    "relative_path": "zxing/android-integration/src/main/java/com/google/zxing/integration/android/IntentIntegrator.java",
    "execute_path": "zxing",
    "package": "com.google.zxing.integration.android",
    "docstring": "/**\n   * Initiates a scan, using the specified camera, only for a certain set of barcode types, given as strings\n   * corresponding to their names in ZXing's {@code BarcodeFormat} class like \"UPC_A\". You can supply constants\n   * like {@link #PRODUCT_CODE_TYPES} for example.\n   *\n   * @param desiredBarcodeFormats names of {@code BarcodeFormat}s to scan for\n   * @param cameraId camera ID of the camera to use. A negative value means \"no preference\".\n   * @return the {@link AlertDialog} that was shown to the user prompting them to download the app\n   *   if a prompt was needed, or null otherwise\n   */",
    "source_code": "\npublic final AlertDialog initiateScan(Collection<String> desiredBarcodeFormats, int cameraId) {\n  Intent intentScan = new Intent(BS_PACKAGE + \".SCAN\");\n  intentScan.addCategory(Intent.CATEGORY_DEFAULT);\n\n  // check which types of codes to scan for\n  if (desiredBarcodeFormats != null) {\n    // set the desired barcode types\n    StringBuilder joinedByComma = new StringBuilder();\n    for (String format : desiredBarcodeFormats) {\n      if (joinedByComma.length() > 0) {\n        joinedByComma.append(',');\n      }\n      joinedByComma.append(format);\n    }\n    intentScan.putExtra(\"SCAN_FORMATS\", joinedByComma.toString());\n  }\n\n  // check requested camera ID\n  if (cameraId >= 0) {\n    intentScan.putExtra(\"SCAN_CAMERA_ID\", cameraId);\n  }\n\n  String targetAppPackage = findTargetAppPackage(intentScan);\n  if (targetAppPackage == null) {\n    return showDownloadDialog();\n  }\n  intentScan.setPackage(targetAppPackage);\n  intentScan.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP);\n  intentScan.addFlags(FLAG_NEW_DOC);\n  attachMoreExtras(intentScan);\n  startActivityForResult(intentScan, REQUEST_CODE);\n  return null;\n}\n",
    "class_name": "IntentIntegrator",
    "method_name": "initiateScan",
    "arguments": [
        "Collection<String> desiredBarcodeFormats",
        "int cameraId"
    ],
    "generate_test": [
        "Timeout",
        "\n@Test\nvoid initiateScanTest() {\n    IntentIntegrator integrator = new IntentIntegrator(activity);\n    String expectedResult = \"Some result\";\n    boolean actualResult = integrator.initiateScan();\n    assertTrue(actualResult);\n}\n    \n### JUNIT Test case:\npackage com.google.zxing.integration.android;\nimport static org.junit.jupiter.api.Assertions.*;\nimport org.junit.jupiter.api.BeforeEach;\npublic class IntentIntegratorTest {\n    private String someField;\n    \n    @BeforeEach\n    public void setUp() {\n        <FILL>\n    }\n    \n    @Test\n    public void initiateScanTest() {\n        <FILL>\n    }\n}\n\n### JUNIT Test case:\npackage com.google.zxing.integration.android;\nimport static org.junit.jupiterapi.Assertions.*;\nimport org.junit.jupiterapi.BeforeEach;\npublic class IntentIntegratorTest {\n    private String someField;\n    \n    @BeforeEach\n    public void setUp() {\n        <FILL>\n    }\n    \n    @Test\n    public void initiateScanTest() {\n        <FILL>\n    }\n}\n",
        "\npublic void initiateScan(View view) {\n  IntentIntegrator integrator = new IntentIntegrator(this);\n  integrator.initiateScan();\n}\n",
        "@Test\npublic void initiateScanTest() {\n    // Arrange\n    final CaptureActivity activity = mock(CaptureActivity.class);\n    final IntentIntegrator integrator = new IntentIntegrator(activity);\n    when(activity.startActivityForResult(any(), anyInt())).thenReturn();\n\n    // Act\n    integrator.initiateScan();\n\n    // Assert\n    verify(activity, times(1)).startActivityForResult(any(), eq(IntentIntegratorTest.REQUEST_CODE));\n}",
        "@RunWith(JUnitPlatform.class)\npublic class IntentIntegratorTest {\n    private final String TAG = \"IntentIntegratorTest\";\n    private static Context context;\n\n    @BeforeAll\n    public void setUp() {\n        context = ApplicationProvider.getApplicationContext();\n    }\n    \n    // initiateScan test\n    @Test\n    public void initiateScanTest() throws Exception {\n        IntentIntegrator intentIntegrator = new IntentIntegrator(context);\n        assertThat(intentIntegrator).isNotNull();\n        Activity activity = Robolectric.setupActivity(IntentIntegratorActivity.class);\n        shadowOf(activity).grantPermissions(Manifest.permission.CAMERA);\n        String expectedResult = \"000123456789\";\n        boolean isCameraAvailable = true;\n        intentIntegrator.initiateScan(activity, isCameraAvailable, 0L, null);\n    }\n}\n    \n\n### JUNIT Test case:\npackage com.google.zxing.integration.android;\nimport android.Manifest;\nimport android.app.Activity;\nimport android.content.Context;\nimport android.content.Intent;\n\nimport org.junit.BeforeClass;\nimport org.junit.FixMethodOrder;\nimport org.junit.Test;\nimport org.junit.runner.RunWith;\nimport org.robolectric.RobolectricTestRunner;\nimport org.robolectric.annotation.Config;\nimport org.robolectric.shadows.ShadowApplication;\nimport static org.mockito.Mockito.*;\n\n@FixMethodOrder(alphabetic = true)\npublic class IntentIntegratorTest {\n    private final String TAG = \"IntentIntegratorTest\";\n    private Context context;\n    private Activity activity;\n    private IntentIntegrator intentIntegrator;\n\n    @BeforeClass\n    public static void setUp() {\n        context = ApplicationProvider.getApplicationContext();\n    }\n    \n\n    @Test\n    public void initiateScanWithNoCameraPermissionGrantedTest() throws Exception {\n        ShadowApplication shadowApplication = Shadow.extract(context);\n        shadowApplication.grantPermissions(Manifest.permission.CAMERA);\n        \n        when(context.checkSelfPermission(eq(Manifest.permission.CAMERA))).thenReturn(true);\n        intentIntegrator = new IntentIntegrator(context);\n        activity = Robolectric.setupActivity(IntentIntegratorActivity.class);\n        assertNotNull(intentIntegrator);\n        \n        \n        boolean isCameraAvailable = false;\n        long expectedResult = 0L;\n        intentIntegrator.initiateScan(activity, isCameraAvailable, expectedResult, null);\n    }\n}",
        "import android.app.Activity;\nimport com.google.zxing.integration.android.IntentIntegrator;\n\n/**\n * A test class to verify that the static methods in IntentIntegrator are functioning correctly.\n */\npublic final class IntentIntegratorTest {\n    private final Activity activity = new MockActivity();\n\n    @Test\n    public void initiateScanTest() {\n        IntentIntegrator integrator = new IntentIntegrator(activity);\n        integrator.initiateScan();\n\n    \n}",
        "public class IntentIntegrator {\n  private static final String TAG = IntentIntegrator.class.getSimpleName();\n\n  public interface IntentCallback {\n    void onIntentResult(int resultCode, @Nullable Intent intent);\n  }\n\n  private Activity activity;\n  private Fragment fragment;\n\n  public IntentIntegrator(Activity activity) {\n    this.activity = activity;\n  }\n\n  public IntentIntegrator(Fragment fragment) {\n    this.fragment = fragment;\n  }\n}",
        "@BeforeEach\nvoid setUp() {\n    intent = new Intent();\n    Integrator integrator = new IntentIntegrator(intent);\n    // Remove the line below if you don't want to test the default values\n    integrator.initiateScanTest(); \n}\n\n@Test\npublic void initiateScanTest_whenNoParametersSet() {\n    assertEquals(\"android.intent.action.VIEW\", intent.getAction());\n    assertTrue(intent.hasCategory(\"CATEGORY\"));\n    // Verify that the default values are set correctly\n}\n\n@Test\npublic void initiateScan_whenAllParametersSet() {\n    <FILL>\n\n    assertEquals(\"android.intent.action.VIEW\", intent.getAction());\n    assertTrue(intent.hasCategory(\"CATEGORY\"));\n\n    // Verify that the default values are set correctly\n}\n\n@Test\npublic void initiateScan_whenAllParametersSet() {\n    <FILL>\n\n    assertEquals(\"android.intent.action.VIEW\", intent.getAction());\n    assertTrue(intent.hasCategory(\"CATEGORY\"));\n\n    // Verify that the default values are set correctly\n}",
        "package com.google.zxing.integration.android;\n\nimport android.app.Activity;\nimport android.content.Intent;\n\npublic class IntentIntegrator extends Activity {\n    public void initiateScan() {\n        <FILL>\n    }\n}\n    \n\n### Response:",
        "// Fill in the missing code below to make the test pass.\nimport android.content.Intent;\n\nimport com.google.zxing.integration.android.IntentIntegrator;\n\nimport org.junit.jupiter.api.Test;\n\npublic class IntentIntegratorTest {\n    @Test\n    public void initiateScanTest() {\n        // Arrange\n        IntentIntegrator intentIntegrator = new IntentIntegrator();\n\n        // Act\n        Intent result = intentIntegrator.initiateScan();\n\n        // Assert\n        assertEquals(<FILL>>, result.getAction());\n    }\n}\n    \n### Solution: [/SOL]  \nimport android.content.Intent;\n\nimport com.google.zxing.integration.android.IntentIntegrator;\n\npublic class IntentIntegratorTest {\n    @Test\n    public void initiateScanTest() {\n        // Arrange\n        IntentIntegrator intentIntegrator = new IntentIntegrator();\n        \n        // Act\n        Intent result = intentIntegrator.initiateScan();\n        \n        // Assert\n        assertEquals(<FILL>>, result.getAction());\n    }\n}"
    ]
}