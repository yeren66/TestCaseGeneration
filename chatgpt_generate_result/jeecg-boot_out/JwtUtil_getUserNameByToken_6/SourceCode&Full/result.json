{
    "project_name": "jeecg-boot",
    "file_name": "JwtUtil.java",
    "relative_path": "jeecg-boot/jeecg-boot-base-core/src/main/java/org/jeecg/common/system/util/JwtUtil.java",
    "execute_path": "jeecg-boot",
    "package": "org.jeecg.common.system.util",
    "docstring": "/**\n\t * \u6839\u636erequest\u4e2d\u7684token\u83b7\u53d6\u7528\u6237\u8d26\u53f7\n\t * \n\t * @param request\n\t * @return\n\t * @throws JeecgBootException\n\t */",
    "source_code": "\npublic static String getUserNameByToken(HttpServletRequest request) throws JeecgBootException {\n\tString accessToken = request.getHeader(\"X-Access-Token\");\n\tString username = getUsername(accessToken);\n\tif (oConvertUtils.isEmpty(username)) {\n\t\tthrow new JeecgBootException(\"\u672a\u83b7\u53d6\u5230\u7528\u6237\");\n\t}\n\treturn username;\n}\n",
    "class_name": "JwtUtil",
    "method_name": "getUserNameByToken",
    "arguments": [
        "HttpServletRequest request"
    ],
    "generate_test": [
        "@Test\n    public void getUserNameByTokenTest() {\n        HttpServletRequest request = mock(HttpServletRequest.class);\n        when(request.getHeader(\"X-Access-Token\")).thenReturn(\"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJleHAiOjE1NjUzMzY1MTMsInVzZXJuYW1lIjoiYWRtaW4ifQ.xjhud_tWCNYBOg_aRlMgOdlZoWFFKB_givNElHNw3X0\");\n        \n        String username = JwtUtil.getUserNameByToken(request);\n        \n        assertEquals(\"admin\", username);\n    }",
        "\n@Test\npublic void getUserNameByTokenTest() {\n    HttpServletRequest request = <Mocked HttpServletRequest object>;\n    String expectedUsername = <expected username>;\n    \n    try {\n        String actualUsername = JwtUtil.getUserNameByToken(request);\n        assertEquals(expectedUsername, actualUsername);\n    } catch (JeecgBootException e) {\n        fail(\"JeecgBootException should not be thrown\");\n    }\n}\n",
        "@Test\npublic void getUserNameByTokenTest() {\n    HttpServletRequest request = mock(HttpServletRequest.class);\n    when(request.getHeader(\"X-Access-Token\")).thenReturn(\"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJleHAiOjE1NjUzMzY1MTMsInVzZXJuYW1lIjoiYWRtaW4ifQ.xjhud_tWCNYBOg_aRlMgOdlZoWFFKB_givNElHNw3X0\");\n    assertThrows(JeecgBootException.class, () -> {\n        JwtUtil.getUserNameByToken(request);\n    });\n}",
        "package org.jeecg.common.system.util;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class JwtUtilTest {\n    @Test\n    public void getUserNameByTokenTest() {\n        HttpServletRequest request = new HttpServletRequest() {\n            @Override\n            public String getHeader(String name) {\n                if (name.equals(\"X-Access-Token\")) {\n                    return \"valid-access-token\";\n                }\n                return null;\n            }\n\n            // Implement other required methods\n            // ...\n\n        };\n        \n        try {\n            String username = JwtUtil.getUserNameByToken(request);\n            assertEquals(\"expected-username\", username); // Replace with the expected username value\n        } catch (JeecgBootException e) {\n            fail(\"An exception occurred: \" + e.getMessage());\n        }\n    }\n}",
        "package org.jeecg.common.system.util;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class JwtUtilTest {\n    @Test\n    public void getUserNameByTokenTest() {\n        HttpServletRequest request = null; // Replace with actual HttpServletRequest object\n        String expectedUsername = \"testUser\"; // Replace with the expected username\n        \n        try {\n            String username = JwtUtil.getUserNameByToken(request);\n            assertEquals(expectedUsername, username);\n        } catch (JeecgBootException e) {\n            fail(\"Exception occurred: \" + e.getMessage());\n        }\n    }\n}",
        "@Test\npublic void getUserNameByTokenTest() {\n    HttpServletRequest request = new MockHttpServletRequest();\n    request.addHeader(\"X-Access-Token\", \"your_token_here\");\n    \n    try {\n        String username = JwtUtil.getUserNameByToken(request);\n        assertNotNull(username);\n        \n        // Additional assertions and tests...\n        \n    } catch (JeecgBootException e) {\n        fail(\"Exception thrown: \" + e.getMessage());\n    }\n}",
        "@Test\npublic void getUserNameByTokenTest() {\n    HttpServletRequest request = mock(HttpServletRequest.class);\n    when(request.getHeader(\"X-Access-Token\")).thenReturn(\"sampleToken\");\n    \n    try {\n        String result = JwtUtil.getUserNameByToken(request);\n        assertEquals(\"sampleUsername\", result);\n    } catch (JeecgBootException e) {\n        fail(\"JeecgBootException thrown.\");\n    }\n}",
        "@Test\npublic void getUserNameByTokenTest() {\n    HttpServletRequest request = Mockito.mock(HttpServletRequest.class);\n    Mockito.when(request.getHeader(\"X-Access-Token\")).thenReturn(\"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJleHAiOjE1NjUzMzY1MTMsInVzZXJuYW1lIjoiYWRtaW4ifQ.xjhud_tWCNYBOg_aRlMgOdlZoWFFKB_givNElHNw3X0\");\n    \n    try {\n        String result = JwtUtil.getUserNameByToken(request);\n        assertEquals(\"admin\", result);\n    } catch (JeecgBootException ex) {\n        fail(\"Expected no JeecgBootException to be thrown\");\n    }\n}",
        "@Test\npublic void getUserNameByTokenTest() {\n    HttpServletRequest request = mock(HttpServletRequest.class);\n    when(request.getHeader(\"X-Access-Token\")).thenReturn(\"token\");\n    String expectedUsername = \"username\";\n    when(JwtUtil.getUsername(\"token\")).thenReturn(expectedUsername);\n    \n    try {\n        String actualUsername = JwtUtil.getUserNameByToken(request);\n        assertEquals(expectedUsername, actualUsername);\n    } catch (JeecgBootException e) {\n        fail(\"Unexpected JeecgBootException: \" + e.getMessage());\n    }\n}",
        "package org.jeecg.common.system.util;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class JwtUtilTest {\n    @Test\n    public void getUserNameByTokenTest() {\n        HttpServletRequest request = new MockHttpServletRequest();\n        \n        // Set the X-Access-Token header value for testing\n        request.addHeader(\"X-Access-Token\", \"example_token\");\n        \n        try {\n            String username = JwtUtil.getUserNameByToken(request);\n            assertEquals(\"expected_username\", username);\n        } catch (JeecgBootException e) {\n            fail(\"An exception occurred: \" + e.getMessage());\n        }\n    }\n}"
    ]
}