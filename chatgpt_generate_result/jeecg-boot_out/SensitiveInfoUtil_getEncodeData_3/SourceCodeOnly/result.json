{
    "project_name": "jeecg-boot",
    "file_name": "SensitiveInfoUtil.java",
    "relative_path": "jeecg-boot/jeecg-boot-base-core/src/main/java/org/jeecg/common/desensitization/util/SensitiveInfoUtil.java",
    "execute_path": "jeecg-boot",
    "package": "org.jeecg.common.desensitization.util",
    "docstring": "/**\n     * \u5904\u7406\u6570\u636e \u83b7\u53d6\u52a0\u5bc6\u540e\u7684\u6570\u636e \u6216\u662f\u683c\u5f0f\u5316\u540e\u7684\u6570\u636e\n     * @param data \u5b57\u7b26\u4e32\n     * @param sensitiveEnum \u7c7b\u578b\n     * @return \u5904\u7406\u540e\u7684\u5b57\u7b26\u4e32\n     */",
    "source_code": "\npublic static String getEncodeData(String data, SensitiveEnum sensitiveEnum){\n    String result;\n    switch (sensitiveEnum){\n        case ENCODE:\n            try {\n                result = AesEncryptUtil.encrypt(data);\n            } catch (Exception exception) {\n                log.error(\"\u6570\u636e\u52a0\u5bc6\u9519\u8bef\", exception.getMessage());\n                result = data;\n            }\n            break;\n        case CHINESE_NAME:\n            result = chineseName(data);\n            break;\n        case ID_CARD:\n            result = idCardNum(data);\n            break;\n        case FIXED_PHONE:\n            result = fixedPhone(data);\n            break;\n        case MOBILE_PHONE:\n            result = mobilePhone(data);\n            break;\n        case ADDRESS:\n            result = address(data, 3);\n            break;\n        case EMAIL:\n            result = email(data);\n            break;\n        case BANK_CARD:\n            result = bankCard(data);\n            break;\n        case CNAPS_CODE:\n            result = cnapsCode(data);\n            break;\n        default:\n            result = data;\n    }\n    return result;\n}\n",
    "class_name": "SensitiveInfoUtil",
    "method_name": "getEncodeData",
    "arguments": [
        "String data",
        "SensitiveEnum sensitiveEnum"
    ],
    "generate_test": [
        "@Test\npublic void getEncodeDataTest() {\n    // Test Data\n    String data = \"Hello World\";\n    SensitiveEnum sensitiveEnum = SensitiveEnum.ENCODE;\n    \n    // Expected Result\n    String expectedResult = \"encryptedData\";\n    \n    // Actual Result\n    String actualResult = SensitiveInfoUtil.getEncodeData(data, sensitiveEnum);\n    \n    // Assertion\n    assertEquals(expectedResult, actualResult);\n}",
        "package org.jeecg.common.desensitization.util;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class SensitiveInfoUtilTest {\n    @Test\n    public void getEncodeDataTest() {\n        String encodedData = SensitiveInfoUtil.getEncodeData(\"exampleData\", SensitiveEnum.ENCODE);\n        assertNotNull(encodedData);\n        // Add additional assertions as needed\n    }\n}",
        "    @Test\n    public void getEncodeDataTest() {\n        String data = \"test_data\";\n        \n        // Test case for ENCODE sensitiveEnum\n        \n        SensitiveEnum encodeSensitiveEnum = SensitiveEnum.ENCODE;\n        String expectedEncodeResult;\n        try {\n            expectedEncodeResult = AesEncryptUtil.encrypt(data);\n        } catch (Exception exception) {\n            expectedEncodeResult = data;\n        }\n        String actualEncodeResult = SensitiveInfoUtil.getEncodeData(data, encodeSensitiveEnum);\n        assertEquals(expectedEncodeResult, actualEncodeResult);\n        \n        // Test case for CHINESE_NAME sensitiveEnum\n        \n        SensitiveEnum chineseNameSensitiveEnum = SensitiveEnum.CHINESE_NAME;\n        String expectedChineseNameResult = SensitiveInfoUtil.chineseName(data);\n        String actualChineseNameResult = SensitiveInfoUtil.getEncodeData(data, chineseNameSensitiveEnum);\n        assertEquals(expectedChineseNameResult, actualChineseNameResult);\n        \n        // Test case for ID_CARD sensitiveEnum\n        \n        SensitiveEnum idCardSensitiveEnum = SensitiveEnum.ID_CARD;\n        String expectedIdCardResult = SensitiveInfoUtil.idCardNum(data);\n        String actualIdCardResult = SensitiveInfoUtil.getEncodeData(data, idCardSensitiveEnum);\n        assertEquals(expectedIdCardResult, actualIdCardResult);\n        \n        // Test case for FIXED_PHONE sensitiveEnum\n        \n        SensitiveEnum fixedPhoneSensitiveEnum = SensitiveEnum.FIXED_PHONE;\n        String expectedFixedPhoneResult = SensitiveInfoUtil.fixedPhone(data);\n        String actualFixedPhoneResult = SensitiveInfoUtil.getEncodeData(data, fixedPhoneSensitiveEnum);\n        assertEquals(expectedFixedPhoneResult, actualFixedPhoneResult);\n        \n        // Test case for MOBILE_PHONE sensitiveEnum\n        \n        SensitiveEnum mobilePhoneSensitiveEnum = SensitiveEnum.MOBILE_PHONE;\n        String expectedMobilePhoneResult = SensitiveInfoUtil.mobilePhone(data);\n        String actualMobilePhoneResult = SensitiveInfoUtil.getEncodeData(data, mobilePhoneSensitiveEnum);\n        assertEquals(expectedMobilePhoneResult, actualMobilePhoneResult);\n        \n        // Test case for ADDRESS sensitiveEnum\n        \n        SensitiveEnum addressSensitiveEnum = SensitiveEnum.ADDRESS;\n        int addressLevel = 3;\n        String expectedAddressResult = SensitiveInfoUtil.address(data, addressLevel);\n        String actualAddressResult = SensitiveInfoUtil.getEncodeData(data, addressSensitiveEnum);\n        assertEquals(expectedAddressResult, actualAddressResult);\n        \n        // Test case for EMAIL sensitiveEnum\n        \n        SensitiveEnum emailSensitiveEnum = SensitiveEnum.EMAIL;\n        String expectedEmailResult = SensitiveInfoUtil.email(data);\n        String actualEmailResult = SensitiveInfoUtil.getEncodeData(data, emailSensitiveEnum);\n        assertEquals(expectedEmailResult, actualEmailResult);\n        \n        // Test case for BANK_CARD sensitiveEnum\n        \n        SensitiveEnum bankCardSensitiveEnum = SensitiveEnum.BANK_CARD;\n        String expectedBankCardResult = SensitiveInfoUtil.bankCard(data);\n        String actualBankCardResult = SensitiveInfoUtil.getEncodeData(data, bankCardSensitiveEnum);\n        assertEquals(expectedBankCardResult, actualBankCardResult);\n        \n        // Test case for CNAPS_CODE sensitiveEnum\n        \n        SensitiveEnum cnapsCodeSensitiveEnum = SensitiveEnum.CNAPS_CODE;\n        String expectedCnapsCodeResult = SensitiveInfoUtil.cnapsCode(data);\n        String actualCnapsCodeResult = SensitiveInfoUtil.getEncodeData(data, cnapsCodeSensitiveEnum);\n        assertEquals(expectedCnapsCodeResult, actualCnapsCodeResult);\n        \n        // Test case for default sensitiveEnum\n        \n        SensitiveEnum defaultSensitiveEnum = SensitiveEnum.DEFAULT;\n        String expectedDefaultResult = data;\n        String actualDefaultResult = SensitiveInfoUtil.getEncodeData(data, defaultSensitiveEnum);\n        assertEquals(expectedDefaultResult, actualDefaultResult);\n    }",
        "package org.jeecg.common.desensitization.util;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class SensitiveInfoUtilTest {\n    @Test\n    public void getEncodeDataTest() {\n        String result = SensitiveInfoUtil.getEncodeData(\"test data\", SensitiveEnum.ENCODE);\n        assertNotNull(result);\n        // Additional assertions on the result can be added here\n    }\n}",
        "package org.jeecg.common.desensitization.util;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class SensitiveInfoUtilTest {\n    @Test\n    public void getEncodeDataTest() {\n        // Test for SensitiveEnum.ENCODE\n        String data1 = \"testData1\";\n        SensitiveEnum sensitiveEnum1 = SensitiveEnum.ENCODE;\n        String expectedResult1 = \"\";\n        // Add the expected value for data encryption\n        try {\n            expectedResult1 = AesEncryptUtil.encrypt(data1);\n        } catch (Exception exception) {\n            log.error(\"\u6570\u636e\u52a0\u5bc6\u9519\u8bef\", exception.getMessage());\n            expectedResult1 = data1;\n        }\n        String actualResult1 = SensitiveInfoUtil.getEncodeData(data1, sensitiveEnum1);\n        assertEquals(expectedResult1, actualResult1);\n\n        // Test for SensitiveEnum.CHINESE_NAME\n        String data2 = \"\u5f20\u4e09\";\n        SensitiveEnum sensitiveEnum2 = SensitiveEnum.CHINESE_NAME;\n        String expectedResult2 = \"\";\n        // Add the expected value for Chinese name\n        expectedResult2 = SensitiveInfoUtil.chineseName(data2);\n        String actualResult2 = SensitiveInfoUtil.getEncodeData(data2, sensitiveEnum2);\n        assertEquals(expectedResult2, actualResult2);\n\n        // Test for SensitiveEnum.ID_CARD\n        // Add similar test cases for the remaining options\n        \n        // Test for SensitiveEnum.BANK_CARD\n        // Test for SensitiveEnum.CNAPS_CODE\n        // Test for default case\n    }\n}",
        "package org.jeecg.common.desensitization.util;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class SensitiveInfoUtilTest {\n    @Test\n    public void getEncodeDataTest() {\n        // Test case for ENCODE sensitive type\n        String data1 = \"sensitive data\";\n        SensitiveEnum sensitiveEnum1 = SensitiveEnum.ENCODE;\n        String expectedResult1 = \"encrypted data\";\n        String actualResult1 = SensitiveInfoUtil.getEncodeData(data1, sensitiveEnum1);\n        assertEquals(expectedResult1, actualResult1);\n        \n        // Test case for CHINESE_NAME sensitive type\n        String data2 = \"\u59d3\u540d\";\n        SensitiveEnum sensitiveEnum2 = SensitiveEnum.CHINESE_NAME;\n        String expectedResult2 = \"\u5f20*\";\n        String actualResult2 = SensitiveInfoUtil.getEncodeData(data2, sensitiveEnum2);\n        assertEquals(expectedResult2, actualResult2);\n        \n        // Test case for ID_CARD sensitive type\n        String data3 = \"410102200001010058\";\n        SensitiveEnum sensitiveEnum3 = SensitiveEnum.ID_CARD;\n        String expectedResult3 = \"410***********0058\";\n        String actualResult3 = SensitiveInfoUtil.getEncodeData(data3, sensitiveEnum3);\n        assertEquals(expectedResult3, actualResult3);\n        \n        // Test case for FIXED_PHONE sensitive type\n        String data4 = \"073185624789\";\n        SensitiveEnum sensitiveEnum4 = SensitiveEnum.FIXED_PHONE;\n        String expectedResult4 = \"0731********\";\n        String actualResult4 = SensitiveInfoUtil.getEncodeData(data4, sensitiveEnum4);\n        assertEquals(expectedResult4, actualResult4);\n        \n        // Test case for MOBILE_PHONE sensitive type\n        String data5 = \"13812345678\";\n        SensitiveEnum sensitiveEnum5 = SensitiveEnum.MOBILE_PHONE;\n        String expectedResult5 = \"138****5678\";\n        String actualResult5 = SensitiveInfoUtil.getEncodeData(data5, sensitiveEnum5);\n        assertEquals(expectedResult5, actualResult5);\n        \n        // Test case for ADDRESS sensitive type\n        String data6 = \"123 Main Street\";\n        SensitiveEnum sensitiveEnum6 = SensitiveEnum.ADDRESS;\n        String expectedResult6 = \"123 Main Street\";\n        String actualResult6 = SensitiveInfoUtil.getEncodeData(data6, sensitiveEnum6);\n        assertEquals(expectedResult6, actualResult6);\n        \n        // Test case for EMAIL sensitive type\n        String data7 = \"test@example.com\";\n        SensitiveEnum sensitiveEnum7 = SensitiveEnum.EMAIL;\n        String expectedResult7 = \"t***@example.com\";\n        String actualResult7 = SensitiveInfoUtil.getEncodeData(data7, sensitiveEnum7);\n        assertEquals(expectedResult7, actualResult7);\n        \n        // Test case for BANK_CARD sensitive type\n        String data8 = \"6222021001234567890\";\n        SensitiveEnum sensitiveEnum8 = SensitiveEnum.BANK_CARD;\n        String expectedResult8 = \"6222************7890\";\n        String actualResult8 = SensitiveInfoUtil.getEncodeData(data8, sensitiveEnum8);\n        assertEquals(expectedResult8, actualResult8);\n        \n        // Test case for CNAPS_CODE sensitive type\n        String data9 = \"ABC123456789\";\n        SensitiveEnum sensitiveEnum9 = SensitiveEnum.CNAPS_CODE;\n        String expectedResult9 = \"ABC*********\";\n        String actualResult9 = SensitiveInfoUtil.getEncodeData(data9, sensitiveEnum9);\n        assertEquals(expectedResult9, actualResult9);\n    }\n}",
        "package org.jeecg.common.desensitization.util;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class SensitiveInfoUtilTest {\n    @Test\n    public void getEncodeDataTest() {\n        String data = \"sensitive data\";\n        SensitiveEnum sensitiveEnum = SensitiveEnum.ENCODE;\n        String expectedResult = \"encrypted data\";\n        \n        String actualResult = SensitiveInfoUtil.getEncodeData(data, sensitiveEnum);\n        \n        assertEquals(expectedResult, actualResult);\n    }\n}",
        "@Test\npublic void getEncodeDataTest() {\n    String data = \"sensitiveData\";\n    SensitiveEnum sensitiveEnum = SensitiveEnum.ENCODE;\n    String expectedResult = \"\";\n    \n    try {\n        expectedResult = AesEncryptUtil.encrypt(data);\n    } catch (Exception exception) {\n        log.error(\"\u6570\u636e\u52a0\u5bc6\u9519\u8bef\", exception.getMessage());\n        expectedResult = data;\n    }\n    \n    String result = SensitiveInfoUtil.getEncodeData(data, sensitiveEnum);\n    \n    assertEquals(expectedResult, result);\n}",
        "@Test\npublic void getEncodeDataTest() {\n    String data = \"Hello World\";\n    String expected = AesEncryptUtil.encrypt(data);\n    String actual = SensitiveInfoUtil.getEncodeData(data, SensitiveEnum.ENCODE);\n    assertEquals(expected, actual);\n}",
        "package org.jeecg.common.desensitization.util;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class SensitiveInfoUtilTest {\n    @Test\n    public void getEncodeDataTest() {\n        // Test case for SensitiveEnum.ENCODE\n        String data = \"sensitive data\";\n        String expectedEncryptedData = \"encrypted data\"; // Replace with expected encrypted data\n        String actualEncryptedData = SensitiveInfoUtil.getEncodeData(data, SensitiveEnum.ENCODE);\n        assertEquals(expectedEncryptedData, actualEncryptedData);\n\n        // Test case for SensitiveEnum.CHINESE_NAME\n        data = \"chinese name\";\n        String expectedChineseName = \"\u2026\"; // Replace with expected obfuscated chinese name\n        String actualChineseName = SensitiveInfoUtil.getEncodeData(data, SensitiveEnum.CHINESE_NAME);\n        assertEquals(expectedChineseName, actualChineseName);\n\n        // Test case for SensitiveEnum.ID_CARD\n        data = \"id card number\";\n        String expectedIdCard = \"\u2026\"; // Replace with expected obfuscated id card number\n        String actualIdCard = SensitiveInfoUtil.getEncodeData(data, SensitiveEnum.ID_CARD);\n        assertEquals(expectedIdCard, actualIdCard);\n\n        // Add more test cases for other SensitiveEnum values...\n\n    }\n}"
    ]
}