{
    "project_name": "jeecg-boot",
    "file_name": "SensitiveInfoUtil.java",
    "relative_path": "jeecg-boot/jeecg-boot-base-core/src/main/java/org/jeecg/common/desensitization/util/SensitiveInfoUtil.java",
    "execute_path": "jeecg-boot",
    "package": "org.jeecg.common.desensitization.util",
    "docstring": "/**\n     * \u5904\u7406\u6570\u636e \u83b7\u53d6\u52a0\u5bc6\u540e\u7684\u6570\u636e \u6216\u662f\u683c\u5f0f\u5316\u540e\u7684\u6570\u636e\n     * @param data \u5b57\u7b26\u4e32\n     * @param sensitiveEnum \u7c7b\u578b\n     * @return \u5904\u7406\u540e\u7684\u5b57\u7b26\u4e32\n     */",
    "source_code": "\npublic static String getEncodeData(String data, SensitiveEnum sensitiveEnum){\n    String result;\n    switch (sensitiveEnum){\n        case ENCODE:\n            try {\n                result = AesEncryptUtil.encrypt(data);\n            } catch (Exception exception) {\n                log.error(\"\u6570\u636e\u52a0\u5bc6\u9519\u8bef\", exception.getMessage());\n                result = data;\n            }\n            break;\n        case CHINESE_NAME:\n            result = chineseName(data);\n            break;\n        case ID_CARD:\n            result = idCardNum(data);\n            break;\n        case FIXED_PHONE:\n            result = fixedPhone(data);\n            break;\n        case MOBILE_PHONE:\n            result = mobilePhone(data);\n            break;\n        case ADDRESS:\n            result = address(data, 3);\n            break;\n        case EMAIL:\n            result = email(data);\n            break;\n        case BANK_CARD:\n            result = bankCard(data);\n            break;\n        case CNAPS_CODE:\n            result = cnapsCode(data);\n            break;\n        default:\n            result = data;\n    }\n    return result;\n}\n",
    "class_name": "SensitiveInfoUtil",
    "method_name": "getEncodeData",
    "arguments": [
        "String data",
        "SensitiveEnum sensitiveEnum"
    ],
    "generate_test": [
        "@Test\npublic void getEncodeDataTest() {\n    String data = \"SomeSensitiveData\";\n    SensitiveEnum sensitiveEnum = SensitiveEnum.ENCODE;\n    String expected = \"EncodedData\";\n\n    String result = SensitiveInfoUtil.getEncodeData(data, sensitiveEnum);\n\n    assertEquals(expected, result);\n}",
        "@Test\npublic void getEncodeDataTest() {\n    String data = \"test data\";\n    SensitiveEnum sensitiveEnum = SensitiveEnum.ENCODE;\n    String expected = \"encrypted data\";\n    String result = SensitiveInfoUtil.getEncodeData(data, sensitiveEnum);\n    assertEquals(expected, result);\n}",
        "@Test\npublic void getEncodeDataTest() {\n    String data = \"1234567890\";\n    SensitiveEnum sensitiveEnum = SensitiveEnum.ENCODE;\n    String expected = \"encryptedData\";\n    String actual = SensitiveInfoUtil.getEncodeData(data, sensitiveEnum);\n    assertEquals(expected, actual);\n}",
        "@Test\npublic void getEncodeDataTest() {\n    // Test ENCODE case\n    String data1 = \"some data\";\n    SensitiveEnum sensitiveEnum1 = SensitiveEnum.ENCODE;\n    String encryptedData1 = SensitiveInfoUtil.getEncodeData(data1, sensitiveEnum1);\n    assertNotNull(encryptedData1);\n    // Add assertion to check if data1 is encrypted correctly\n    \n    // Test CHINESE_NAME case\n    String data2 = \"\u674e\u56db\";\n    SensitiveEnum sensitiveEnum2 = SensitiveEnum.CHINESE_NAME;\n    String processedData2 = SensitiveInfoUtil.getEncodeData(data2, sensitiveEnum2);\n    assertNotNull(processedData2);\n    // Add assertion to check if data2 is processed correctly\n    \n    // Test other cases (ID_CARD, FIXED_PHONE, MOBILE_PHONE, ADDRESS, EMAIL, BANK_CARD, CNAPS_CODE)\n    // Use the same pattern to test the remaining cases\n    \n}",
        "package org.jeecg.common.desensitization.util;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class SensitiveInfoUtilTest {\n    @Test\n    public void getEncodeDataTest() {\n        // Test case for SensitiveEnum.ENCODE\n        String encodedData = SensitiveInfoUtil.getEncodeData(\"sensitive data\", SensitiveEnum.ENCODE);\n        assertEquals(\"encrypted data\", encodedData); // Replace \"encrypted data\" with the expected encrypted string\n\n        // Test case for SensitiveEnum.CHINESE_NAME\n        String chineseNameData = SensitiveInfoUtil.getEncodeData(\"\u5f20\u4e09\", SensitiveEnum.CHINESE_NAME);\n        assertEquals(\"\u5f20*\", chineseNameData); // Replace \"\u5f20*\" with the expected format for Chinese name\n\n        // Test case for SensitiveEnum.ID_CARD\n        String idCardData = SensitiveInfoUtil.getEncodeData(\"123456789012345678\", SensitiveEnum.ID_CARD);\n        assertEquals(\"************5678\", idCardData); // Replace \"************5678\" with the expected format for ID card\n\n        // Test case for SensitiveEnum.FIXED_PHONE\n        String fixedPhoneData = SensitiveInfoUtil.getEncodeData(\"021-12345678\", SensitiveEnum.FIXED_PHONE);\n        assertEquals(\"****5678\", fixedPhoneData); // Replace \"****5678\" with the expected format for fixed phone number\n\n        // Test case for SensitiveEnum.MOBILE_PHONE\n        String mobilePhoneData = SensitiveInfoUtil.getEncodeData(\"13812345678\", SensitiveEnum.MOBILE_PHONE);\n        assertEquals(\"138******5678\", mobilePhoneData); // Replace \"138******5678\" with the expected format for mobile phone number\n\n        // Test case for SensitiveEnum.ADDRESS\n        String addressData = SensitiveInfoUtil.getEncodeData(\"\u5317\u4eac\u5e02\u671d\u9633\u533a\u67d0\u67d0\u8857\u9053123\u53f7\", SensitiveEnum.ADDRESS);\n        assertEquals(\"\u5317\u4eac\u5e02\u671d\u9633\u533a****\", addressData); // Replace \"\u5317\u4eac\u5e02\u671d\u9633\u533a****\" with the expected format for address\n\n        // Test case for SensitiveEnum.EMAIL\n        String emailData = SensitiveInfoUtil.getEncodeData(\"test@example.com\", SensitiveEnum.EMAIL);\n        assertEquals(\"t**@example.com\", emailData); // Replace \"t**@example.com\" with the expected format for email\n\n        // Test case for SensitiveEnum.BANK_CARD\n        String bankCardData = SensitiveInfoUtil.getEncodeData(\"6222600123456789\", SensitiveEnum.BANK_CARD);\n        assertEquals(\"6222600**********6789\", bankCardData); // Replace \"6222600**********6789\" with the expected format for bank card number\n        \n        // Test case for SensitiveEnum.CNAPS_CODE\n        String cnapsCodeData = SensitiveInfoUtil.getEncodeData(\"12345678\", SensitiveEnum.CNAPS_CODE);\n        assertEquals(\"12********\", cnapsCodeData); // Replace \"12********\" with the expected format for cnaps code\n\n        // Test case for default\n        String defaultData = SensitiveInfoUtil.getEncodeData(\"some data\", SensitiveEnum.UNKNOWN);\n        assertEquals(\"some data\", defaultData); // Replace \"some data\" with the expected default value\n    }\n}",
        "@Test\npublic void getEncodeDataTest() {\n    String data = \"sensitive data\";\n    SensitiveEnum sensitiveEnum = SensitiveEnum.ENCODE;\n    String expectedResult = \"encrypted data\";\n    \n    String result = SensitiveInfoUtil.getEncodeData(data, sensitiveEnum);\n    \n    assertEquals(expectedResult, result);\n}",
        "@Test\npublic void getEncodeDataTest() {\n    // Create test data\n    String data = \"Sensitive Data\";\n    SensitiveEnum sensitiveEnum = SensitiveEnum.ENCODE;\n    \n    // Call the method under test\n    String result = SensitiveInfoUtil.getEncodeData(data, sensitiveEnum);\n    \n    // Assert the result\n    assertNotNull(result);\n    // Add more assertions as needed\n}",
        "@Test\npublic void getEncodeDataTest() {\n    String data = \"1234567890\";\n    SensitiveEnum sensitiveEnum = SensitiveEnum.ENCODE;\n    String expectedResult = \"encryptedData\";\n    \n    String result = SensitiveInfoUtil.getEncodeData(data, sensitiveEnum);\n    \n    assertEquals(expectedResult, result);\n}",
        "@Test\npublic void getEncodeDataTest() {\n    // Test ENCODE case\n    String result1 = SensitiveInfoUtil.getEncodeData(\"data\", SensitiveEnum.ENCODE);\n    assertEquals(<EXPECTED_VALUE>, result1);\n    \n    // Test CHINESE_NAME case\n    String result2 = SensitiveInfoUtil.getEncodeData(\"data\", SensitiveEnum.CHINESE_NAME);\n    assertEquals(<EXPECTED_VALUE>, result2);\n    \n    // Test ID_CARD case\n    String result3 = SensitiveInfoUtil.getEncodeData(\"data\", SensitiveEnum.ID_CARD);\n    assertEquals(<EXPECTED_VALUE>, result3);\n    \n    // Test FIXED_PHONE case\n    String result4 = SensitiveInfoUtil.getEncodeData(\"data\", SensitiveEnum.FIXED_PHONE);\n    assertEquals(<EXPECTED_VALUE>, result4);\n    \n    // Test MOBILE_PHONE case\n    String result5 = SensitiveInfoUtil.getEncodeData(\"data\", SensitiveEnum.MOBILE_PHONE);\n    assertEquals(<EXPECTED_VALUE>, result5);\n    \n    // Test ADDRESS case\n    String result6 = SensitiveInfoUtil.getEncodeData(\"data\", SensitiveEnum.ADDRESS);\n    assertEquals(<EXPECTED_VALUE>, result6);\n    \n    // Test EMAIL case\n    String result7 = SensitiveInfoUtil.getEncodeData(\"data\", SensitiveEnum.EMAIL);\n    assertEquals(<EXPECTED_VALUE>, result7);\n    \n    // Test BANK_CARD case\n    String result8 = SensitiveInfoUtil.getEncodeData(\"data\", SensitiveEnum.BANK_CARD);\n    assertEquals(<EXPECTED_VALUE>, result8);\n    \n    // Test CNAPS_CODE case\n    String result9 = SensitiveInfoUtil.getEncodeData(\"data\", SensitiveEnum.CNAPS_CODE);\n    assertEquals(<EXPECTED_VALUE>, result9);",
        "@Test\npublic void getEncodeDataTest() {\n    String result = SensitiveInfoUtil.getEncodeData(\"test data\", SensitiveEnum.ENCODE);\n    assertEquals(\"expected encrypted data\", result);\n}"
    ]
}