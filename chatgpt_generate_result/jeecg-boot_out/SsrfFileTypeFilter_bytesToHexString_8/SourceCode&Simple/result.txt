Source code: 


private static String bytesToHexString(byte[] src) {
    StringBuilder stringBuilder = new StringBuilder();
    if (src == null || src.length <= 0) {
        return null;
    }
    for (int i = 0; i < src.length; i++) {
        int v = src[i] & 0xFF;
        String hv = Integer.toHexString(v);
        if (hv.length() < 2) {
            stringBuilder.append(0);
        }
        stringBuilder.append(hv);
    }
    return stringBuilder.toString();
}



No.1 generated result --------------------------

@Test
public void bytesToHexStringTest() {
    byte[] src = {65, 66, 67};
    String expected = "414243";
    String result = SsrfFileTypeFilter.bytesToHexString(src);
    assertEquals(expected, result);
}


No.2 generated result --------------------------

@Test
public void bytesToHexStringTest() {
    byte[] src = { 0x12, 0x34, 0x56, 0x78 };
    String expected = "12345678";
    String result = SsrfFileTypeFilter.bytesToHexString(src);
    assertEquals(expected, result);
}


No.3 generated result --------------------------

@Test
public void bytesToHexStringTest() {
    byte[] bytes = {10, 20, 30, 40};
    String expected = "0a141e28";
    
    String result = SsrfFileTypeFilter.bytesToHexString(bytes);

    assertEquals(expected, result);
}


No.4 generated result --------------------------

@Test
public void bytesToHexStringTest() {
    byte[] src = new byte[]{10, 20, 30, 40, 50};
    String expected = "0a141e2832";
    
    String result = SsrfFileTypeFilter.bytesToHexString(src);
    
    assertEquals(expected, result);
}


No.5 generated result --------------------------

@Test
public void bytesToHexStringTest() {
    byte[] input = {65, 66, 67};
    String expected = "414243";
    String actual = SsrfFileTypeFilter.bytesToHexString(input);
    assertEquals(expected, actual);
}


No.6 generated result --------------------------

package org.jeecg.common.util.filter;

import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

public class SsrfFileTypeFilterTest {
    @Test
    public void bytesToHexStringTest() {
        byte[] src = {10, 20, 30, 40};
        String expected = "0a141e28";
    
        String result = SsrfFileTypeFilter.bytesToHexString(src);
    
        Assertions.assertEquals(expected, result);
    }
}


No.7 generated result --------------------------

@Test
public void bytesToHexStringTest() {
    byte[] src = new byte[]{10, 20, 30, 40, 50};
    String expected = "0a141e2832";
    String result = SsrfFileTypeFilter.bytesToHexString(src);
    assertEquals(expected, result);
}


No.8 generated result --------------------------

@Test
    public void bytesToHexStringTest() {
        byte[] src = {3, 10, 15, 50, 128};
        String expected = "030a0f3280";
        String result = SsrfFileTypeFilter.bytesToHexString(src);
        assertEquals(expected, result);
    }


No.9 generated result --------------------------

@Test
public void bytesToHexStringTest() {
    byte[] src = {12, 34, 56, 78};
    String expected = "0c22384e";
    String result = SsrfFileTypeFilter.bytesToHexString(src);
    assertEquals(expected, result);
}


No.10 generated result --------------------------

@Test
public void bytesToHexStringTest() {
    // Initialize the input byte array
    byte[] input = {1, 2, 3};
    
    // Call the method under test
    String result = SsrfFileTypeFilter.bytesToHexString(input);
    
    // Verify the result
    assertEquals("010203", result);
}


