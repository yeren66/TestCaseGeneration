Source code: 


public static int findMax(final int[] array) {
    int n = array.length;
    if (n == 0) {
        throw new IllegalArgumentException("Array must be non-empty.");
    }
    int max = array[0];
    for (int i = 1; i < n; i++) {
        if (array[i] > max) {
            max = array[i];
        }
    }
    return max;
}



No.1 generated result --------------------------

@Test
public void findMaxTest() {
    int[] array = { 10, 20, 30, 40, 50 };
    int expected = 50;
    int result = FindMax.findMax(array);
    assertEquals(expected, result);
}


No.2 generated result --------------------------

@Test
public void findMaxTest() {
    int[] array = {1, 5, 3, 9, 2};
    int expected = 9;
    int actual = FindMax.findMax(array);
    assertEquals(expected, actual);
}


No.3 generated result --------------------------

package com.thealgorithms.maths;

import org.junit.jupiter.api.*;
import static org.junit.jupiter.api.Assertions.*;

public class FindMaxTest {
    @Test
    public void findMaxTest() {
        int[] array = {1, 5, 3, 9, 2};
        int expected = 9;
        int actual = FindMax.findMax(array);
        assertEquals(expected, actual);
    }
}


No.4 generated result --------------------------

@Test
public void findMaxTest() {
    int[] array = {1, 2, 3, 4, 5};
    int expected = 5;
    int actual = FindMax.findMax(array);
    assertEquals(expected, actual);

    int[] emptyArray = {};
    assertThrows(IllegalArgumentException.class, () -> FindMax.findMax(emptyArray));
}


No.5 generated result --------------------------

@Test
public void findMaxTest() {
    int[] array = {1, 5, 3, 9, 2};
    int expected = 9;
    int actual = FindMax.findMax(array);
    assertEquals(expected, actual);
}


No.6 generated result --------------------------

@Test
public void findMaxTest() {
    int[] array = {1, 4, 2, 7, 5};
    int expected = 7;
    int actual = FindMax.findMax(array);
    assertEquals(expected, actual);
}


No.7 generated result --------------------------

@Test
public void findMaxTest() {
    int[] array = {1, 5, 3, 9, 2};
    int expected = 9;
    int actual = FindMax.findMax(array);
    assertEquals(expected, actual);
}


No.8 generated result --------------------------

package com.thealgorithms.maths;

import org.junit.jupiter.api.*;
import static org.junit.jupiter.api.Assertions.*;

public class FindMaxTest {
    @Test
    public void findMaxTest() {
        int[] array = {1, 2, 3, 4, 5};
        int expectedResult = 5;
        int actualResult = FindMax.findMax(array);
        assertEquals(expectedResult, actualResult);
    }
}


No.9 generated result --------------------------

@Test
public void findMaxTest() {
    int[] array = {3, 5, 1, 2, 4};
    int expected = 5;
    int actual = FindMax.findMax(array);
    assertEquals(expected, actual);
}


No.10 generated result --------------------------

@Test
public void findMaxTest() {
    int[] testArray = {1, 2, 3, 4, 5};
    int expectedResult = 5;
    int actualResult = FindMax.findMax(testArray);
    assertEquals(expectedResult, actualResult);
}


