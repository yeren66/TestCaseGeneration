{
    "project_name": "Java",
    "file_name": "QuickSort.java",
    "relative_path": "Java/src/main/java/com/thealgorithms/sorts/QuickSort.java",
    "execute_path": "Java",
    "package": "com.thealgorithms.sorts",
    "docstring": "/**\n     * This method implements the Generic Quick Sort\n     *\n     * @param array The array to be sorted Sorts the array in increasing order\n     */",
    "source_code": "\n@Override\npublic <T extends Comparable<T>> T[] sort(T[] array) {\n    doSort(array, 0, array.length - 1);\n    return array;\n}\n",
    "class_name": "QuickSort",
    "method_name": "sort",
    "arguments": [
        "T array"
    ],
    "generate_test": [
        "package com.thealgorithms.sorts;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class QuickSortTest {\n    @Test\n    public void sortTest() {\n        QuickSort quickSort = new QuickSort();\n        \n        // Test case 1: Sorting an array of integers\n        Integer[] array1 = {5, 3, 8, 1, 2};\n        Integer[] expectedArray1 = {1, 2, 3, 5, 8};\n        assertArrayEquals(expectedArray1, quickSort.sort(array1));\n        \n        // Test case 2: Sorting an array of strings\n        String[] array2 = {\"cat\", \"dog\", \"apple\", \"banana\"};\n        String[] expectedArray2 = {\"apple\", \"banana\", \"cat\", \"dog\"};\n        assertArrayEquals(expectedArray2, quickSort.sort(array2));\n        \n        // Test case 3: Sorting an array of custom objects\n        Person[] array3 = {new Person(\"Alice\", 25), new Person(\"Bob\", 20), new Person(\"Charlie\", 30)};\n        Person[] expectedArray3 = {new Person(\"Bob\", 20), new Person(\"Alice\", 25), new Person(\"Charlie\", 30)};\n        assertArrayEquals(expectedArray3, quickSort.sort(array3));\n    }\n}",
        "@Test\npublic void sortTest() {\n    QuickSort quickSort = new QuickSort();\n    Integer[] array = {5, 2, 8, 6, 1};\n    Integer[] expected = {1, 2, 5, 6, 8};\n    \n    Integer[] actual = quickSort.sort(array);\n\n    assertArrayEquals(expected, actual);\n}",
        "package com.thealgorithms.sorts;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class QuickSortTest {\n    @Test\n    public void sortTest() {\n        QuickSort quickSort = new QuickSort();\n        \n        Integer[] inputArray = {5, 2, 8, 9, 1};\n        Integer[] expectedOutput = {1, 2, 5, 8, 9};\n        \n        Integer[] sortedArray = quickSort.sort(inputArray);\n        \n        assertArrayEquals(expectedOutput, sortedArray);\n    }\n}",
        "@Test\npublic void sortTest() {\n    QuickSort quickSort = new QuickSort();\n    Integer[] array = {4, 2, 7, 1, 5};\n    Integer[] sortedArray = quickSort.sort(array);\n    Integer[] expectedArray = {1, 2, 4, 5, 7};\n    assertArrayEquals(expectedArray, sortedArray);\n}",
        "package com.thealgorithms.sorts;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class QuickSortTest {\n    @Test\n    public void sortTest() {\n        QuickSort quickSort = new QuickSort();\n        Integer[] array = {5, 3, 8, 2, 1, 9, 4, 7, 6};\n        Integer[] expected = {1, 2, 3, 4, 5, 6, 7, 8, 9};\n\n        Integer[] result = quickSort.sort(array);\n\n        assertArrayEquals(expected, result);\n    }\n}",
        "package com.thealgorithms.sorts;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class QuickSortTest {\n    @Test\n    public void sortTest() {\n        Integer[] array = {5, 3, 1, 2, 4};\n        QuickSort quickSort = new QuickSort();\n        Integer[] expected = {1, 2, 3, 4, 5};\n        Integer[] result = quickSort.sort(array);\n        assertArrayEquals(expected, result);\n    }\n}",
        "package com.thealgorithms.sorts;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class QuickSortTest {\n    @Test\n    public void sortTest() {\n        QuickSort quickSort = new QuickSort();\n        Integer[] array = {5, 3, 2, 4, 1};\n        Integer[] sortedArray = {1, 2, 3, 4, 5};\n        assertArrayEquals(sortedArray, quickSort.sort(array));\n    }\n}",
        "package com.thealgorithms.sorts;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class QuickSortTest {\n    @Test\n    public void sortTest() {\n        Integer[] array = {5, 1, 4, 2, 8};\n        QuickSort quickSort = new QuickSort();\n        Integer[] sortedArray = quickSort.sort(array);\n        Integer[] expectedArray = {1, 2, 4, 5, 8};\n        assertArrayEquals(expectedArray, sortedArray);\n    }\n}",
        "package com.thealgorithms.sorts;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class QuickSortTest {\n    @Test\n    public void sortTest() {\n        QuickSort quickSort = new QuickSort();\n        \n        Integer[] array = {5, 2, 9, 1, 7};\n        Integer[] expected = {1, 2, 5, 7, 9};\n        \n        Integer[] sortedArray = quickSort.sort(array);\n        \n        assertArrayEquals(expected, sortedArray);\n    }\n}",
        "@Test\npublic void sortTest() {\n    QuickSort quickSort = new QuickSort();\n    \n    // Create input array\n    Integer[] array = {5, 2, 8, 9, 1, 3};\n    \n    // Sort the array using QuickSort\n    Integer[] sortedArray = quickSort.sort(array);\n    \n    // Verify that the array is sorted\n    Integer[] expectedArray = {1, 2, 3, 5, 8, 9};\n    assertArrayEquals(expectedArray, sortedArray);\n}"
    ]
}