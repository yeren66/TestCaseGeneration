Source code: 


public static String encode(String message, String cipherSmall) {
    StringBuilder encoded = new StringBuilder();

    // This map is used to encode
    Map<Character, Character> cipherMap = new HashMap<>();

    char beginSmallLetter = 'a';
    char beginCapitalLetter = 'A';

    cipherSmall = cipherSmall.toLowerCase();
    String cipherCapital = cipherSmall.toUpperCase();

    // To handle Small and Capital letters
    for (int i = 0; i < cipherSmall.length(); i++) {
        cipherMap.put(beginSmallLetter++, cipherSmall.charAt(i));
        cipherMap.put(beginCapitalLetter++, cipherCapital.charAt(i));
    }

    for (int i = 0; i < message.length(); i++) {
        if (Character.isAlphabetic(message.charAt(i))) {
            encoded.append(cipherMap.get(message.charAt(i)));
        } else {
            encoded.append(message.charAt(i));
        }
    }

    return encoded.toString();
}



No.1 generated result --------------------------

@Test
public void encodeTest() {
    // Input
    String message = "Hello World!";
    String cipherSmall = "zyxwvutsrqponmlkjihgfedcba";
    
    // Expected output
    String expected = "Svool Dliow!";
    
    // Actual output
    String actual = SimpleSubstitutionCipher.encode(message, cipherSmall);
    
    // Assertion
    assertEquals(expected, actual);
}


No.2 generated result --------------------------

@Test
public void encodeTest() {
    String message = "Hello World!";
    String cipherSmall = "bcdefghijklmnopqrstuvwxyza";
    String expected = "Ifmmp Xpsme!";
    
    String actual = SimpleSubstitutionCipher.encode(message, cipherSmall);
    
    assertEquals(expected, actual);
}


No.3 generated result --------------------------

@Test
public void encodeTest() {
    String message = "Hello World";
    String cipherSmall = "zyxwvutsrqponmlkjihgfedcba";
    String expected = "Svool Dliow";

    String result = SimpleSubstitutionCipher.encode(message, cipherSmall);

    assertEquals(expected, result);
}


No.4 generated result --------------------------

@Test
public void encodeTest() {
    String message = "Hello, World!";
    String cipherSmall = "qwertyuiopasdfghjklzxcvbnm";

    String expected = "itxxs, qjxxv!";
    String actual = SimpleSubstitutionCipher.encode(message, cipherSmall);

    assertEquals(expected, actual);
}


No.5 generated result --------------------------

@Test
public void encodeTest() {
    String message = "Hello World";
    String cipherSmall = "qwertyuiopasdfghjklzxcvbnm";

    String expected = "Itssg Pguks";
    String actual = SimpleSubstitutionCipher.encode(message, cipherSmall);

    assertEquals(expected, actual);
}


No.6 generated result --------------------------

@Test
public void encodeTest() {
    String message = "Hello, World!";
    String cipherSmall = "xyzabcdefghijklmnopqrstuvw";
    String expectedOutput = "Yeqqo, Baqpd!";
    
    String actualOutput = SimpleSubstitutionCipher.encode(message, cipherSmall);
    
    assertEquals(expectedOutput, actualOutput);
}


No.7 generated result --------------------------

@Test
public void encodeTest() {
    String message = "Hello, World!";
    String cipherSmall = "xyzabcdefghijklmnopqrstuvw";

    String expected = "Sgdde, Urtqw!";
    String actual = SimpleSubstitutionCipher.encode(message, cipherSmall);

    assertEquals(expected, actual);
}


No.8 generated result --------------------------

@Test
public void encodeTest() {
    // Test case 1
    String message1 = "Hello World";
    String cipherSmall1 = "defghijklmnopqrstuvwxyzabc";
    String expected1 = "Itssg Ptqsd";
    String actual1 = SimpleSubstitutionCipher.encode(message1, cipherSmall1);
    assertEquals(expected1, actual1);

    // Test case 2
    String message2 = "This is a test";
    String cipherSmall2 = "xyzabcdefghijklmnopqrstuvw";
    String expected2 = "Hqrs rs v xltm";
    String actual2 = SimpleSubstitutionCipher.encode(message2, cipherSmall2);
    assertEquals(expected2, actual2);
}


No.9 generated result --------------------------

@Test
public void encodeTest() {
    String message = "Hello World!";
    String cipherSmall = "xyzabc";
    String expected = "Smith Patgd!";
    String actual = SimpleSubstitutionCipher.encode(message, cipherSmall);
    assertEquals(expected, actual);
}


No.10 generated result --------------------------

@Test
public void encodeTest() {
    String message = "Hello World";
    String cipherSmall = "zyxwvutsrqponmlkjihgfedcba";

    String expected = "Svool Dliow";
    String actual = SimpleSubstitutionCipher.encode(message, cipherSmall);

    assertEquals(expected, actual);
}


