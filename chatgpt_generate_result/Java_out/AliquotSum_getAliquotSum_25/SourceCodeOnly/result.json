{
    "project_name": "Java",
    "file_name": "AliquotSum.java",
    "relative_path": "Java/src/main/java/com/thealgorithms/maths/AliquotSum.java",
    "execute_path": "Java",
    "package": "com.thealgorithms.maths",
    "docstring": "/**\n     * Function to calculate the aliquot sum of an integer number\n     *\n     * @param n a positive integer\n     * @return aliquot sum of given {@code number}\n     */",
    "source_code": "\npublic static int getAliquotSum(int n) {\n    if (n <= 0) return -1;\n    int sum = 1;\n    double root = Math.sqrt(n);\n    /*\n     * We can get the factors after the root by dividing number by its factors\n     * before the root.\n     * Ex- Factors of 100 are 1, 2, 4, 5, 10, 20, 25, 50 and 100.\n     * Root of 100 is 10. So factors before 10 are 1, 2, 4 and 5.\n     * Now by dividing 100 by each factor before 10 we get:\n     * 100/1 = 100, 100/2 = 50, 100/4 = 25 and 100/5 = 20\n     * So we get 100, 50, 25 and 20 which are factors of 100 after 10\n     */\n    for (int i = 2; i <= root; i++) {\n        if (n % i == 0) {\n            sum += i + n / i;\n        }\n    }\n    // if n is a perfect square then its root was added twice in above loop, so subtracting root\n    // from sum\n    if (root == (int) root) sum -= root;\n    return sum;\n}\n",
    "class_name": "AliquotSum",
    "method_name": "getAliquotSum",
    "arguments": [
        "int n"
    ],
    "generate_test": [
        "@Test\npublic void getAliquotSumTest() {\n    int n = 100;\n    int expected = 217;\n    int actual = AliquotSum.getAliquotSum(n);\n    assertEquals(expected, actual);\n}",
        "assertEquals(1, AliquotSum.getAliquotSum(1));\nassertEquals(3, AliquotSum.getAliquotSum(4));\nassertEquals(12, AliquotSum.getAliquotSum(18));\nassertEquals(15, AliquotSum.getAliquotSum(16));\nassertEquals(2, AliquotSum.getAliquotSum(3));",
        "@Test\npublic void getAliquotSumTest() {\n    int result = AliquotSum.getAliquotSum(100);\n    assertEquals(217, result);\n}",
        "public class AliquotSumTest {\n    @Test\n    public void getAliquotSumTest() {\n        int result = AliquotSum.getAliquotSum(100);\n        assertEquals(217, result);\n        \n        result = AliquotSum.getAliquotSum(36);\n        assertEquals(55, result);\n        \n        result = AliquotSum.getAliquotSum(12);\n        assertEquals(16, result);\n        \n        result = AliquotSum.getAliquotSum(1);\n        assertEquals(-1, result);\n        \n        result = AliquotSum.getAliquotSum(0);\n        assertEquals(-1, result);\n    }\n}",
        "@Test\npublic void getAliquotSumTest() {\n    int result1 = AliquotSum.getAliquotSum(100);\n    int expected1 = 217;\n    assertEquals(expected1, result1);\n\n    int result2 = AliquotSum.getAliquotSum(18);\n    int expected2 = 21;\n    assertEquals(expected2, result2);\n\n    int result3 = AliquotSum.getAliquotSum(7);\n    int expected3 = 1;\n    assertEquals(expected3, result3);\n}",
        "package com.thealgorithms.maths;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class AliquotSumTest {\n    @Test\n    public void getAliquotSumTest() {\n        int expectedSum = 237;\n        int actualSum = AliquotSum.getAliquotSum(100);\n        assertEquals(expectedSum, actualSum);\n    }\n}",
        "    @Test\n    public void getAliquotSumTest() {\n        int result1 = AliquotSum.getAliquotSum(100);\n        assertEquals(217, result1);\n        \n        int result2 = AliquotSum.getAliquotSum(12);\n        assertEquals(16, result2);\n        \n        int result3 = AliquotSum.getAliquotSum(25);\n        assertEquals(31, result3);\n        \n        int result4 = AliquotSum.getAliquotSum(7);\n        assertEquals(1, result4);\n    }",
        "@Test\npublic void getAliquotSumTest() {\n    assertEquals(1, AliquotSum.getAliquotSum(1));\n    assertEquals(3, AliquotSum.getAliquotSum(2));\n    assertEquals(4, AliquotSum.getAliquotSum(3));\n    assertEquals(7, AliquotSum.getAliquotSum(4));\n    assertEquals(6, AliquotSum.getAliquotSum(5));\n}",
        "@Test\npublic void getAliquotSumTest() {\n    // Test Case 1: n = 10\n    int result1 = AliquotSum.getAliquotSum(10);\n    assertEquals(8, result1);\n    \n    // Test Case 2: n = 28\n    int result2 = AliquotSum.getAliquotSum(28);\n    assertEquals(28, result2);\n    \n    // Test Case 3: n = 100\n    int result3 = AliquotSum.getAliquotSum(100);\n    assertEquals(117, result3);\n    \n    // Test Case 4: n = 0\n    int result4 = AliquotSum.getAliquotSum(0);\n    assertEquals(-1, result4);\n    \n    // Test Case 5: n = -5\n    int result5 = AliquotSum.getAliquotSum(-5);\n    assertEquals(-1, result5);\n}",
        "package com.thealgorithms.maths;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class AliquotSumTest {\n    @Test\n    public void getAliquotSumTest() {\n        int sum = AliquotSum.getAliquotSum(100);\n        assertEquals(217, sum);\n    }\n}"
    ]
}