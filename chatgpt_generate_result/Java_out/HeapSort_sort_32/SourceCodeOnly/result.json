{
    "project_name": "Java",
    "file_name": "HeapSort.java",
    "relative_path": "Java/src/main/java/com/thealgorithms/sorts/HeapSort.java",
    "execute_path": "Java",
    "package": "com.thealgorithms.sorts",
    "docstring": "/**\n     * For simplicity, we are considering the heap root index as 1 instead of 0.\n     * It simplifies future calculations. Because of that we are decreasing the\n     * provided indexes by 1 in {@link #swap(Object[], int, int)} and\n     * {@link #less(Comparable[], int, int)} functions.\n     */",
    "source_code": "\n@Override\npublic <T extends Comparable<T>> T[] sort(T[] unsorted) {\n    int n = unsorted.length;\n    heapify(unsorted, n);\n    while (n > 1) {\n        swap(unsorted, 1, n--);\n        siftDown(unsorted, 1, n);\n    }\n    return unsorted;\n}\n",
    "class_name": "HeapSort",
    "method_name": "sort",
    "arguments": [
        "T unsorted"
    ],
    "generate_test": [
        "@Test\npublic void sortTest() {\n    Integer[] unsorted = {4, 3, 2, 1};\n    Integer[] expected = {1, 2, 3, 4};\n    Integer[] sorted = sort(unsorted);\n    assertArrayEquals(expected, sorted);\n}",
        "package com.thealgorithms.sorts;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class HeapSortTest {\n    @Test\n    public void sortTest() {\n        HeapSort heapSort = new HeapSort();\n        \n        // Define the unsorted array\n        Integer[] unsorted = {9, 5, 7, 2, 4};\n        \n        // Sort the array using the sort method\n        Integer[] sorted = heapSort.sort(unsorted);\n        \n        // Define the expected sorted array\n        Integer[] expectedSorted = {2, 4, 5, 7, 9};\n        \n        // Assert that the sorted array matches the expected sorted array\n        assertArrayEquals(expectedSorted, sorted);\n    }\n}",
        "package com.thealgorithms.sorts;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class HeapSortTest {\n    @Test\n    public void sortTest() {\n        Integer[] unsorted = {5, 4, 3, 2, 1};\n        \n        HeapSort heapSort = new HeapSort();\n        Integer[] sorted = heapSort.sort(unsorted);\n        \n        Integer[] expected = {1, 2, 3, 4, 5};\n        assertArrayEquals(expected, sorted);\n    }\n}",
        "package com.thealgorithms.sorts;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class HeapSortTest {\n    @Test\n    public void sortTest() {\n        // Arrange\n        Integer[] unsorted = {5, 2, 8, 1, 9};\n        HeapSort sorter = new HeapSort();\n        \n        // Act\n        Integer[] sorted = sorter.sort(unsorted);\n        \n        // Assert\n        Integer[] expected = {1, 2, 5, 8, 9};\n        assertArrayEquals(expected, sorted);\n    }\n}",
        "package com.thealgorithms.sorts;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class HeapSortTest {\n    @Test\n    public void sortTest() {\n        Integer[] unsorted = {5, 2, 9, 1, 3};\n        Integer[] expected = {1, 2, 3, 5, 9};\n        HeapSort heapSort = new HeapSort();\n        \n        Integer[] sorted = heapSort.sort(unsorted);\n        \n        assertArrayEquals(expected, sorted);\n    }\n}",
        "@Test\npublic void sortTest() {\n    Integer[] unsorted = {5, 3, 8, 2, 4, 1};\n    Integer[] expected = {1, 2, 3, 4, 5, 8};\n\n    HeapSort heapSort = new HeapSort();\n    Integer[] sorted = heapSort.sort(unsorted);\n\n    assertArrayEquals(expected, sorted);\n}",
        "@Test\npublic void sortTest() {\n    Integer[] unsorted = {5, 3, 8, 2, 1};\n    HeapSort heapSort = new HeapSort();\n    Integer[] sorted = heapSort.sort(unsorted);\n    Integer[] expected = {1, 2, 3, 5, 8};\n    assertArrayEquals(expected, sorted);\n}",
        "@Test\npublic void sortTest() {\n    Integer[] unsorted = {5, 9, 3, 1, 4};\n    Integer[] expected = {1, 3, 4, 5, 9};\n    \n    HeapSort heapSort = new HeapSort();\n    Integer[] sorted = heapSort.sort(unsorted);\n    \n    assertArrayEquals(expected, sorted);\n}",
        "package com.thealgorithms.sorts;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class HeapSortTest {\n    @Test\n    public void sortTest() {\n        Integer[] unsorted = {5, 2, 8, 3, 1};\n        Integer[] expected = {1, 2, 3, 5, 8};\n        \n        HeapSort heapSort = new HeapSort();\n        Integer[] sorted = heapSort.sort(unsorted);\n        \n        assertArrayEquals(expected, sorted);\n    }\n}",
        "package com.thealgorithms.sorts;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class HeapSortTest {\n    @Test\n    public void sortTest() {\n        Integer[] unsorted = {4, 3, 1, 5, 2};\n        HeapSort heapSort = new HeapSort();\n        \n        Integer[] sorted = heapSort.sort(unsorted);\n        Integer[] expected = {1, 2, 3, 4, 5};\n        \n        assertArrayEquals(expected, sorted);\n    }\n}"
    ]
}