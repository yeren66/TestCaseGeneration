Source code: 


@Override
public <T extends Comparable<T>> T[] sort(T[] unsorted) {
    int n = unsorted.length;
    heapify(unsorted, n);
    while (n > 1) {
        swap(unsorted, 1, n--);
        siftDown(unsorted, 1, n);
    }
    return unsorted;
}



No.1 generated result --------------------------

@Test
public void sortTest() {
    Integer[] unsorted = {4, 3, 2, 1};
    Integer[] expected = {1, 2, 3, 4};
    Integer[] sorted = sort(unsorted);
    assertArrayEquals(expected, sorted);
}


No.2 generated result --------------------------

package com.thealgorithms.sorts;

import org.junit.jupiter.api.*;
import static org.junit.jupiter.api.Assertions.*;

public class HeapSortTest {
    @Test
    public void sortTest() {
        HeapSort heapSort = new HeapSort();
        
        // Define the unsorted array
        Integer[] unsorted = {9, 5, 7, 2, 4};
        
        // Sort the array using the sort method
        Integer[] sorted = heapSort.sort(unsorted);
        
        // Define the expected sorted array
        Integer[] expectedSorted = {2, 4, 5, 7, 9};
        
        // Assert that the sorted array matches the expected sorted array
        assertArrayEquals(expectedSorted, sorted);
    }
}


No.3 generated result --------------------------

package com.thealgorithms.sorts;

import org.junit.jupiter.api.*;
import static org.junit.jupiter.api.Assertions.*;

public class HeapSortTest {
    @Test
    public void sortTest() {
        Integer[] unsorted = {5, 4, 3, 2, 1};
        
        HeapSort heapSort = new HeapSort();
        Integer[] sorted = heapSort.sort(unsorted);
        
        Integer[] expected = {1, 2, 3, 4, 5};
        assertArrayEquals(expected, sorted);
    }
}


No.4 generated result --------------------------

package com.thealgorithms.sorts;

import org.junit.jupiter.api.*;
import static org.junit.jupiter.api.Assertions.*;

public class HeapSortTest {
    @Test
    public void sortTest() {
        // Arrange
        Integer[] unsorted = {5, 2, 8, 1, 9};
        HeapSort sorter = new HeapSort();
        
        // Act
        Integer[] sorted = sorter.sort(unsorted);
        
        // Assert
        Integer[] expected = {1, 2, 5, 8, 9};
        assertArrayEquals(expected, sorted);
    }
}


No.5 generated result --------------------------

package com.thealgorithms.sorts;

import org.junit.jupiter.api.*;
import static org.junit.jupiter.api.Assertions.*;

public class HeapSortTest {
    @Test
    public void sortTest() {
        Integer[] unsorted = {5, 2, 9, 1, 3};
        Integer[] expected = {1, 2, 3, 5, 9};
        HeapSort heapSort = new HeapSort();
        
        Integer[] sorted = heapSort.sort(unsorted);
        
        assertArrayEquals(expected, sorted);
    }
}


No.6 generated result --------------------------

@Test
public void sortTest() {
    Integer[] unsorted = {5, 3, 8, 2, 4, 1};
    Integer[] expected = {1, 2, 3, 4, 5, 8};

    HeapSort heapSort = new HeapSort();
    Integer[] sorted = heapSort.sort(unsorted);

    assertArrayEquals(expected, sorted);
}


No.7 generated result --------------------------

@Test
public void sortTest() {
    Integer[] unsorted = {5, 3, 8, 2, 1};
    HeapSort heapSort = new HeapSort();
    Integer[] sorted = heapSort.sort(unsorted);
    Integer[] expected = {1, 2, 3, 5, 8};
    assertArrayEquals(expected, sorted);
}


No.8 generated result --------------------------

@Test
public void sortTest() {
    Integer[] unsorted = {5, 9, 3, 1, 4};
    Integer[] expected = {1, 3, 4, 5, 9};
    
    HeapSort heapSort = new HeapSort();
    Integer[] sorted = heapSort.sort(unsorted);
    
    assertArrayEquals(expected, sorted);
}


No.9 generated result --------------------------

package com.thealgorithms.sorts;

import org.junit.jupiter.api.*;
import static org.junit.jupiter.api.Assertions.*;

public class HeapSortTest {
    @Test
    public void sortTest() {
        Integer[] unsorted = {5, 2, 8, 3, 1};
        Integer[] expected = {1, 2, 3, 5, 8};
        
        HeapSort heapSort = new HeapSort();
        Integer[] sorted = heapSort.sort(unsorted);
        
        assertArrayEquals(expected, sorted);
    }
}


No.10 generated result --------------------------

package com.thealgorithms.sorts;

import org.junit.jupiter.api.*;
import static org.junit.jupiter.api.Assertions.*;

public class HeapSortTest {
    @Test
    public void sortTest() {
        Integer[] unsorted = {4, 3, 1, 5, 2};
        HeapSort heapSort = new HeapSort();
        
        Integer[] sorted = heapSort.sort(unsorted);
        Integer[] expected = {1, 2, 3, 4, 5};
        
        assertArrayEquals(expected, sorted);
    }
}


