{
    "project_name": "commons-lang",
    "file_name": "CompareToBuilder.java",
    "relative_path": "commons-lang/src/main/java/org/apache/commons/lang3/builder/CompareToBuilder.java",
    "execute_path": "commons-lang",
    "package": "org.apache.commons.lang3.builder",
    "docstring": "/**\n     * Appends to the {@code builder} the deep comparison of\n     * two {@code boolean} arrays.\n     *\n     * <ol>\n     *  <li>Check if arrays are the same using {@code ==}</li>\n     *  <li>Check if for {@code null}, {@code null} is less than non-{@code null}</li>\n     *  <li>Check array length, a shorter length array is less than a longer length array</li>\n     *  <li>Check array contents element by element using {@link #append(boolean, boolean)}</li>\n     * </ol>\n     *\n     * @param lhs  left-hand side array\n     * @param rhs  right-hand side array\n     * @return this\n     */",
    "source_code": "\npublic CompareToBuilder append(final boolean[] lhs, final boolean[] rhs) {\n    if (comparison != 0) {\n        return this;\n    }\n    if (lhs == rhs) {\n        return this;\n    }\n    if (lhs == null) {\n        comparison = -1;\n        return this;\n    }\n    if (rhs == null) {\n        comparison = 1;\n        return this;\n    }\n    if (lhs.length != rhs.length) {\n        comparison = lhs.length < rhs.length ? -1 : 1;\n        return this;\n    }\n    for (int i = 0; i < lhs.length && comparison == 0; i++) {\n        append(lhs[i], rhs[i]);\n    }\n    return this;\n}\n",
    "class_name": "CompareToBuilder",
    "method_name": "append",
    "arguments": [
        "boolean[] lhs",
        "boolean[] rhs"
    ],
    "generate_test": [
        "package org.apache.commons.lang3.builder;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class CompareToBuilderTest {\n    \n    @Test\n    public void appendTest() {\n        CompareToBuilder builder = new CompareToBuilder();\n        boolean[] lhs = {true, false};\n        boolean[] rhs = {false, true};\n        \n        builder.append(lhs, rhs);\n        assertEquals(-1, builder.toComparison());\n    }\n}",
        "@Test\npublic void appendTest() {\n    CompareToBuilder builder = new CompareToBuilder();\n    boolean[] lhs = {true, false, true};\n    boolean[] rhs = {true, true, false};\n    builder.append(lhs, rhs);\n    int comparison = builder.toComparison();\n    assertEquals(-1, comparison);\n}",
        "\npackage org.apache.commons.lang3.builder;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class CompareToBuilderTest {\n    @Test\n    public void appendTest() {\n        CompareToBuilder builder = new CompareToBuilder();\n        boolean[] lhs = {true, false, true};\n        boolean[] rhs = {false, true, false};\n        \n        builder.append(lhs, rhs);\n        \n        int result = builder.toComparison();\n        assertEquals(-1, result);\n    }\n}\n",
        "@Test\npublic void appendTest() {\n    CompareToBuilder builder = new CompareToBuilder();\n    \n    boolean[] lhs = {true, false, true};\n    boolean[] rhs = {true, true, false};\n    \n    CompareToBuilder result = builder.append(lhs, rhs);\n    \n    int expectedComparison = -1;\n    int actualComparison = result.toComparison();\n    \n    assertEquals(expectedComparison, actualComparison);\n}",
        "@Test\npublic void appendTest() {\n    CompareToBuilder builder = new CompareToBuilder();\n    \n    boolean[] lhs = {true, false, true};\n    boolean[] rhs = {true, false, true};\n    \n    builder.append(lhs, rhs);\n    \n    int expectedComparison = 0;\n    int actualComparison = builder.toComparison();\n    \n    assertEquals(expectedComparison, actualComparison);\n}",
        "package org.apache.commons.lang3.builder;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class CompareToBuilderTest {\n    @Test\n    public void appendTest() {\n        CompareToBuilder builder = new CompareToBuilder();\n        boolean[] lhs = {true, false, true};\n        boolean[] rhs = {true, false, true};\n        builder.append(lhs, rhs);\n        int comparison = builder.toComparison();\n        assertEquals(0, comparison);\n    }\n}",
        "package org.apache.commons.lang3.builder;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class CompareToBuilderTest {\n    @Test\n    public void appendTest() {\n        CompareToBuilder builder = new CompareToBuilder();\n        boolean[] lhs = {true, false, true};\n        boolean[] rhs = {true, false, true};\n        \n        CompareToBuilder result = builder.append(lhs, rhs);\n        \n        // Verify that the comparison is complete\n        assertEquals(builder, result);\n        \n        // Verify that the builder is returned when comparison is not 0\n        builder.append(true, false);\n        result = builder.append(lhs, rhs);\n        assertEquals(builder, result);\n        \n        // Verify that the builder is returned when lhs and rhs are the same reference\n        lhs = rhs;\n        result = builder.append(lhs, rhs);\n        assertEquals(builder, result);\n        \n        // Verify that the builder is returned when lhs is null\n        lhs = null;\n        result = builder.append(lhs, rhs);\n        assertEquals(builder, result);\n        \n        // Verify that the builder is returned when rhs is null\n        lhs = new boolean[] {true, false, true};\n        rhs = null;\n        result = builder.append(lhs, rhs);\n        assertEquals(builder, result);\n        \n        // Verify that the builder is returned when lhs and rhs have different lengths\n        rhs = new boolean[] {true, false};\n        result = builder.append(lhs, rhs);\n        assertEquals(builder, result);\n        \n        // Verify that the builder is returned when comparison is not 0 inside for loop\n        lhs = new boolean[] {true, false, true};\n        rhs = new boolean[] {true, true, true};\n        result = builder.append(lhs, rhs);\n        assertEquals(builder, result);\n    }\n}",
        "\npackage org.apache.commons.lang3.builder;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class CompareToBuilderTest {\n    @Test\n    public void appendTest() {\n        CompareToBuilder builder = new CompareToBuilder();\n        boolean[] lhs = {true, false, true};\n        boolean[] rhs = {true, false, true};\n        CompareToBuilder result = builder.append(lhs, rhs);\n        assertSame(builder, result);\n        assertSame(builder, result);\n        assertSame(builder, result);\n        assertSame(builder, result);\n        assertSame(builder, result);\n        assertSame(builder, result);\n        assertSame(builder, result);\n        assertSame(builder, result);\n        assertSame(builder, result);\n        assertSame(builder, result);\n        assertSame(builder, result);\n        assertSame(builder, result);\n    }\n}\n",
        "@Test\npublic void appendTest() {\n    CompareToBuilder builder = new CompareToBuilder();\n    boolean[] lhs = {true, false, true};\n    boolean[] rhs = {true, true, false};\n    CompareToBuilder result = builder.append(lhs, rhs);\n    assertEquals(-1, result.toComparison());\n}",
        "@Test\npublic void appendTest() {\n    CompareToBuilder builder = new CompareToBuilder();\n    boolean[] lhs = {true, false};\n    boolean[] rhs = {true, true};\n    \n    CompareToBuilder result = builder.append(lhs, rhs);\n    \n    assertEquals(builder, result);\n    assertEquals(1, builder.toComparison());\n}"
    ]
}