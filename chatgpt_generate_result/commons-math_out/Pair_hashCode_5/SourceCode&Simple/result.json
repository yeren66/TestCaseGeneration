{
    "project_name": "commons-math",
    "file_name": "Pair.java",
    "relative_path": "commons-math/commons-math-legacy-core/src/main/java/org/apache/commons/math4/legacy/core/Pair.java",
    "execute_path": "commons-math/commons-math-legacy-core",
    "package": "org.apache.commons.math4.legacy.core",
    "docstring": "/**\n     * Compute a hash code.\n     *\n     * @return the hash code value.\n     */",
    "source_code": "\n@Override\npublic int hashCode() {\n    int result = key == null ? 0 : key.hashCode();\n\n    final int h = value == null ? 0 : value.hashCode();\n    result = 37 * result + h ^ (h >>> 16);\n\n    return result;\n}\n",
    "class_name": "Pair",
    "method_name": "hashCode",
    "arguments": [],
    "generate_test": [
        "@Test\npublic void hashCodeTest() {\n    Pair<String, Integer> pair = new Pair<>(\"key\", 5);\n    int expectedHashCode = pair.hashCode();\n\n    assertEquals(expectedHashCode, pair.hashCode());\n}",
        "@Test\npublic void hashCodeTest() {\n    Pair<Integer, String> pair = new Pair<>(1, \"value\");\n    int expectedHashCode = pair.getKey().hashCode() + 37 * pair.getValue().hashCode();\n    int actualHashCode = pair.hashCode();\n    assertEquals(expectedHashCode, actualHashCode);\n}",
        "@Test\npublic void hashCodeTest() {\n    Pair<String, Integer> pair = new Pair<>(\"Key\", 1);\n    int expectedHashCode = pair.getKey() == null ? 0 : pair.getKey().hashCode();\n    int h = pair.getValue() == null ? 0 : pair.getValue().hashCode();\n    expectedHashCode = 37 * expectedHashCode + h ^ (h >>> 16);\n\n    int actualHashCode = pair.hashCode();\n\n    assertEquals(expectedHashCode, actualHashCode);\n}",
        "package org.apache.commons.math4.legacy.core;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class PairTest {\n    @Test\n    public void hashCodeTest() {\n        Pair<String, Integer> pair = new Pair<>(\"key\", 123);\n        int expectedHashCode = pair.getKey() == null ? 0 : pair.getKey().hashCode();\n\n        final int h = pair.getValue() == null ? 0 : pair.getValue().hashCode();\n\n        expectedHashCode = 37 * expectedHashCode + h ^ (h >>> 16);\n\n        int actualHashCode = pair.hashCode();\n\n        assertEquals(expectedHashCode, actualHashCode);\n    }\n}",
        "@Test\npublic void hashCodeTest() {\n    // Create a Pair instance\n    Pair<String, Integer> pair = new Pair<>(\"key\", 10);\n    \n    // Calculate the expected hash code\n    int expectedHashCode = 37 * (\"key\" == null ? 0 : \"key\".hashCode());\n    final int h = 10 == null ? 0 : 10.hashCode();\n    expectedHashCode = expectedHashCode + h ^ (h >>> 16);\n\n    // Verify the actual and expected hash codes\n    assertEquals(expectedHashCode, pair.hashCode());\n}",
        "package org.apache.commons.math4.legacy.core;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class PairTest {\n    @Test\n    public void hashCodeTest() {\n        Pair<String, Integer> pair = new Pair<>(\"key\", 123);\n        int expected = pair.getKey() == null ? 0 : pair.getKey().hashCode();\n        final int h = pair.getValue() == null ? 0 : pair.getValue().hashCode();\n        expected = 37 * expected + h ^ (h >>> 16);\n\n        int result = pair.hashCode();\n\n        assertEquals(expected, result);\n    }\n}",
        "package org.apache.commons.math4.legacy.core;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class PairTest {\n    @Test\n    public void hashCodeTest() {\n        Pair<String, Integer> pair = new Pair<>(\"key\", 123);\n        int expectedHashCode = 37 * (\"key\" == null ? 0 : \"key\".hashCode()) + (123 == null ? 0 : 123.hashCode());\n        int actualHashCode = pair.hashCode();\n        assertEquals(expectedHashCode, actualHashCode);\n    }\n}",
        "@Test\npublic void hashCodeTest() {\n    Pair<Integer, String> pair = Pair.create(123, \"Hello\");\n    int expectedResult = pair.getKey().hashCode();\n    final int h = pair.getValue() == null ? 0 : pair.getValue().hashCode();\n    expectedResult = 37 * expectedResult + h ^ (h >>> 16);\n    int actualResult = pair.hashCode();\n    assertEquals(expectedResult, actualResult);\n}",
        "package org.apache.commons.math4.legacy.core;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class PairTest {\n    @Test\n    public void hashCodeTest() {\n        Pair<String, Integer> pair = new Pair<>(\"key\", 10);\n        \n        int expected = pair.getKey().hashCode();\n        expected = 37 * expected + pair.getValue().hashCode();\n        expected ^= expected >>> 16;\n        \n        int actual = pair.hashCode();\n        \n        assertEquals(expected, actual);\n    }\n}",
        "@Test\npublic void hashCodeTest() {\n    Pair<String, Integer> pair = Pair.create(\"key\", 123);\n    int expectedHashCode = pair.getKey().hashCode() * 37 + pair.getValue().hashCode();\n    \n    int actualHashCode = pair.hashCode();\n    \n    assertEquals(expectedHashCode, actualHashCode);\n}"
    ]
}