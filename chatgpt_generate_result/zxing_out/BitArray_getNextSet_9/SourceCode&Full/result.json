{
    "project_name": "zxing",
    "file_name": "BitArray.java",
    "relative_path": "zxing/core/src/main/java/com/google/zxing/common/BitArray.java",
    "execute_path": "zxing",
    "package": "com.google.zxing.common",
    "docstring": "/**\n   * @param from first bit to check\n   * @return index of first bit that is set, starting from the given index, or size if none are set\n   *  at or beyond this given index\n   * @see #getNextUnset(int)\n   */",
    "source_code": "\npublic int getNextSet(int from) {\n  if (from >= size) {\n    return size;\n  }\n  int bitsOffset = from / 32;\n  int currentBits = bits[bitsOffset];\n  // mask off lesser bits first\n  currentBits &= -(1 << (from & 0x1F));\n  while (currentBits == 0) {\n    if (++bitsOffset == bits.length) {\n      return size;\n    }\n    currentBits = bits[bitsOffset];\n  }\n  int result = (bitsOffset * 32) + Integer.numberOfTrailingZeros(currentBits);\n  return Math.min(result, size);\n}\n",
    "class_name": "BitArray",
    "method_name": "getNextSet",
    "arguments": [
        "int from"
    ],
    "generate_test": [
        "package com.google.zxing.common;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class BitArrayTest {\n    @Test\n    public void getNextSetTest() {\n        BitArray bitArray = new BitArray(8);\n        bitArray.set(0);\n        bitArray.set(2);\n        bitArray.set(4);\n        \n        assertEquals(0, bitArray.getNextSet(0));\n        assertEquals(2, bitArray.getNextSet(1));\n        assertEquals(2, bitArray.getNextSet(2));\n        assertEquals(4, bitArray.getNextSet(3));\n        assertEquals(4, bitArray.getNextSet(4));\n        assertEquals(8, bitArray.getNextSet(5));\n    }\n}",
        "package com.google.zxing.common;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class BitArrayTest {\n    @Test\n    public void getNextSetTest() {\n        BitArray bitArray = new BitArray(64);\n        bitArray.set(10);\n        int result = bitArray.getNextSet(0);\n        assertEquals(10, result);\n    }\n}",
        "    @Test\n    public void getNextSetTest() {\n        BitArray bitArray = new BitArray();\n        bitArray.set(0);\n        bitArray.set(3);\n        bitArray.set(7);\n        int result = bitArray.getNextSet(0);\n        assertEquals(0, result);\n        result = bitArray.getNextSet(1);\n        assertEquals(3, result);\n        result = bitArray.getNextSet(4);\n        assertEquals(7, result);\n        result = bitArray.getNextSet(8);\n        assertEquals(8, result);\n    }",
        "package com.google.zxing.common;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class BitArrayTest {\n    @Test\n    public void getNextSetTest() {\n        BitArray bitArray = new BitArray(10);\n        bitArray.set(3);\n        bitArray.set(7);\n        int result = bitArray.getNextSet(0);\n        assertEquals(3, result);\n    }\n}",
        "\npackage com.google.zxing.common;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class BitArrayTest {\n    @Test\n    public void getNextSetTest() {\n        BitArray bitArray = new BitArray(10);\n        bitArray.set(0);\n        bitArray.set(2);\n        bitArray.set(4);\n        bitArray.set(7);\n        \n        int nextSetIndex = bitArray.getNextSet(0);\n        assertEquals(0, nextSetIndex);\n        \n        nextSetIndex = bitArray.getNextSet(1);\n        assertEquals(2, nextSetIndex);\n        \n        nextSetIndex = bitArray.getNextSet(5);\n        assertEquals(7, nextSetIndex);\n        \n        nextSetIndex = bitArray.getNextSet(8);\n        assertEquals(10, nextSetIndex);\n    }\n}\n",
        "@Test\npublic void getNextSetTest() {\n    // Create a BitArray with some bits set\n    BitArray bitArray = new BitArray(64);\n    bitArray.set(2);\n    bitArray.set(5);\n    bitArray.set(9);\n\n    // Test getNextSet() starting from different indices\n    assertEquals(2, bitArray.getNextSet(0));  // Expecting 2 as the next set bit after index 0\n    assertEquals(5, bitArray.getNextSet(3));  // Expecting 5 as the next set bit after index 3\n    assertEquals(9, bitArray.getNextSet(6));  // Expecting 9 as the next set bit after index 6\n    assertEquals(64, bitArray.getNextSet(10));  // Expecting 64 as there are no set bits after index 10\n}",
        "'''\npackage com.google.zxing.common;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class BitArrayTest {\n    @Test\n    public void getNextSetTest() {\n        BitArray bitArray = new BitArray(32);\n        bitArray.set(10);\n        bitArray.set(20);\n        bitArray.set(30);\n\n        assertEquals(10, bitArray.getNextSet(0));\n        assertEquals(20, bitArray.getNextSet(11));\n        assertEquals(30, bitArray.getNextSet(21));\n        assertEquals(32, bitArray.getNextSet(31));\n        assertEquals(32, bitArray.getNextSet(32));\n    }\n}\n'''",
        "@Test\npublic void getNextSetTest() {\n    BitArray bitArray = new BitArray(10);\n    bitArray.set(3);\n    bitArray.set(7);\n    int expectedResult = 7;\n    int actualResult = bitArray.getNextSet(2);\n    assertEquals(expectedResult, actualResult);\n}",
        "package com.google.zxing.common;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class BitArrayTest {\n    private BitArray bitArray;\n    \n    @BeforeEach\n    public void setUp() {\n        bitArray = new BitArray(10);\n        bitArray.set(3);\n        bitArray.set(6);\n    }\n    \n    @Test\n    public void getNextSetTest() {\n        assertEquals(3, bitArray.getNextSet(0));\n        assertEquals(3, bitArray.getNextSet(3));\n        assertEquals(6, bitArray.getNextSet(4));\n        assertEquals(6, bitArray.getNextSet(6));\n        assertEquals(10, bitArray.getNextSet(7));\n    }\n}",
        "@Test\npublic void getNextSetTest() {\n    BitArray bitArray = new BitArray(10);\n    bitArray.set(2);\n    bitArray.set(5);\n    bitArray.set(9);\n    \n    int result1 = bitArray.getNextSet(0);\n    int result2 = bitArray.getNextSet(3);\n    int result3 = bitArray.getNextSet(6);\n    \n    assertEquals(2, result1);\n    assertEquals(5, result2);\n    assertEquals(9, result3);\n}"
    ]
}