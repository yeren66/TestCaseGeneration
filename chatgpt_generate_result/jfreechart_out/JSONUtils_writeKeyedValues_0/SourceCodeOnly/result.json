{
    "project_name": "jfreechart",
    "file_name": "JSONUtils.java",
    "relative_path": "jfreechart/src/main/java/org/jfree/data/json/JSONUtils.java",
    "execute_path": "jfreechart",
    "package": "org.jfree.data.json",
    "docstring": "/**\n     * Returns a string containing the data in JSON format.  The format is\n     * an array of arrays, where each sub-array represents one data value.\n     * The sub-array should contain two items, first the item key as a string\n     * and second the item value as a number.  For example:\n     * {@code [[\"Key A\", 1.0], [\"Key B\", 2.0]]}\n     * <br><br>\n     * Note that this method can be used with instances of {@link PieDataset}.\n     * \n     * @param data  the data ({@code null} not permitted).\n     * \n     * @return A string in JSON format. \n     */",
    "source_code": "\npublic static String writeKeyedValues(KeyedValues data) {\n    Args.nullNotPermitted(data, \"data\");\n    StringWriter sw = new StringWriter();\n    try {\n        writeKeyedValues(data, sw);\n    } catch (IOException ex) {\n        throw new RuntimeException(ex);\n    }\n    return sw.toString();\n}\n",
    "class_name": "JSONUtils",
    "method_name": "writeKeyedValues",
    "arguments": [
        "KeyedValues data"
    ],
    "generate_test": [
        "@Test\npublic void writeKeyedValuesTest() {\n    // Create a sample KeyedValues object\n    DefaultKeyedValues data = new DefaultKeyedValues();\n    data.addValue(\"Key1\", 10);\n    data.addValue(\"Key2\", 20);\n    data.addValue(\"Key3\", 30);\n    \n    // Call the writeKeyedValues method and get the result\n    String result = JSONUtils.writeKeyedValues(data);\n    \n    // Assert that the result is not null\n    assertNotNull(result);\n    \n    // Assert that the result matches the expected output\n    assertEquals(\"{\\\"Key1\\\":10.0,\\\"Key2\\\":20.0,\\\"Key3\\\":30.0}\", result);\n}",
        "package org.jfree.data.json;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class JSONUtilsTest {\n    @Test\n    public void writeKeyedValuesTest() {\n        KeyedValues data = new DefaultKeyedValues();\n        data.setValue(\"key1\", 1);\n        data.setValue(\"key2\", 2);\n        String expectedOutput = \"{\\\"key1\\\":1,\\\"key2\\\":2}\";\n        assertEquals(expectedOutput, JSONUtils.writeKeyedValues(data));\n    }\n}",
        "package org.jfree.data.json;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class JSONUtilsTest {\n    @Test\n    public void writeKeyedValuesTest() {\n        // Create a sample KeyedValues object\n        KeyedValues data = new DefaultKeyedValues();\n        data.addValue(\"A\", 10);\n        data.addValue(\"B\", 20);\n        data.addValue(\"C\", 30);\n\n        // Call the method and capture the result\n        String result = JSONUtils.writeKeyedValues(data);\n\n        // Assert that the output is as expected\n        String expected = \"\\\"A\\\": 10, \\\"B\\\": 20, \\\"C\\\": 30\";\n        assertEquals(expected, result);\n    }\n}",
        "package org.jfree.data.json;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class JSONUtilsTest {\n    @Test\n    public void writeKeyedValuesTest() {\n        KeyedValues data = <initialize KeyedValues object>;\n        \n        String expected = <expected value>;\n        String actual = JSONUtils.writeKeyedValues(data);\n        \n        assertEquals(expected, actual);\n    }\n}",
        "public static String writeKeyedValues(KeyedValues data) {\n    Args.nullNotPermitted(data, \"data\");\n    StringWriter sw = new StringWriter();\n    try {\n        writeKeyedValues(data, sw);\n    } catch (IOException ex) {\n        throw new RuntimeException(ex);\n    }\n    return sw.toString();\n}\n\npackage org.jfree.data.json;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\nimport java.io.IOException;\nimport java.io.StringWriter;\n\nimport org.jfree.data.KeyedValues;\n\npublic class JSONUtilsTest {\n    @Test\n    public void writeKeyedValuesTest() {\n        // Create dummy data for test\n        KeyedValues data = new KeyedValues() {\n            @Override\n            public int getItemCount() {\n                return 0;\n            }\n\n            @Override\n            public Number getValue(int index) {\n                return null;\n            }\n\n            @Override\n            public Comparable getKey(int index) {\n                return null;\n            }\n\n            @Override\n            public int getIndex(Comparable key) {\n                return 0;\n            }\n\n            @Override\n            public List getKeys() {\n                return null;\n            }\n\n            @Override\n            public Number getValue(Comparable key) {\n                return null;\n            }\n\n            @Override\n            public int getIndex(Comparable key) {\n                return 0;\n            }\n\n            @Override\n            public void addValue(Comparable key, Number value) {\n            }\n\n            @Override\n            public void addValue(int index, Comparable key, Number value) {\n            }\n\n            @Override\n            public void setValue(Comparable key, Number value) {\n            }\n\n            @Override\n            public void setValue(int index, Number value) {\n            }\n\n            @Override\n            public void insertValue(int index, Comparable key, Number value) {\n            }\n\n            @Override\n            public void removeValue(int index) {\n            }\n\n            @Override\n            public void removeValue(Comparable key) {\n            }\n\n            @Override\n            public void clear() {\n            }\n        };\n\n        // Write the KeyedValues data to a string\n        String result = JSONUtils.writeKeyedValues(data);\n\n        // Verify that the result is not null\n        assertNotNull(result);\n\n        // <FILL> - Add additional assertions to test the output of the method\n\n    }\n}",
        "@Test\npublic void writeKeyedValuesTest() {\n    KeyedValues data = new DefaultKeyedValues();\n    data.addValue(\"Apple\", 2.0);\n    data.addValue(\"Orange\", 3.0);\n    String expected = \"Apple=2.0\\nOrange=3.0\\n\";\n    String result = JSONUtils.writeKeyedValues(data);\n    assertEquals(expected, result);\n}",
        "@Test\npublic void writeKeyedValuesTest() {\n    KeyedValues data = new DefaultKeyedValues();\n    data.addValue(\"A\", 1.0);\n    data.addValue(\"B\", 2.0);\n    \n    String expected = \"{\\\"values\\\":[{\\\"key\\\":\\\"A\\\",\\\"value\\\":1.0},{\\\"key\\\":\\\"B\\\",\\\"value\\\":2.0}]}\";\n    String output = JSONUtils.writeKeyedValues(data);\n    \n    assertEquals(expected, output);\n}",
        "public static String writeKeyedValues(KeyedValues data) {\n    Args.nullNotPermitted(data, \"data\");\n    StringWriter sw = new StringWriter();\n    try {\n        writeKeyedValues(data, sw);\n    } catch (IOException ex) {\n        throw new RuntimeException(ex);\n    }\n    return sw.toString();\n}\n\npackage org.jfree.data.json;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class JSONUtilsTest {\n    @Test\n    public void writeKeyedValuesTest() {\n        // Create the KeyedValues object for testing\n        DefaultKeyedValues data = new DefaultKeyedValues();\n        data.addValue(\"A\", 1.0);\n        data.addValue(\"B\", 2.0);\n        data.addValue(\"C\", 3.0);\n        \n        // Call the writeKeyedValues method with the test data\n        String result = JSONUtils.writeKeyedValues(data);\n        \n        // Assert the expected result with the actual result\n        assertEquals(\"A=1.0,B=2.0,C=3.0\", result);\n    }\n}",
        "\npackage org.jfree.data.json;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class JSONUtilsTest {\n  \n    @Test\n    public void writeKeyedValuesTest() {\n        KeyedValues data = new KeyedValues();\n        // set up test data\n        \n        String expected = \"\"; // specify the expected output here\n        \n        // perform the test\n        String result = JSONUtils.writeKeyedValues(data);\n        \n        // assert the result\n        assertEquals(expected, result);\n    }\n}\n",
        "public static String writeKeyedValues(KeyedValues data) {\n    Args.nullNotPermitted(data, \"data\");\n    StringWriter sw = new StringWriter();\n    try {\n        writeKeyedValues(data, sw);\n    } catch (IOException ex) {\n        throw new RuntimeException(ex);\n    }\n    return sw.toString();\n}\n\n\n### JUNIT Test case:\npackage org.jfree.data.json;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class JSONUtilsTest {\n    @Test\n    public void writeKeyedValuesTest() {\n        // Arrange\n        KeyedValues keyedValues = new DefaultKeyedValues();\n        \n        // Act\n        String result = JSONUtils.writeKeyedValues(keyedValues);\n        \n        // Assert\n        assertNotNull(result);\n        // additional assertions can be added here\n    }\n}"
    ]
}