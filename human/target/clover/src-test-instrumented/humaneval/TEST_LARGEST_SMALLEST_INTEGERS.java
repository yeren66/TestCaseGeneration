/* $$ This file has been instrumented by Clover 4.4.1#2019101123313948 $$ */package humaneval;

public class TEST_LARGEST_SMALLEST_INTEGERS {static class __CLR4_4_1517517lp0zmimb{public static com_atlassian_clover.CoverageRecorder R;public static com_atlassian_clover.CloverProfile[] profiles = { };@java.lang.SuppressWarnings("unchecked") public static <I, T extends I> I lambdaInc(final int i,final T l,final int si){java.lang.reflect.InvocationHandler h=new java.lang.reflect.InvocationHandler(){public java.lang.Object invoke(java.lang.Object p,java.lang.reflect.Method m,java.lang.Object[] a) throws Throwable{R.inc(i);R.inc(si);try{return m.invoke(l,a);}catch(java.lang.reflect.InvocationTargetException e){throw e.getCause()!=null?e.getCause():new RuntimeException("Clover failed to invoke instrumented lambda",e);}}};return (I)java.lang.reflect.Proxy.newProxyInstance(l.getClass().getClassLoader(),l.getClass().getInterfaces(),h);}static{com_atlassian_clover.CoverageRecorder _R=null;try{com_atlassian_clover.CloverVersionInfo.An_old_version_of_clover_is_on_your_compilation_classpath___Please_remove___Required_version_is___4_4_1();if(2019101123313948L!=com_atlassian_clover.CloverVersionInfo.getBuildStamp()){com_atlassian_clover.Clover.l("[CLOVER] WARNING: The Clover version used in instrumentation does not match the runtime version. You need to run instrumented classes against the same version of Clover that you instrumented with.");com_atlassian_clover.Clover.l("[CLOVER] WARNING: Instr=4.4.1#2019101123313948,Runtime="+com_atlassian_clover.CloverVersionInfo.getReleaseNum()+"#"+com_atlassian_clover.CloverVersionInfo.getBuildStamp());}R=com_atlassian_clover.Clover.getNullRecorder();_R=com_atlassian_clover.Clover.getNullRecorder();_R=com_atlassian_clover.Clover.getRecorder("\u0043\u003a\u005c\u005c\u0055\u0073\u0065\u0072\u0073\u005c\u005c\u0079\u0065\u0072\u0065\u006e\u005c\u005c\u0044\u0065\u0073\u006b\u0074\u006f\u0070\u005c\u005c\u0068\u0075\u006d\u0061\u006e\u005c\u005c\u0074\u0061\u0072\u0067\u0065\u0074\u002f\u0063\u006c\u006f\u0076\u0065\u0072\u002f\u0063\u006c\u006f\u0076\u0065\u0072\u002e\u0064\u0062",1700126840887L,8589935092L,6567,profiles,new java.lang.String[]{"clover.distributed.coverage",null});}catch(java.lang.SecurityException e){java.lang.System.err.println("[CLOVER] FATAL ERROR: Clover could not be initialised because it has insufficient security privileges. Please consult the Clover documentation on the security policy file changes required. ("+e.getClass()+":"+e.getMessage()+")");}catch(java.lang.NoClassDefFoundError e){java.lang.System.err.println("[CLOVER] FATAL ERROR: Clover could not be initialised. Are you sure you have Clover in the runtime classpath? ("+e.getClass()+":"+e.getMessage()+")");}catch(java.lang.Throwable t){java.lang.System.err.println("[CLOVER] FATAL ERROR: Clover could not be initialised because of an unexpected error. ("+t.getClass()+":"+t.getMessage()+")");}R=_R;}}public static final com_atlassian_clover.TestNameSniffer __CLR4_4_1_TEST_NAME_SNIFFER=com_atlassian_clover.TestNameSniffer.NULL_INSTANCE;
    @org.junit.Test(timeout = 3000)
    public void test_0() throws java.lang.Exception {__CLR4_4_1517517lp0zmimb.R.globalSliceStart(getClass().getName(),6523);int $CLV_p$=0;java.lang.Throwable $CLV_t$=null;try{__CLR4_4_1n53hp2517();$CLV_p$=1;}catch(java.lang.Throwable $CLV_t2$){if($CLV_p$==0&&$CLV_t$==null){$CLV_t$=$CLV_t2$;}__CLR4_4_1517517lp0zmimb.R.rethrow($CLV_t2$);}finally{__CLR4_4_1517517lp0zmimb.R.globalSliceEnd(getClass().getName(),"humaneval.TEST_LARGEST_SMALLEST_INTEGERS.test_0",__CLR4_4_1_TEST_NAME_SNIFFER.getTestName(),6523,$CLV_p$,$CLV_t$);}}private void  __CLR4_4_1n53hp2517() throws java.lang.Exception{try{__CLR4_4_1517517lp0zmimb.R.inc(6523);
        __CLR4_4_1517517lp0zmimb.R.inc(6524);int[] input = {2, 4, 1, 3, 5, 7};
        __CLR4_4_1517517lp0zmimb.R.inc(6525);int[] result = {0, 1};
        __CLR4_4_1517517lp0zmimb.R.inc(6526);org.junit.Assert.assertArrayEquals(result, humaneval.correct.LARGEST_SMALLEST_INTEGERS.largest_smallest_integers(input));
    }finally{__CLR4_4_1517517lp0zmimb.R.flushNeeded();}}
    @org.junit.Test(timeout = 3000)
    public void test_1() throws java.lang.Exception {__CLR4_4_1517517lp0zmimb.R.globalSliceStart(getClass().getName(),6527);int $CLV_p$=0;java.lang.Throwable $CLV_t$=null;try{__CLR4_4_1jw3iwl51b();$CLV_p$=1;}catch(java.lang.Throwable $CLV_t2$){if($CLV_p$==0&&$CLV_t$==null){$CLV_t$=$CLV_t2$;}__CLR4_4_1517517lp0zmimb.R.rethrow($CLV_t2$);}finally{__CLR4_4_1517517lp0zmimb.R.globalSliceEnd(getClass().getName(),"humaneval.TEST_LARGEST_SMALLEST_INTEGERS.test_1",__CLR4_4_1_TEST_NAME_SNIFFER.getTestName(),6527,$CLV_p$,$CLV_t$);}}private void  __CLR4_4_1jw3iwl51b() throws java.lang.Exception{try{__CLR4_4_1517517lp0zmimb.R.inc(6527);
        __CLR4_4_1517517lp0zmimb.R.inc(6528);int[] input = {2, 4, 1, 3, 5, 7, 0};
        __CLR4_4_1517517lp0zmimb.R.inc(6529);int[] result = {0, 1};
        __CLR4_4_1517517lp0zmimb.R.inc(6530);org.junit.Assert.assertArrayEquals(result, humaneval.correct.LARGEST_SMALLEST_INTEGERS.largest_smallest_integers(input));
    }finally{__CLR4_4_1517517lp0zmimb.R.flushNeeded();}}
    @org.junit.Test(timeout = 3000)
    public void test_2() throws java.lang.Exception {__CLR4_4_1517517lp0zmimb.R.globalSliceStart(getClass().getName(),6531);int $CLV_p$=0;java.lang.Throwable $CLV_t$=null;try{__CLR4_4_1gn3k4451f();$CLV_p$=1;}catch(java.lang.Throwable $CLV_t2$){if($CLV_p$==0&&$CLV_t$==null){$CLV_t$=$CLV_t2$;}__CLR4_4_1517517lp0zmimb.R.rethrow($CLV_t2$);}finally{__CLR4_4_1517517lp0zmimb.R.globalSliceEnd(getClass().getName(),"humaneval.TEST_LARGEST_SMALLEST_INTEGERS.test_2",__CLR4_4_1_TEST_NAME_SNIFFER.getTestName(),6531,$CLV_p$,$CLV_t$);}}private void  __CLR4_4_1gn3k4451f() throws java.lang.Exception{try{__CLR4_4_1517517lp0zmimb.R.inc(6531);
        __CLR4_4_1517517lp0zmimb.R.inc(6532);int[] input = {1, 3, 2, 4, 5, 6, -2};
        __CLR4_4_1517517lp0zmimb.R.inc(6533);int[] result = {-2, 1};
        __CLR4_4_1517517lp0zmimb.R.inc(6534);org.junit.Assert.assertArrayEquals(result, humaneval.correct.LARGEST_SMALLEST_INTEGERS.largest_smallest_integers(input));
    }finally{__CLR4_4_1517517lp0zmimb.R.flushNeeded();}}
    @org.junit.Test(timeout = 3000)
    public void test_3() throws java.lang.Exception {__CLR4_4_1517517lp0zmimb.R.globalSliceStart(getClass().getName(),6535);int $CLV_p$=0;java.lang.Throwable $CLV_t$=null;try{__CLR4_4_1de3lbn51j();$CLV_p$=1;}catch(java.lang.Throwable $CLV_t2$){if($CLV_p$==0&&$CLV_t$==null){$CLV_t$=$CLV_t2$;}__CLR4_4_1517517lp0zmimb.R.rethrow($CLV_t2$);}finally{__CLR4_4_1517517lp0zmimb.R.globalSliceEnd(getClass().getName(),"humaneval.TEST_LARGEST_SMALLEST_INTEGERS.test_3",__CLR4_4_1_TEST_NAME_SNIFFER.getTestName(),6535,$CLV_p$,$CLV_t$);}}private void  __CLR4_4_1de3lbn51j() throws java.lang.Exception{try{__CLR4_4_1517517lp0zmimb.R.inc(6535);
        __CLR4_4_1517517lp0zmimb.R.inc(6536);int[] input = {4, 5, 3, 6, 2, 7, -7};
        __CLR4_4_1517517lp0zmimb.R.inc(6537);int[] result = {-7, 2};
        __CLR4_4_1517517lp0zmimb.R.inc(6538);org.junit.Assert.assertArrayEquals(result, humaneval.correct.LARGEST_SMALLEST_INTEGERS.largest_smallest_integers(input));
    }finally{__CLR4_4_1517517lp0zmimb.R.flushNeeded();}}
    @org.junit.Test(timeout = 3000)
    public void test_4() throws java.lang.Exception {__CLR4_4_1517517lp0zmimb.R.globalSliceStart(getClass().getName(),6539);int $CLV_p$=0;java.lang.Throwable $CLV_t$=null;try{__CLR4_4_1a53mj651n();$CLV_p$=1;}catch(java.lang.Throwable $CLV_t2$){if($CLV_p$==0&&$CLV_t$==null){$CLV_t$=$CLV_t2$;}__CLR4_4_1517517lp0zmimb.R.rethrow($CLV_t2$);}finally{__CLR4_4_1517517lp0zmimb.R.globalSliceEnd(getClass().getName(),"humaneval.TEST_LARGEST_SMALLEST_INTEGERS.test_4",__CLR4_4_1_TEST_NAME_SNIFFER.getTestName(),6539,$CLV_p$,$CLV_t$);}}private void  __CLR4_4_1a53mj651n() throws java.lang.Exception{try{__CLR4_4_1517517lp0zmimb.R.inc(6539);
        __CLR4_4_1517517lp0zmimb.R.inc(6540);int[] input = {7, 3, 8, 4, 9, 2, 5, -9};
        __CLR4_4_1517517lp0zmimb.R.inc(6541);int[] result = {-9, 2};
        __CLR4_4_1517517lp0zmimb.R.inc(6542);org.junit.Assert.assertArrayEquals(result, humaneval.correct.LARGEST_SMALLEST_INTEGERS.largest_smallest_integers(input));
    }finally{__CLR4_4_1517517lp0zmimb.R.flushNeeded();}}
    @org.junit.Test(timeout = 3000)
    public void test_5() throws java.lang.Exception {__CLR4_4_1517517lp0zmimb.R.globalSliceStart(getClass().getName(),6543);int $CLV_p$=0;java.lang.Throwable $CLV_t$=null;try{__CLR4_4_16w3nqp51r();$CLV_p$=1;}catch(java.lang.Throwable $CLV_t2$){if($CLV_p$==0&&$CLV_t$==null){$CLV_t$=$CLV_t2$;}__CLR4_4_1517517lp0zmimb.R.rethrow($CLV_t2$);}finally{__CLR4_4_1517517lp0zmimb.R.globalSliceEnd(getClass().getName(),"humaneval.TEST_LARGEST_SMALLEST_INTEGERS.test_5",__CLR4_4_1_TEST_NAME_SNIFFER.getTestName(),6543,$CLV_p$,$CLV_t$);}}private void  __CLR4_4_16w3nqp51r() throws java.lang.Exception{try{__CLR4_4_1517517lp0zmimb.R.inc(6543);
        __CLR4_4_1517517lp0zmimb.R.inc(6544);int[] input = {};
        __CLR4_4_1517517lp0zmimb.R.inc(6545);int[] result = {0, 0};
        __CLR4_4_1517517lp0zmimb.R.inc(6546);org.junit.Assert.assertArrayEquals(result, humaneval.correct.LARGEST_SMALLEST_INTEGERS.largest_smallest_integers(input));
    }finally{__CLR4_4_1517517lp0zmimb.R.flushNeeded();}}
    @org.junit.Test(timeout = 3000)
    public void test_6() throws java.lang.Exception {__CLR4_4_1517517lp0zmimb.R.globalSliceStart(getClass().getName(),6547);int $CLV_p$=0;java.lang.Throwable $CLV_t$=null;try{__CLR4_4_13n3oy851v();$CLV_p$=1;}catch(java.lang.Throwable $CLV_t2$){if($CLV_p$==0&&$CLV_t$==null){$CLV_t$=$CLV_t2$;}__CLR4_4_1517517lp0zmimb.R.rethrow($CLV_t2$);}finally{__CLR4_4_1517517lp0zmimb.R.globalSliceEnd(getClass().getName(),"humaneval.TEST_LARGEST_SMALLEST_INTEGERS.test_6",__CLR4_4_1_TEST_NAME_SNIFFER.getTestName(),6547,$CLV_p$,$CLV_t$);}}private void  __CLR4_4_13n3oy851v() throws java.lang.Exception{try{__CLR4_4_1517517lp0zmimb.R.inc(6547);
        __CLR4_4_1517517lp0zmimb.R.inc(6548);int[] input = {0};
        __CLR4_4_1517517lp0zmimb.R.inc(6549);int[] result = {0, 0};
        __CLR4_4_1517517lp0zmimb.R.inc(6550);org.junit.Assert.assertArrayEquals(result, humaneval.correct.LARGEST_SMALLEST_INTEGERS.largest_smallest_integers(input));
    }finally{__CLR4_4_1517517lp0zmimb.R.flushNeeded();}}
    @org.junit.Test(timeout = 3000)
    public void test_7() throws java.lang.Exception {__CLR4_4_1517517lp0zmimb.R.globalSliceStart(getClass().getName(),6551);int $CLV_p$=0;java.lang.Throwable $CLV_t$=null;try{__CLR4_4_1e3q5r51z();$CLV_p$=1;}catch(java.lang.Throwable $CLV_t2$){if($CLV_p$==0&&$CLV_t$==null){$CLV_t$=$CLV_t2$;}__CLR4_4_1517517lp0zmimb.R.rethrow($CLV_t2$);}finally{__CLR4_4_1517517lp0zmimb.R.globalSliceEnd(getClass().getName(),"humaneval.TEST_LARGEST_SMALLEST_INTEGERS.test_7",__CLR4_4_1_TEST_NAME_SNIFFER.getTestName(),6551,$CLV_p$,$CLV_t$);}}private void  __CLR4_4_1e3q5r51z() throws java.lang.Exception{try{__CLR4_4_1517517lp0zmimb.R.inc(6551);
        __CLR4_4_1517517lp0zmimb.R.inc(6552);int[] input = {-1, -3, -5, -6};
        __CLR4_4_1517517lp0zmimb.R.inc(6553);int[] result = {-1, 0};
        __CLR4_4_1517517lp0zmimb.R.inc(6554);org.junit.Assert.assertArrayEquals(result, humaneval.correct.LARGEST_SMALLEST_INTEGERS.largest_smallest_integers(input));
    }finally{__CLR4_4_1517517lp0zmimb.R.flushNeeded();}}
    @org.junit.Test(timeout = 3000)
    public void test_8() throws java.lang.Exception {__CLR4_4_1517517lp0zmimb.R.globalSliceStart(getClass().getName(),6555);int $CLV_p$=0;java.lang.Throwable $CLV_t$=null;try{__CLR4_4_12uw8mq523();$CLV_p$=1;}catch(java.lang.Throwable $CLV_t2$){if($CLV_p$==0&&$CLV_t$==null){$CLV_t$=$CLV_t2$;}__CLR4_4_1517517lp0zmimb.R.rethrow($CLV_t2$);}finally{__CLR4_4_1517517lp0zmimb.R.globalSliceEnd(getClass().getName(),"humaneval.TEST_LARGEST_SMALLEST_INTEGERS.test_8",__CLR4_4_1_TEST_NAME_SNIFFER.getTestName(),6555,$CLV_p$,$CLV_t$);}}private void  __CLR4_4_12uw8mq523() throws java.lang.Exception{try{__CLR4_4_1517517lp0zmimb.R.inc(6555);
        __CLR4_4_1517517lp0zmimb.R.inc(6556);int[] input = {-1, -3, -5, -6, 0};
        __CLR4_4_1517517lp0zmimb.R.inc(6557);int[] result = {-1, 0};
        __CLR4_4_1517517lp0zmimb.R.inc(6558);org.junit.Assert.assertArrayEquals(result, humaneval.correct.LARGEST_SMALLEST_INTEGERS.largest_smallest_integers(input));
    }finally{__CLR4_4_1517517lp0zmimb.R.flushNeeded();}}
    @org.junit.Test(timeout = 3000)
    public void test_9() throws java.lang.Exception {__CLR4_4_1517517lp0zmimb.R.globalSliceStart(getClass().getName(),6559);int $CLV_p$=0;java.lang.Throwable $CLV_t$=null;try{__CLR4_4_163w7f7527();$CLV_p$=1;}catch(java.lang.Throwable $CLV_t2$){if($CLV_p$==0&&$CLV_t$==null){$CLV_t$=$CLV_t2$;}__CLR4_4_1517517lp0zmimb.R.rethrow($CLV_t2$);}finally{__CLR4_4_1517517lp0zmimb.R.globalSliceEnd(getClass().getName(),"humaneval.TEST_LARGEST_SMALLEST_INTEGERS.test_9",__CLR4_4_1_TEST_NAME_SNIFFER.getTestName(),6559,$CLV_p$,$CLV_t$);}}private void  __CLR4_4_163w7f7527() throws java.lang.Exception{try{__CLR4_4_1517517lp0zmimb.R.inc(6559);
        __CLR4_4_1517517lp0zmimb.R.inc(6560);int[] input = {-6, -4, -4, -3, 1};
        __CLR4_4_1517517lp0zmimb.R.inc(6561);int[] result = {-3, 1};
        __CLR4_4_1517517lp0zmimb.R.inc(6562);org.junit.Assert.assertArrayEquals(result, humaneval.correct.LARGEST_SMALLEST_INTEGERS.largest_smallest_integers(input));
    }finally{__CLR4_4_1517517lp0zmimb.R.flushNeeded();}}
    @org.junit.Test(timeout = 3000)
    public void test_10() throws java.lang.Exception {__CLR4_4_1517517lp0zmimb.R.globalSliceStart(getClass().getName(),6563);int $CLV_p$=0;java.lang.Throwable $CLV_t$=null;try{__CLR4_4_1c3oj7x52b();$CLV_p$=1;}catch(java.lang.Throwable $CLV_t2$){if($CLV_p$==0&&$CLV_t$==null){$CLV_t$=$CLV_t2$;}__CLR4_4_1517517lp0zmimb.R.rethrow($CLV_t2$);}finally{__CLR4_4_1517517lp0zmimb.R.globalSliceEnd(getClass().getName(),"humaneval.TEST_LARGEST_SMALLEST_INTEGERS.test_10",__CLR4_4_1_TEST_NAME_SNIFFER.getTestName(),6563,$CLV_p$,$CLV_t$);}}private void  __CLR4_4_1c3oj7x52b() throws java.lang.Exception{try{__CLR4_4_1517517lp0zmimb.R.inc(6563);
        __CLR4_4_1517517lp0zmimb.R.inc(6564);int[] input = {-6, -4, -4, -3, -100, 1};
        __CLR4_4_1517517lp0zmimb.R.inc(6565);int[] result = {-3, 1};
        __CLR4_4_1517517lp0zmimb.R.inc(6566);org.junit.Assert.assertArrayEquals(result, humaneval.correct.LARGEST_SMALLEST_INTEGERS.largest_smallest_integers(input));
    }finally{__CLR4_4_1517517lp0zmimb.R.flushNeeded();}}
}
