["@Test\npublic void equalsTest() {\n    Pair<String, String> pair1 = new Pair<>(\"key\", \"value\");\n    Pair<String, String> pair2 = new Pair<>(\"key\", \"value\");\n    assertTrue(pair1.equals(pair2));\n}", "package org.apache.commons.math4.legacy.core;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class PairTest {\n    @Test\n    public void equalsTest() {\n        // Create two pairs with the same keys and values\n        Pair<Integer, Integer> pair1 = new Pair<>(1, 2);\n        Pair<Integer, Integer> pair2 = new Pair<>(1, 2);\n        \n        // Check that the equals method returns true for the two pairs\n        assertTrue(pair1.equals(pair2));\n    }\n}", "package org.apache.commons.math4.legacy.core;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class PairTest {\n    @Test\n    public void equalsTest() {\n        // Create two pairs with the same key and value\n        Pair<Integer, String> p1 = new Pair<>(1, \"one\");\n        Pair<Integer, String> p2 = new Pair<>(1, \"one\");\n\n        // Test that they are equal\n        assertEquals(p1, p2);\n\n        // Create two pairs with the same key but different values\n        Pair<Integer, String> p3 = new Pair<>(1, \"one\");\n        Pair<Integer, String> p4 = new Pair<>(1, \"two\");\n\n        // Test that they are not equal\n        assertNotEquals(p3, p4);\n\n        // Create two pairs with different keys but the same value\n        Pair<String, Integer> p5 = new Pair<>(\"one\", 1);\n        Pair<String, Integer> p6 = new Pair<>(\"two\", 1);\n\n        // Test that they are not equal\n        assertNotEquals(p5, p6);\n    }\n}", "package org.apache.commons.math4.legacy.core;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class PairTest {\n    @Test\n    public void equalsTest() {\n        // Test that null keys and values are not equal\n        Pair<String, String> pair1 = new Pair<>(\"key1\", \"value1\");\n        Pair<String, String> pair2 = new Pair<>(null, null);\n        assertNotEquals(pair1, pair2);\n\n        // Test that different keys are not equal\n        Pair<Integer, Integer> pair3 = new Pair<>(1, 2);\n        Pair<Integer, Integer> pair4 = new Pair<>(3, 4);\n        assertNotEquals(pair3, pair4);\n\n        // Test that different values are not equal\n        Pair<String, String> pair5 = new Pair<>(\"key1\", \"value1\");\n        Pair<String, String> pair6 = new Pair<>(\"key2\", \"value2\");\n        assertNotEquals(pair5, pair6);\n\n        // Test that equal keys and values are equal\n        Pair<Integer, Integer> pair7 = new Pair<>(1, 2);\n        Pair<Integer, Integer> pair8 = new Pair<>(1, 2);\n        assertEquals(pair7, pair8);\n    }\n}", "package org.apache.commons.math4.legacy.core;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class PairTest {\n    @Test\n    public void equalsTest() {\n        // Test equal key and value\n        Pair<String, Integer> pair1 = new Pair<>(\"key\", 1);\n        Pair<String, Integer> pair2 = new Pair<>(\"key\", 1);\n        assertEquals(pair1.equals(pair2), true);\n\n        // Test unequal key and value\n        Pair<String, Integer> pair3 = new Pair<>(\"key1\", 1);\n        Pair<String, Integer> pair4 = new Pair<>(\"key2\", 2);\n        assertEquals(pair3.equals(pair4), false);\n    }\n}", "package org.apache.commons.math4.legacy.core;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class PairTest {\n    @Test\n    public void equalsTest() {\n        // Test equality between two pairs with null keys and values\n        Pair<String, Integer> pair1 = new Pair<>(null, null);\n        Pair<String, Integer> pair2 = new Pair<>(null, null);\n        assertEquals(pair1.equals(pair2), true);\n\n        // Test equality between two pairs with non-null keys and values\n        pair1 = new Pair<>(\"apple\", 10);\n        pair2 = new Pair<>(\"apple\", 10);\n        assertEquals(pair1.equals(pair2), true);\n\n        // Test inequality between two pairs with different key values\n        pair1 = new Pair<>(\"apple\", 10);\n        pair2 = new Pair<>(\"banana\", 10);\n        assertEquals(pair1.equals(pair2), false);\n\n        // Test inequality between two pairs with different value values\n        pair1 = new Pair<>(\"apple\", 10);\n        pair2 = new Pair<>(\"apple\", 20);\n        assertEquals(pair1.equals(pair2), false);\n    }\n}", "\npackage org.apache.commons.math4.legacy.core;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class PairTest {\n    @Test\n    public void equalsTest() {\n        // Test equal objects\n        Pair<String, Integer> pair1 = new Pair<>(\"A\", 1);\n        Pair<String, Integer> pair2 = new Pair<>(\"A\", 1);\n        assertEquals(pair1, pair2);\n        \n        // Test unequal objects\n        Pair<String, Integer> pair3 = new Pair<>(\"A\", 1);\n        Pair<String, Integer> pair4 = new Pair<>(\"B\", 2);\n        assertNotEquals(pair3, pair4);\n        \n        // Test unequal objects with null key\n        Pair<String, Integer> pair5 = new Pair<>(null, 1);\n        Pair<String, Integer> pair6 = new Pair<>(\"A\", 1);\n        assertNotEquals(pair5, pair6);\n        \n        // Test unequal objects with null value\n        Pair<String, Integer> pair7 = new Pair<>(\"A\", null);\n        Pair<String, Integer> pair8 = new Pair<>(\"A\", 1);\n        assertNotEquals(pair7, pair8);\n        \n        // Test unequal objects with different types\n        Pair<String, Integer> pair9 = new Pair<>(\"A\", 1);\n        Pair<Integer, String> pair10 = new Pair<>(1, \"A\");\n        assertNotEquals(pair9, pair10);\n    }\n}", "package org.apache.commons.math4.legacy.core;\n\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class PairTest {\n    @Test\n    public void equalsTest() {\n        // Create two Pair objects with different values\n        Pair<String, String> pair1 = new Pair<>(\"key1\", \"value1\");\n        Pair<String, String> pair2 = new Pair<>(\"key2\", \"value2\");\n\n        // Check if the two pairs are equal or not\n        assertEquals(pair1, pair2);\n    }\n}", "\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class PairTest {\n    @Test\n    public void equalsTest() {\n        Pair<Integer, String> pair1 = new Pair<>(1, \"one\");\n        Pair<Integer, String> pair2 = new Pair<>(1, \"one\");\n        assertEquals(pair1, pair2);\n\n        Pair<Integer, String> pair3 = new Pair<>(2, \"two\");\n        Pair<Integer, String> pair4 = new Pair<>(2, \"three\");\n        assertNotEquals(pair3, pair4);\n    }\n}", "\n@Test\npublic void equalsTest() {\n    Pair<Integer, String> pair1 = new Pair<>(1, \"one\");\n    Pair<String, Integer> pair2 = new Pair<>(\"one\", 1);\n    \n    assertTrue(pair1.equals(pair2));\n}\n"]