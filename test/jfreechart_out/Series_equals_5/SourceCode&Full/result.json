["@Override\npublic boolean equals(Object obj) {\n    if (obj == this) {\n        return true;\n    }\n    if (!(obj instanceof Series)) {\n        return false;\n    }\n    Series that = (Series) obj;\n    if (!this.key.equals(that.getKey())) {\n        return false;\n    }\n    return true;\n}", "package org.jfree.data.general;\n\nimport java.util.Objects;\n\n/**\n * Tests the equals method of Series (part of a JUnit test case).\n */\npublic class SeriesTest {\n    @Test\n    public void equalsTest() {\n        // no arg constructor\n        Series series1 = new Series(\"A\");\n        assertFalse(series1.equals(null));\n        assertTrue(series1.equals(series1));\n        \n        // equals\n        Series series2 = new Series(\"A\");\n        assertTrue(series1.equals(series2));\n        \n        // hashCode\n        int code = Objects.hash(\"A\");\n        assertEquals(code, series1.hashCode());\n    }\n}", "package org.jfree.data.general;\n\nimport java.util.Objects;\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class SeriesTests {\n    @Test\n    public void equalsTest() {\n        Series<String, Number> s1 = new Series<>(\"s1\", null);\n        Series<String, Number> s2 = new Series<>(\"s1\", null);\n        assertEquals(s1, s2);\n    }\n}\n    \n\n### JFREECHART:", "@SuppressWarnings(\"unused\")\nclass SeriesTest extends Series {\n    private static final long serialVersionUID = 1L;\n\n    @Override\n    public boolean equals(Object obj) {\n        if (obj == this) {\n            return true;\n        } else if (!(obj instanceof Series)) {\n            return false;\n        }\n        // Cast to series to access private members\n        Series s = (Series) obj;\n        // Test equality of name and key\n        boolean nameEqual = s.getName().equals(this.name);\n        boolean keyEqual = s.getKey() == this.key;\n        return nameEqual && keyEqual;\n    }\n}\n", "package org.jfree.data.general;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class SeriesTest {\n    @Test\n    public void equalsTest() {\n        Series s1 = new Series(\"s1\");\n        assertTrue(s1.equals(s1));\n        assertFalse(s1.equals(null));\n        assertFalse(s1.equals(new Object()));\n        \n        Series s2 = new Series(\"s1\");\n        assertTrue(s1.equals(s2));\n    }\n}\n    \n\n### Response:", "<TEMPLATE_INDENT><CONTEXT></CONTEXT><UT_STRING name=\"seriesName\">Series</UT_STRING>\n@Test\npublic void testEquals() {\n    Series series1 = new Series(<SERIES_NAME>);\n    assertFalse(series1.equals(null));\n    assertTrue(series1.equals(series1));\n\n    Series series2 = new Series(<SERIES_NAME>);\n    assertTrue(series1.equals(series2));\n}", "Timeout", "@Test\npublic void equalsTest() {\n    Series<String, Number> series1 = new Series<>(\"Series\");\n    Series<String, Number> series2 = new Series<>(\"Series\");\n    assertEquals(series1, series2); // since they have the same name\n    \n    series2.setName(\"New Name\");\n    assertNotEquals(series1, series2); // since they don't have the same name\n}", "// TODO\npackage org.jfree.data.general;\n\nimport java.io.Serializable;\n\n/**\n * A test class for {@link Series}.\n */\npublic class SeriesTest {\n    \n    /**\n     * Tests the equals() method.\n     */\n    @Test\n    public void equalsTest() {\n        // TODO: complete this method\n        \n    }\n}", "package org.jfree.data.general;\n\nimport java.io.Serializable;\nimport java.util.EventListener;\n\n/**\n * The interface that must be supported by all objects registered with a \n * {@link Series} (through the method \n * {@link Series#addChangeListener(SeriesChangeListener)}).\n */\npublic interface SeriesChangeListener extends EventListener, Serializable {\n\n    /**\n     * Receives notification of an change to the series.\n     *\n     * @param event  contains information about the event that triggered the\n     *               notification.\n     */\n    void seriesChanged(SeriesChangeEvent event);\n}\n\npackage org.jfree.data;\n\nimport java.util.EventListener;\n\npublic class SeriesChangeEvent extends EventObject {\n\n    /** \n     * Creates a new {@code SeriesChangeEvent}. \n     *\n     * @param source  the source of the event ({@code null} not permitted).\n     */\n    public SeriesChangeEvent(Object source) {\n        super(source);\n    }\n}\n"]