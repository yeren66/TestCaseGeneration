Source code: 


public static double[] getPowerRegression(double[][] data) {

    int n = data.length;
    if (n < 2) {
        throw new IllegalArgumentException("Not enough data.");
    }

    double sumX = 0;
    double sumY = 0;
    double sumXX = 0;
    double sumXY = 0;
    for (int i = 0; i < n; i++) {
        double x = Math.log(data[i][0]);
        double y = Math.log(data[i][1]);
        sumX += x;
        sumY += y;
        double xx = x * x;
        sumXX += xx;
        double xy = x * y;
        sumXY += xy;
    }
    double sxx = sumXX - (sumX * sumX) / n;
    double sxy = sumXY - (sumX * sumY) / n;
    double xbar = sumX / n;
    double ybar = sumY / n;

    double[] result = new double[2];
    result[1] = sxy / sxx;
    result[0] = Math.pow(Math.exp(1.0), ybar - result[1] * xbar);

    return result;

}



No.1 generated result --------------------------


package org.jfree.data.statistics;

import static org.junit.jupiter.api.Assertions.*;

public class RegressionTest {
    @Test
    public void getPowerRegressionTest() {
        double[][] data = new double[2][2];
        data[0] = new double[] {1, 2};
        data[1] = new double[] {3, 4};
        double[] result = Regression.getPowerRegression(data);
        assertArrayEquals(new double[] {Math.pow(1, 2), Math.pow(3, 2)}, result, 0.001);
    }
}


No.2 generated result --------------------------


package org.jfree.data.statistics;

import static org.junit.Assert.*;
import org.junit.Test;

public class RegressionTest {
    @Test
    public void getPowerRegressionTest() {
        double[][] data = new double[][] {{1, 2}, {3, 4}};
        double[] expectedResult = new double[] {0.5, 6.0};
        
        double[] result = Regression.getPowerRegression(data);
        assertEquals(expectedResult, result, 0.01);
    }
}



No.3 generated result --------------------------

import org.jfree.data.statistics.Regression;
import static org.junit.jupiter.api.Assertions.*;

public class RegressionTest {
    @Test
    public void getPowerRegressionTest() {
        double[][] inputData = {{1, 2}, {3, 4}, {5, 6}}; // Test data
        double[] expectedResult = {2.0, -1.0};           // Expected output
        
        assertArrayEquals(expectedResult, Regression.getPowerRegression(inputData));
    }
}


No.4 generated result --------------------------


package org.jfree.data.statistics;

import org.junit.jupiter.api.*;
import static org.junit.jupiter.api.Assertions.*;

public class RegressionTest {
    @Test
    public void getPowerRegressionTest() {
        double[][] data = {{1, 2}, {3, 4}, {5, 6}}; // valid input for the method
        Regression regression = new Regression();
        double[] result = regression.getPowerRegression(data);
        assertEquals(result[0], 1.0, 1e-9); // check that the estimated power coefficient is correct
        assertEquals(result[1], 2.0, 1e-9); // check that the estimated intercept is correct
    }
}



No.5 generated result --------------------------

package org.jfree.data.statistics;
import org.junit.jupiter.api.*;
import static org.junit.jupiter.api.Assertions.*;
public class RegressionTest {
    @Test public void getPowerRegressionTest() {
        double[][] data = {{25, 10}, {50, 40}, {75, 90}, {100, 160}};
        double[] result = Regression.getPowerRegression(data);
        assertEquals(result[0], Math.pow(Math.exp(1.0), 3.0));
        assertEquals(result[1], 4.0);
    }
}


No.6 generated result --------------------------


package org.jfree.data.statistics;

import org.junit.jupiter.api.*;
import static org.junit.jupiter.api.Assertions.*;

public class RegressionTest {
    @Test
    public void getPowerRegressionTest() {
        double[][] data = new double[3][2];
        data[0] = new double[]{1, 4};
        data[1] = new double[]{2, 9};
        data[2] = new double[]{3, 16};

        double[] expectedResult = new double[]{2.5, 8.5};

        assertArrayEquals(expectedResult, Regression.getPowerRegression(data));
    }
}


No.7 generated result --------------------------

package org.jfree.data.statistics;

import org.junit.jupiter.api.*;
import static org.junit.jupiter.api.Assertions.*;

public class RegressionTest {
    @Test
    public void getPowerRegressionTest() {
        double[][] data = new double[5][2];
        data[0] = new double[]{1, 1};
        data[1] = new double[]{2, 4};
        data[2] = new double[]{3, 9};
        data[3] = new double[]{4, 16};
        data[4] = new double[]{5, 25};

        double[] expectedResult = new double[2];
        expectedResult[0] = 1.2;
        expectedResult[1] = 3.8;

        double[] actualResult = Regression.getPowerRegression(data);
        assertArrayEquals(expectedResult, actualResult, 0.001);
    }
}


No.8 generated result --------------------------


package org.jfree.data.statistics;

import org.junit.jupiter.api.*;
import static org.junit.jupiter.api.Assertions.*;

public class RegressionTest {
    @Test
    public void getPowerRegressionTest() {
        double[][] data = new double[3][2];
        data[0][0] = 1;
        data[0][1] = 2;
        data[1][0] = 3;
        data[1][1] = 4;
        data[2][0] = 5;
        data[2][1] = 6;

        double[] result = Regression.getPowerRegression(data);
        assertEquals(result[0], Math.pow(Math.exp(1), (3 - (3 + 4) / 2)), 0.00001);
        assertEquals(result[1], 1, 0.00001);
    }
}


No.9 generated result --------------------------


package org.jfree.data.statistics;

import org.junit.jupiter.api.*;
import static org.junit.jupiter.api.Assertions.*;

public class RegressionTest {
    @Test
    public void getPowerRegressionTest() {
        double[][] data = new double[3][2];
        data[0] = new double[] {1, 1};
        data[1] = new double[] {2, 4};
        data[2] = new double[] {3, 9};

        double[] result = Regression.getPowerRegression(data);
        assertEquals(result[0], Math.pow(Math.exp(1.0), 1 - (Math.log(data[0][0]) * Math.log(data[0][1])) / n));
        assertEquals(result[1], Math.pow(Math.exp(1.0), 2 - (Math.log(data[1][0]) * Math.log(data[1][1])) / n));
        assertEquals(result[2], Math.pow(Math.exp(1.0), 3 - (Math.log(data[2][0]) * Math.log(data[2][1])) / n));
    }
}


No.10 generated result --------------------------

import org.junit.jupiter.api.*;
import static org.junit.jupiter.api.Assertions.*;

public class RegressionTest {
    @Test
    public void getPowerRegressionTest() {
        // Set up input data
        double[][] data = new double[2][];
        data[0] = new double[] {1, 2};
        data[1] = new double[] {3, 4};

        // Invoke the method
        double[] result = Regression.getPowerRegression(data);

        // Check the output
        assertArrayEquals(new double[] {0.5, 0.25}, result, 1e-6);
    }
}


