["\npackage org.jfree.data.general;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class DatasetUtilsTest {\n    @Test\n    public void calculatePieDatasetTotalTest() {\n        // Test case 1: Total value of the dataset is calculated correctly\n        PieDataset dataset = new DefaultPieDataset();\n        dataset.setValue(\"Key 1\", 50);\n        dataset.setValue(\"Key 2\", 30);\n        dataset.setValue(\"Key 3\", 20);\n        \n        double totalValue = DatasetUtils.calculatePieDatasetTotal(dataset);\n        assertEquals(100, totalValue);\n    }\n    \n    @Test\n    public void calculatePieDatasetTotalTest_withNulls() {\n        // Test case 2: Total value of the dataset is calculated correctly when there are null values\n        PieDataset dataset = new DefaultPieDataset();\n        dataset.setValue(\"Key 1\", 50);\n        dataset.setValue(\"Key 2\", null);\n        dataset.setValue(\"Key 3\", 20);\n        \n        double totalValue = DatasetUtils.calculatePieDatasetTotal(dataset);\n        assertEquals(70, totalValue);\n    }\n}", "\npackage org.jfree.data.general;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class DatasetUtilsTest {\n    @Test\n    public void calculatePieDatasetTotalTest() {\n        // Create a sample dataset with two keys and their corresponding values\n        PieDataset dataset = new DefaultPieDataset();\n        dataset.setValue(\"Key 1\", 50);\n        dataset.setValue(\"Key 2\", 75);\n\n        // Calculate the total value of the dataset\n        double expectedTotalValue = calculatePieDatasetTotal(dataset);\n\n        // Check that the calculated total value is equal to the sum of the values for each key\n        assertEquals(125, expectedTotalValue);\n    }\n}", "package org.jfree.data.general;\n\nimport java.util.List;\nimport java.lang.Comparable;\nimport java.lang.Double;\nimport org.junit.Test;\nimport static org.junit.Assert.*;\n\npublic class DatasetUtilsTest {\n    @Test\n    public void calculatePieDatasetTotalTest() {\n        PieDataset dataset = new DefaultPieDataset();\n        List keys = dataset.getKeys();\n        double totalValue = 0;\n        Iterator iterator = keys.iterator();\n        while (iterator.hasNext()) {\n            Comparable current = (Comparable) iterator.next();\n            if (current != null) {\n                Number value = dataset.getValue(current);\n                double v = 0.0;\n                if (value != null) {\n                    v = value.doubleValue();\n                }\n                if (v > 0) {\n                    totalValue = totalValue + v;\n                }\n            }\n        }\n        assertEquals(totalValue, DatasetUtils.calculatePieDatasetTotal(dataset), 0);\n    }\n}", "package org.jfree.data.general;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class DatasetUtilsTest {\n    @Test\n    public void calculatePieDatasetTotalTest() {\n        PieDataset dataset = new DefaultPieDataset();\n        dataset.setValue(\"Category A\", 10);\n        dataset.setValue(\"Category B\", 20);\n        dataset.setValue(\"Category C\", 30);\n        \n        double totalValue = DatasetUtils.calculatePieDatasetTotal(dataset);\n        assertEquals(60, totalValue);\n    }\n}", "import org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\nimport org.jfree.data.general.DatasetUtils;\nimport org.jfree.data.general.PieDataset;\n\npublic class DatasetUtilsTest {\n    @Test\n    public void calculatePieDatasetTotalTest() {\n        // Create a sample dataset with some data\n        PieDataset dataset = new PieDataset();\n        dataset.addValue(\"A\", 10);\n        dataset.addValue(\"B\", 20);\n        dataset.addValue(\"C\", 30);\n\n        // Calculate the total value of the dataset\n        double totalValue = DatasetUtils.calculatePieDatasetTotal(dataset);\n\n        // Verify that the returned value is correct\n        assertEquals(60, totalValue);\n    }\n}", "\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class DatasetUtilsTest {\n    @Test\n    public void calculatePieDatasetTotalTest() {\n        // Create a pie dataset with 3 keys and their corresponding values\n        PieDataset dataset = new DefaultPieDataset();\n        dataset.setValue(\"Key1\", 10);\n        dataset.setValue(\"Key2\", 20);\n        dataset.setValue(\"Key3\", 30);\n\n        // Calculate the total value of the pie dataset using the calculatePieDatasetTotal method\n        double totalValue = DatasetUtils.calculatePieDatasetTotal(dataset);\n\n        // Verify that the total value is correct\n        assertEquals(60, totalValue);\n    }\n}\n", "\npackage org.jfree.data.general;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class DatasetUtilsTest {\n    @Test\n    public void calculatePieDatasetTotalTest() {\n        PieDataset dataset = new PieDataset();\n        List keys = Arrays.asList(1, 2, 3);\n        Double values = Arrays.asList(10.0, 20.0, 30.0);\n        dataset.setKeys(keys);\n        dataset.setValues(values);\n\n        double totalValue = DatasetUtils.calculatePieDatasetTotal(dataset);\n        assertEquals(60.0, totalValue);\n    }\n}\n", "package org.jfree.data.general;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class DatasetUtilsTest {\n    @Test\n    public void calculatePieDatasetTotalTest() {\n        // Create a mock PieDataset object\n        PieDataset dataset = Mockito.mock(PieDataset.class);\n        \n        // Set up the expectations for the mock\n        List keys = new ArrayList();\n        keys.add(\"Key1\");\n        keys.add(\"Key2\");\n        when(dataset.getKeys()).thenReturn(keys);\n        \n        Number value1 = Mockito.mock(Number.class);\n        when(value1.doubleValue()).thenReturn(10.0);\n        Number value2 = Mockito.mock(Number.class);\n        when(value2.doubleValue()).thenReturn(20.0);\n        \n        when(dataset.getValue(\"Key1\")).thenReturn(value1);\n        when(dataset.getValue(\"Key2\")).thenReturn(value2);\n        \n        // Call the method to be tested\n        double totalValue = DatasetUtils.calculatePieDatasetTotal(dataset);\n        \n        // Verify the result\n        assertEquals(30.0, totalValue);\n    }\n}", "@Test\npublic void calculatePieDatasetTotalTest() {\n    // Create a new instance of PieDataset\n    PieDataset dataset = new DefaultPieDataset();\n    \n    // Populate the dataset with some data\n    dataset.setValue(\"A\", 10);\n    dataset.setValue(\"B\", 20);\n    dataset.setValue(\"C\", 30);\n    \n    // Calculate the total value of the dataset\n    double totalValue = DatasetUtils.calculatePieDatasetTotal(dataset);\n    \n    // Assert that the total value is correct\n    assertEquals(60, totalValue, 0.01);\n}", "package org.jfree.data.general;\n\nimport static org.junit.jupiter.api.Assertions.*;\nimport java.util.List;\nimport java.util.ArrayList;\nimport org.junit.jupiter.api.Test;\n\npublic class DatasetUtilsTest {\n    @Test\n    public void calculatePieDatasetTotalTest() {\n        PieDataset dataset = new DefaultPieDataset();\n        List keys = new ArrayList<>();\n        keys.add(\"A\");\n        keys.add(\"B\");\n        keys.add(\"C\");\n        \n        double totalValue = 0;\n        for (Object key : keys) {\n            Number value = dataset.getValue(key);\n            if (value != null) {\n                double v = value.doubleValue();\n                totalValue += v;\n            }\n        }\n        assertEquals(12, totalValue, 0.0001);\n    }\n}"]