{
    "project_name": "jfreechart",
    "file_name": "DatasetUtils.java",
    "relative_path": "jfreechart/src/main/java/org/jfree/data/general/DatasetUtils.java",
    "execute_path": "jfreechart",
    "package": "org.jfree.data.general",
    "docstring": "/**\n     * Calculates the total of all the values in a {@link PieDataset}.  If\n     * the dataset contains negative or {@code null} values, they are\n     * ignored.\n     *\n     * @param dataset  the dataset ({@code null} not permitted).\n     *\n     * @return The total.\n     */",
    "source_code": "\npublic static double calculatePieDatasetTotal(PieDataset dataset) {\n    Args.nullNotPermitted(dataset, \"dataset\");\n    List keys = dataset.getKeys();\n    double totalValue = 0;\n    Iterator iterator = keys.iterator();\n    while (iterator.hasNext()) {\n        Comparable current = (Comparable) iterator.next();\n        if (current != null) {\n            Number value = dataset.getValue(current);\n            double v = 0.0;\n            if (value != null) {\n                v = value.doubleValue();\n            }\n            if (v > 0) {\n                totalValue = totalValue + v;\n            }\n        }\n    }\n    return totalValue;\n}\n",
    "class_name": "DatasetUtils",
    "method_name": "calculatePieDatasetTotal",
    "arguments": [
        "PieDataset dataset"
    ],
    "generate_test": [
        "public static double calculatePieDatasetTotal(PieDataset dataset) {\n    double total = 0.0;\n    for (int i = 0; i < dataset.getItemCount(); i++) {\n        total += dataset.getValue(i);\n    }\n    return total;\n}",
        "package org.jfree.data.general;\n\nimport java.util.Arrays;\n\npublic class DatasetUtils {\n    public static double calculatePieDatasetTotal(PieDataset dataset) {\n        return Arrays.stream(dataset.getItemCount())\n                .mapToDouble(dataset::getYValue).sum();\n    }\n}\n    \n### Response:",
        "package org.jfree.data.general;\n\nimport java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.List;\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\n/**\n * Some unit tests for the {@link DatasetUtils} class.\n */\npublic class DatasetUtilsTest {\n    \n    /**\n     * Confirm that the equals() method can distinguish all the required fields.\n     */\n    @Test\n    public void checkEquals() {\n        DefaultPieDataset d1 = new DefaultPieDataset();\n        d1.setValue(\"S1\", new Double(23.4));\n        d1.setValue(\"S2\", null);\n        PieDataset d2 = DatasetUtils.createPieDataset(new double[] {23.4, 0}, \n                new Comparable[] {\"S1\", \"S2\"});\n        assertEquals(d1, d2);\n    }\n    \n    /**\n     * Serialize an instance for testing.\n     */\n    @Test\n    public void testSerialization() {\n        DefaultPieDataset d1 = new DefaultPieDataset();\n        d1.setValue(\"S1\", new Double(23.4));\n        PieDataset d2 = null;\n        try {\n            ByteArrayOutputStream buffer = new ByteArrayOutputStream();\n            ObjectOutput out = new ObjectOutputStream(buffer);\n            out.writeObject(d1);\n            out.close();\n            \n            ObjectInput in = new ObjectInputStream(\n                new ByteArrayInputStream(buffer.toByteArray())\n            );\n            d2 = (PieDataset) in.readObject();\n            in.close();\n        }\n        catch (Exception e) {\n            System.out.println(e.toString());\n        }\n        assertEquals(d1, d2);\n    }\n    \n}",
        "package org.jfree.data.general;\n\nimport org.junit.jupiter.api.Test;\n\nclass DatasetUtilsTest {\n\n  @Test\n  void calculatePieDatasetTotalTest() {\n    <FILL>\n  }\n}",
        "package org.jfree.data.general;\n\nimport java.util.ArrayList;\nimport java.util.List;\n\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class DatasetUtilsTest {\n\n    private PieDataset dataset1;\n    private PieDataset dataset2;\n    \n    @BeforeEach\n    public void setUp() {\n        dataset1 = new DefaultPieDataset();\n        dataset1.setValue(\"A\", 10);\n        dataset1.setValue(\"B\", 20);\n        \n        dataset2 = new DefaultPieDataset();\n        dataset2.setValue(\"C\", 30);\n        dataset2.setValue(\"D\", 40);\n    }\n    \n    @Test\n    public void calculatePieDatasetTotal_EmptyDataset() {\n        PieDataset empty = new DefaultPieDataset();\n        assertEquals(0, DatasetUtils.calculatePieDatasetTotal(empty));\n    }\n    \n    @Test\n    public void calculatePieDatasetTotal_SingleSeries() {\n        assertEquals(30, DatasetUtils.calculatePieDatasetTotal(dataset1));\n    }\n    \n    @Test\n    public void calculatePieDatasetTotal_MultipleSeries() {\n        assertEquals(70, DatasetUtils.calculatePieDatasetTotal(dataset2));\n    }\n}\n\n### Response:",
        "@SuppressWarnings(\"nls\")\npublic class PieDatasetUtilities {\n \n    private static final double EPSILON = 1E-6;\n \n    public static void main(String[] args) {\n        DefaultPieDataset dataset = new DefaultPieDataset();\n        dataset.setValue(\"Slice A\", 25);\n        dataset.setValue(\"Slice B\", 75);\n        assertEquals(100, calculateTotal(dataset), EPSILON);\n    }\n}",
        "\nimport org.jfree.data.general.DatasetUtils;\nimport org.jfree.data.xy.XYSeriesCollection;\n\npublic class DatasetUtilsTest {\n    public static void main(String[] args) {\n        // create a test dataset\n        XYSeriesCollection dataset = new XYSeriesCollection();\n        dataset.add(1.0);\n        dataset.add(2.0);\n        dataset.add(3.0);\n\n        double total = DatasetUtils.calculatePieDatasetTotal(dataset);\n        System.out.println(\"The total of the test dataset is: \" + total);\n    }\n}\n",
        "import org.jfree.data.general.DatasetUtilities;\n\npublic class DatasetUtilsTest {\n    @Test\n    public void calculatePieDatasetTotalTest() {\n        DefaultPieDataset dataset = new DefaultPieDataset();\n        dataset.setValue(\"One\", 1);\n        dataset.setValue(\"Two\", 2);\n        dataset.setValue(\"Three\", 3);\n        Number result = DatasetUtilities.calculatePieDatasetTotal(dataset);\n        assertEquals(6, result.doubleValue());\n    }\n}",
        "package org.jfree.data.general;\n\nimport java.util.*;\nimport org.jfree.data.category.*;\n\npublic class DatasetUtils {\n    public static double calculatePieDatasetTotal(PieDataset dataset) {\n        double total = 0.0;\n        for (int i = 0; i < dataset.getItemCount(); i++) {\n            total += dataset.getValue(i).doubleValue();\n        }\n        return total;\n    }\n}",
        "package org.jfree.data.general;\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\npublic class DatasetUtilsTest {\n    @Test\n    public void calculatePieDatasetTotalTest() {\n        DefaultPieDataset dataset = new DefaultPieDataset();\n        assertEquals(0, DatasetUtils.calculatePieDatasetTotal(dataset));\n        dataset.setValue(\"A\", 1.2);\n        assertEquals(1.2, DatasetUtils.calculatePieDatasetTotal(dataset),\n                     Double.MIN_VALUE);\n        dataset.setValue(\"B\", 3.4);\n        assertEquals(4.6, DatasetUtils.calculatePieDatasetTotal(dataset),\n                     Double.MIN_VALUE);\n    }\n}"
    ]
}