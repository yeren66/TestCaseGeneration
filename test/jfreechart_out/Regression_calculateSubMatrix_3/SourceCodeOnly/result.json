{
    "project_name": "jfreechart",
    "file_name": "Regression.java",
    "relative_path": "jfreechart/src/main/java/org/jfree/data/statistics/Regression.java",
    "execute_path": "jfreechart",
    "package": "org.jfree.data.statistics",
    "docstring": "/**\n     * Returns a matrix with the following features: (1) the number of rows\n     * and columns is 1 less than that of the original matrix; (2)the matrix\n     * is triangular, i.e. all elements a (row, column) with column &gt; row are\n     * zero.  This method is used for calculating a polynomial regression.\n     * \n     * @param matrix  the start matrix.\n     *\n     * @return The new matrix.\n     */",
    "source_code": "\nprivate static double[][] calculateSubMatrix(double[][] matrix){\n    int equations = matrix.length;\n    int coefficients = matrix[0].length;\n    double[][] result = new double[equations - 1][coefficients - 1];\n    for (int eq = 1; eq < equations; eq++) {\n        double factor = matrix[0][0] / matrix[eq][0];\n        for (int coe = 1; coe < coefficients; coe++) {\n            result[eq - 1][coe -1] = matrix[0][coe] - matrix[eq][coe]\n                    * factor;\n        }\n    }\n    if (equations == 1) {\n        return result;\n    }\n    // check for zero pivot element\n    if (result[0][0] == 0) {\n        boolean found = false;\n        for (int i = 0; i < result.length; i ++) {\n            if (result[i][0] != 0) {\n                found = true;\n                double[] temp = result[0];\n                System.arraycopy(result[i], 0, result[0], 0, \n                        result[i].length);\n                System.arraycopy(temp, 0, result[i], 0, temp.length);\n                break;\n            }\n        }\n        if (!found) {\n            //System.out.println(\"Equation has no solution!\");\n            return new double[equations - 1][coefficients - 1];\n        }\n    }\n    double[][] subMatrix = calculateSubMatrix(result);\n    for (int eq = 1; eq < equations -  1; eq++) {\n        result[eq][0] = 0;\n        if (coefficients - 1 - 1 >= 0) System.arraycopy(subMatrix[eq - 1], 0, result[eq], 1, coefficients - 1 - 1);\n    }\n    return result;\n}\n",
    "class_name": "Regression",
    "method_name": "calculateSubMatrix",
    "arguments": [
        "double[][] matrix"
    ],
    "generate_test": [
        "package org.jfree.data.statistics;\n\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class RegressionTest {\n    @Test\n    public void calculateSubMatrixTest() {\n        double[][] matrix = new double[][] {{1, 2, 3}, {4, 5, 6}, {7, 8, 9}};\n        double[][] subMatrix = Regression.calculateSubMatrix(matrix);\n        assertEquals(subMatrix[0][0], 1, 0.01);\n        assertEquals(subMatrix[0][1], -3, 0.01);\n        assertEquals(subMatrix[0][2], 4, 0.01);\n        assertEquals(subMatrix[1][0], 7, 0.01);\n        assertEquals(subMatrix[1][1], -9, 0.01);\n        assertEquals(subMatrix[1][2], 10, 0.01);\n    }\n}",
        "@Test\npublic void calculateSubMatrixTest() {\n    double[][] matrix = new double[][] {{1, 2}, {3, 4}};\n    double[][] expectedResult = new double[][] {{0, -1}, {1.5, -2}};\n    double[][] actualResult = calculateSubMatrix(matrix);\n    assertArrayEquals(expectedResult, actualResult);\n}",
        "\npackage org.jfree.data.statistics;\n\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class RegressionTest {\n    @Test\n    public void calculateSubMatrixTest() {\n        double[][] matrix = {{1, 2, 3}, {4, 5, 6}};\n        double[][] result = calculateSubMatrix(matrix);\n        assertEquals(1, result[0][0], 0.001);\n        assertEquals(2, result[0][1], 0.001);\n        assertEquals(3, result[0][2], 0.001);\n    }\n}",
        "package org.jfree.data.statistics;\n\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class RegressionTest {\n    @Test\n    public void calculateSubMatrixTest() {\n        double[][] matrix = new double[3][2];\n        matrix[0][0] = 1;\n        matrix[0][1] = 2;\n        matrix[1][0] = 3;\n        matrix[1][1] = 4;\n        matrix[2][0] = 5;\n        matrix[2][1] = 6;\n\n        double[][] subMatrix = calculateSubMatrix(matrix);\n\n        assertEquals(2, subMatrix.length);\n        assertEquals(1, subMatrix[0].length);\n        assertEquals(-3, subMatrix[0][0]);\n        assertEquals(-5, subMatrix[1][0]);\n    }\n}",
        "\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class RegressionTest {\n    @Test\n    public void calculateSubMatrixTest() {\n        double[][] matrix = new double[][]{{1, 2}, {3, 4}};\n        double[][] expectedResult = new double[][]{{-3.0/18.0, -2.5/9.0}, {-6.0/18.0, -2.75/9.0}};\n        \n        double[][] actualResult = calculateSubMatrix(matrix);\n        \n        assertArrayEquals(expectedResult, actualResult);\n    }\n}\n",
        "\n@Test\npublic void calculateSubMatrixTest() {\n    double[][] matrix = new double[2][3];\n    matrix[0][0] = 1;\n    matrix[0][1] = 2;\n    matrix[0][2] = 3;\n    matrix[1][0] = 4;\n    matrix[1][1] = 5;\n    matrix[1][2] = 6;\n    \n    double[][] expectedResult = new double[1][2];\n    expectedResult[0][0] = -3;\n    expectedResult[0][1] = -9;\n    \n    assertArrayEquals(expectedResult, calculateSubMatrix(matrix));\n}",
        "\npackage org.jfree.data.statistics;\n\nimport static org.junit.Assert.*;\n\npublic class RegressionTest {\n    @Test\n    public void calculateSubMatrixTest() {\n        double[][] matrix = {{1, 2}, {3, 4}};\n        double[][] expectedResult = {{0.5, 1.5}, {1.666667, 2.333333}};\n        assertEquals(expectedResult, calculateSubMatrix(matrix));\n    }\n}\n",
        "package org.jfree.data.statistics;\n\nimport static org.junit.Assert.*;\nimport org.junit.Test;\n\npublic class RegressionTest {\n    @Test\n    public void calculateSubMatrixTest() {\n        double[][] matrix = {{1, 2}, {3, 4}};\n        double[][] expectedResult = {{0, 1}, {1, 0}};\n        \n        assertArrayEquals(expectedResult, Regression.calculateSubMatrix(matrix));\n    }\n}",
        "\npackage org.jfree.data.statistics;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class RegressionTest {\n    @Test\n    public void calculateSubMatrixTest() {\n        double[][] matrix = new double[3][3];\n        matrix[0][0] = 1;\n        matrix[0][1] = 2;\n        matrix[0][2] = 3;\n        matrix[1][0] = 4;\n        matrix[1][1] = 5;\n        matrix[1][2] = 6;\n        matrix[2][0] = 7;\n        matrix[2][1] = 8;\n        matrix[2][2] = 9;\n        \n        double[][] result = Regression.calculateSubMatrix(matrix);\n        \n        assertEquals(result.length, 2);\n        assertEquals(result[0].length, 2);\n        assertEquals(result[1].length, 2);\n        assertEquals(result[0][0], 4);\n        assertEquals(result[0][1], 5);\n        assertEquals(result[1][0], 7);\n        assertEquals(result[1][1], 8);\n    }\n}",
        "package org.jfree.data.statistics;\n\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class RegressionTest {\n    @Test\n    public void calculateSubMatrixTest() {\n        double[][] matrix = {{1, 2}, {3, 4}};\n        double[][] expectedResult = {{0, 0}, {0, 0}};\n\n        assertArrayEquals(expectedResult, Regression.calculateSubMatrix(matrix));\n    }\n}"
    ]
}