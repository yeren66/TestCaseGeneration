{
    "project_name": "jfreechart",
    "file_name": "JSONUtils.java",
    "relative_path": "jfreechart/src/main/java/org/jfree/data/json/JSONUtils.java",
    "execute_path": "jfreechart",
    "package": "org.jfree.data.json",
    "docstring": "/**\n     * Returns a string containing the data in JSON format.  The format is\n     * an array of arrays, where each sub-array represents one data value.\n     * The sub-array should contain two items, first the item key as a string\n     * and second the item value as a number.  For example:\n     * {@code [[\"Key A\", 1.0], [\"Key B\", 2.0]]}\n     * <br><br>\n     * Note that this method can be used with instances of {@link PieDataset}.\n     * \n     * @param data  the data ({@code null} not permitted).\n     * \n     * @return A string in JSON format. \n     */",
    "source_code": "\npublic static String writeKeyedValues(KeyedValues data) {\n    Args.nullNotPermitted(data, \"data\");\n    StringWriter sw = new StringWriter();\n    try {\n        writeKeyedValues(data, sw);\n    } catch (IOException ex) {\n        throw new RuntimeException(ex);\n    }\n    return sw.toString();\n}\n",
    "class_name": "JSONUtils",
    "method_name": "writeKeyedValues",
    "arguments": [
        "KeyedValues data"
    ],
    "generate_test": [
        "package org.jfree.data.json;\n\nimport java.io.StringWriter;\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class JSONUtilsTest {\n    @Test\n    public void writeKeyedValuesTest() {\n        KeyedValues data = new KeyedValues();\n        StringWriter sw = new StringWriter();\n        \n        try {\n            JSONUtils.writeKeyedValues(data, sw);\n        } catch (IOException ex) {\n            throw new RuntimeException(ex);\n        }\n        \n        assertEquals(\"\", sw.toString());\n    }\n}",
        "package org.jfree.data.json;\n\nimport java.io.IOException;\n\nimport java.io.StringWriter;\n\nimport java.util.Iterator;\n\nimport java.util.List;\n\nimport org.jfree.chart.util.Args;\n\nimport org.jfree.data.KeyedValues;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class JSONUtilsTest {\n    @Test\n    public void writeKeyedValuesTest() {\n        // Create a KeyedValues object with some sample data\n        KeyedValues keyedValues = new KeyedValues();\n        keyedValues.addValue(\"Value 1\", \"Category 1\");\n        keyedValues.addValue(\"Value 2\", \"Category 2\");\n        keyedValues.addValue(\"Value 3\", \"Category 3\");\n\n        // Write the KeyedValues object to a StringWriter\n        StringWriter sw = new StringWriter();\n        try {\n            JSONUtils.writeKeyedValues(keyedValues, sw);\n        } catch (IOException ex) {\n            fail(\"Exception caught while writing KeyedValues: \" + ex);\n        }\n\n        // Read the StringWriter contents and check that it matches the expected output\n        String actual = sw.toString();\n        assertEquals(\"[{\\\"key\\\":\\\"Category 1\\\",\\\"value\\\":\\\"Value 1\\\"},{\\\"key\\\":\\\"Category 2\\\",\\\"value\\\":\\\"Value 2\\\"},{\\\"key\\\":\\\"Category 3\\\",\\\"value\\\":\\\"Value 3\\\"}]\", actual);\n    }\n}",
        "@Test\npublic void writeKeyedValuesTest() {\n    // Create a KeyedValues object with some data\n    KeyedValues keyedValues = new KeyedValues();\n    keyedValues.put(\"key1\", \"value1\");\n    keyedValues.put(\"key2\", \"value2\");\n    keyedValues.put(\"key3\", \"value3\");\n\n    // Call the writeKeyedValues method and get its return value\n    String result = JSONUtils.writeKeyedValues(keyedValues);\n\n    // Verify that the returned string is in the expected format\n    assertEquals(\"{\\\"key1\\\":\\\"value1\\\",\\\"key2\\\":\\\"value2\\\",\\\"key3\\\":\\\"value3\\\"}\", result);\n}",
        "package org.jfree.data.json;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class JSONUtilsTest {\n    @Test\n    public void writeKeyedValuesTest() {\n        KeyedValues data = new KeyedValues();\n        data.addValue(\"A\", 10);\n        data.addValue(\"B\", 20);\n        data.addValue(\"C\", 30);\n        \n        StringWriter sw = new StringWriter();\n        JSONUtils.writeKeyedValues(data, sw);\n        assertEquals(\"[{\\\"A\\\":10},{\\\"B\\\":20},{\\\"C\\\":30}]\", sw.toString());\n    }\n}",
        "\npackage org.jfree.data.json;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class JSONUtilsTest {\n    @Test\n    public void writeKeyedValuesTest() {\n        KeyedValues data = new KeyedValues();\n        StringWriter sw = new StringWriter();\n        try {\n            JSONUtils.writeKeyedValues(data, sw);\n        } catch (IOException ex) {\n            throw new RuntimeException(ex);\n        }\n        assertEquals(\"\", sw.toString());\n    }\n}",
        "import org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class JSONUtilsTest {\n    @Test\n    public void writeKeyedValuesTest() {\n        KeyedValues data = new KeyedValues();\n        data.addValue(\"key1\", 1);\n        data.addValue(\"key2\", 2);\n        String expectedJson = \"{\\\"data\\\":[{\\\"key\\\":\\\"key1\\\", \\\"value\\\":1}, {\\\"key\\\":\\\"key2\\\", \\\"value\\\":2}]}\";\n        assertEquals(expectedJson, JSONUtils.writeKeyedValues(data));\n    }\n}",
        "\npackage org.jfree.data.json;\n\nimport static org.junit.jupiter.api.Assertions.*;\nimport org.junit.jupiter.api.Test;\n\npublic class JSONUtilsTest {\n    @Test\n    public void writeKeyedValuesTest() {\n        KeyedValues data = new KeyedValues(\"data\");\n        StringWriter sw = new StringWriter();\n        \n        // Create some sample data\n        for (int i = 0; i < 5; i++) {\n            data.addValue(i, \"Key\" + i);\n        }\n        \n        // Call the method to be tested\n        JSONUtils.writeKeyedValues(data, sw);\n        \n        // Check that the output is correct\n        assertEquals(\"{\\\"key\\\":\\\"data\\\",\\\"value\\\":[{\\\"v\\\":0,\\\"l\\\":\\\"Key0\\\"},{\\\"v\\\":1,\\\"l\\\":\\\"Key1\\\"},{\\\"v\\\":2,\\\"l\\\":\\\"Key2\\\"},{\\\"v\\\":3,\\\"l\\\":\\\"Key3\\\"},{\\\"v\\\":4,\\\"l\\\":\\\"Key4\\\"}]}\", sw.toString());\n    }\n}\n",
        "package org.jfree.data.json;\n\nimport java.io.StringWriter;\n\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class JSONUtilsTest {\n    @Test\n    public void writeKeyedValuesTest() {\n        KeyedValues data = new KeyedValues();\n        StringWriter sw = new StringWriter();\n        try {\n            JSONUtils.writeKeyedValues(data, sw);\n        } catch (IOException ex) {\n            throw new RuntimeException(ex);\n        }\n        assertEquals(\"{\\\"key\\\":\\\"value\\\"}\", sw.toString());\n    }\n}",
        "package org.jfree.data.json;\n\nimport java.io.IOException;\nimport java.io.StringWriter;\nimport java.util.Iterator;\nimport java.util.List;\nimport org.jfree.chart.util.Args;\nimport org.jfree.data.KeyedValues;\nimport org.jfree.data.KeyedValues2D;\nimport org.jfree.data.category.CategoryDataset;\nimport org.jfree.data.general.PieDataset;\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class JSONUtilsTest {\n    @Test\n    public void writeKeyedValuesTest() throws IOException {\n        KeyedValues data = new KeyedValues();\n        Args.nullNotPermitted(data, \"data\");\n        StringWriter sw = new StringWriter();\n        assertEquals(\"\", sw.toString());\n        JSONUtils.writeKeyedValues(data, sw);\n        assertEquals(\"{\\\"data\\\":[]}\", sw.toString());\n    }\n}",
        "@Test\npublic void writeKeyedValuesTest() throws IOException {\n    KeyedValues data = new KeyedValues();\n    StringWriter sw = new StringWriter();\n    JSONUtils.writeKeyedValues(data, sw);\n    assertEquals(\"\", sw.toString());\n}"
    ]
}