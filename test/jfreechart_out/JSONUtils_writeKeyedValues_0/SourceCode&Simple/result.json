["package org.jfree.data.json;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class JSONUtilsTest {\n    @Test\n    public void writeKeyedValuesTest() {\n        // Create a new KeyedValues object and populate it with some sample data\n        KeyedValues keyedValues = new KeyedValues();\n        keyedValues.addValue(\"key1\", \"value1\");\n        keyedValues.addValue(\"key2\", \"value2\");\n        keyedValues.addValue(\"key3\", \"value3\");\n\n        // Call the writeKeyedValues() method on the JSONUtils class with your KeyedValues object as an argument\n        String jsonString = JSONUtils.writeKeyedValues(keyedValues);\n\n        // Use a JSON parser library to parse the returned string into a JSON object\n        ObjectMapper mapper = new ObjectMapper();\n        JsonNode actualJson = mapper.readTree(jsonString);\n\n        // Verify that the expected values are present in the resulting JSON document\n        assertEquals(\"value1\", actualJson.get(\"key1\").asText());\n        assertEquals(\"value2\", actualJson.get(\"key2\").asText());\n        assertEquals(\"value3\", actualJson.get(\"key3\").asText());\n    }\n}", "@Test\npublic void writeKeyedValuesTest() {\n    KeyedValues data = new KeyedValues();\n    data.addValue(\"value1\", \"key1\");\n    data.addValue(\"value2\", \"key2\");\n    String result = JSONUtils.writeKeyedValues(data);\n    assertEquals(\"{\\\"key1\\\":\\\"value1\\\",\\\"key2\\\":\\\"value2\\\"}\", result);\n}", "\npackage org.jfree.data.json;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class JSONUtilsTest {\n    @Test\n    public void writeKeyedValuesTest() {\n        KeyedValues data = new KeyedValues();\n        data.put(\"key1\", \"value1\");\n        data.put(\"key2\", \"value2\");\n        \n        StringWriter sw = new StringWriter();\n        try {\n            JSONUtils.writeKeyedValues(data, sw);\n        } catch (IOException ex) {\n            throw new RuntimeException(ex);\n        }\n        \n        assertEquals(\"{\\\"key1\\\":\\\"value1\\\",\\\"key2\\\":\\\"value2\\\"}\", sw.toString());\n    }\n}", "package org.jfree.data.json;\n\nimport java.io.IOException;\nimport java.io.StringWriter;\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class JSONUtilsTest {\n    @Test\n    public void writeKeyedValuesTest() throws IOException {\n        KeyedValues data = new KeyedValues();\n        StringWriter sw = new StringWriter();\n        assertThrows(NullPointerException.class, () -> JSONUtils.writeKeyedValues(null));\n        assertDoesNotThrow(() -> JSONUtils.writeKeyedValues(data, sw));\n    }\n}", "\npackage org.jfree.data.json;\n\nimport java.io.IOException;\n\nimport java.io.StringWriter;\n\nimport java.util.Iterator;\n\nimport java.util.List;\n\nimport org.jfree.chart.util.Args;\n\nimport org.jfree.data.KeyedValues;\n\nimport org.junit.jupiter.api.Test;\n\npublic class JSONUtilsTest {\n    @Test\n    public void writeKeyedValuesTest() throws IOException {\n        KeyedValues data = new KeyedValues();\n        StringWriter sw = new StringWriter();\n        JSONUtils.writeKeyedValues(data, sw);\n        assertEquals(\"{\\\"values\\\":[],\\\"key\\\":null}\", sw.toString());\n    }\n}", "\npackage org.jfree.data.json;\n\nimport java.io.StringWriter;\nimport java.io.IOException;\n\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class JSONUtilsTest {\n    @Test\n    public void writeKeyedValuesTest() throws IOException {\n        KeyedValues data = new KeyedValues();\n        StringWriter sw = new StringWriter();\n        \n        // Arrange\n        JSONUtils.writeKeyedValues(data, sw);\n        \n        // Act\n        String result = sw.toString();\n        \n        // Assert\n        assertNotNull(result);\n    }\n}", "package org.jfree.data.json;\n\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class JSONUtilsTest {\n    @Test\n    public void writeKeyedValuesTest() {\n        KeyedValues data = new KeyedValues();\n        assertThrows(NullPointerException.class, () -> JSONUtils.writeKeyedValues(null));\n        assertEquals(\"{}\", JSONUtils.writeKeyedValues(data));\n\n        data.setValue(\"key1\", \"value1\");\n        assertEquals(\"{\\\"key1\\\":\\\"value1\\\"}\", JSONUtils.writeKeyedValues(data));\n    }\n}", "@Test\npublic void writeKeyedValuesTest() {\n    KeyedValues kv = new KeyedValues();\n    kv.addValue(\"key1\", \"value1\");\n    kv.addValue(\"key2\", \"value2\");\n    \n    String actual = JSONUtils.writeKeyedValues(kv);\n    \n    assertEquals(\"{\\\"key1\\\":\\\"value1\\\",\\\"key2\\\":\\\"value2\\\"}\", actual);\n}", "\npackage org.jfree.data.json;\n\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class JSONUtilsTest {\n    @Test\n    public void writeKeyedValuesTest() {\n        KeyedValues data = new KeyedValues();\n        StringWriter sw = new StringWriter();\n        \n        JSONUtils.writeKeyedValues(data, sw);\n        \n        assertEquals(\"\", sw.toString());\n    }\n}", "package org.jfree.data.json;\n\nimport java.io.IOException;\nimport java.io.StringWriter;\nimport java.util.Iterator;\nimport java.util.List;\n\nimport org.junit.jupiter.api.Test;\n\nclass JSONUtilsTest {\n    @Test\n    public void writeKeyedValuesTest() throws IOException {\n        KeyedValues data = new KeyedValues();\n        StringWriter sw = new StringWriter();\n        JSONUtils.writeKeyedValues(data, sw);\n        assertEquals(\"{\\\"key1\\\":\\\"value1\\\",\\\"key2\\\":\\\"value2\\\"}\", sw.toString());\n    }\n}"]