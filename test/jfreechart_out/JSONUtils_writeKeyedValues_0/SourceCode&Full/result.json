["import org.jfree.data.json.*;\nimport java.io.StringWriter;\n\npublic class Test {\n    public static void main(String[] args) throws Exception {\n        KeyedValues keyedValues = new KeyedValues();\n        // Add your data to the keyed values object...\n        StringWriter sw = new StringWriter();\n        JSONUtils.writeKeyedValues(keyedValues, sw);\n        System.out.println(\"JSON: \" + sw.toString());\n    }\n}", "package org.jfree.data.json;\n\nimport java.io.IOException;\nimport java.io.StringWriter;\nimport java.util.Arrays;\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class JSONUtilsTest {\n    @Test\n    public void writeKeyedValuesTest() throws IOException {\n        KeyedValues data = new DefaultKeyedValues();\n        data.put(\"item1\", 20);\n        data.put(\"item2\", 30);\n        StringWriter sw = new StringWriter();\n        JSONUtils.writeKeyedValues(data, sw);\n        assertEquals(\"[ [\\\"item1\\\", 20], [\\\"item2\\\", 30] ]\", sw.toString());\n    }\n}", "@RunWith(JUnitPlatform.class)\npublic class JSONUtilsTest {\n    private static final Logger logger = LoggerFactory.getLogger(JSONUtilsTest.class);\n    @Test\n    public void writeKeyedValuesTest() {\n        KeyedValues data = new DefaultKeyedValues();\n        //add some values to the dataset\n        for (int i=1;i<=5;i++) {\n            data.setValue(Integer.toString(i), Math.random());\n        }\n        logger.info(\"Original Data:\");\n        StringWriter sw = new StringWriter();\n        try {\n            JSONUtils.writeKeyedValues(data, sw);\n        } catch (IOException ex) {\n            fail(ex.getMessage());\n        }\n        assertNotNull(sw.toString());\n    }\n}", "package org.jfree.data.json;\n\nimport java.io.IOException;\nimport java.io.StringWriter;\nimport java.util.ArrayList;\nimport java.util.List;\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class JSONUtilsTest {\n    @Test\n    public void writeKeyedValuesTest() throws IOException {\n        KeyedValues data = new DefaultKeyedValues();\n        data.setValue(\"R1C1\", 1);\n        data.setValue(\"R2C1\", 2);\n        StringWriter sw = new StringWriter();\n        JSONUtils.writeKeyedValues(data, sw);\n        assertEquals(\"[\\\"R1C1\\\", 1], [\\\"R2C1\\\", 2]\", sw.toString());\n    }\n}\n    \n### Response:", "package org.jfree.data.json;\n\nimport java.io.IOException;\nimport java.io.StringWriter;\nimport java.util.Iterator;\nimport java.util.List;\n\nimport org.jfree.chart.api.PublicCloneable;\n\npublic class JSONUtilsTest {\n    private static void assertEqualJSON(String expected, String actual) {\n        // implement this method using your preferred JSON comparison library\n    }\n    \n    @Test\n    public void writeKeyedValuesTest() throws IOException {\n        KeyedValues data = new DefaultKeyedValues();\n        data.setValue(\"A\", 1.0);\n        data.setValue(\"B\", 2.0);\n        \n        StringWriter writer = new StringWriter();\n        JSONUtils.writeKeyedValues(data, writer);\n        \n        assertEqualJSON(\"[['A', 1], ['B', 2]]\", writer.toString());\n    }\n    \n    @Test\n    public void writeKeyedValues2DTest() throws IOException {\n        KeyedValues2D data = new DefaultKeyedValues2D();\n        data.setValue(\"A\", \"X\", 1.0);\n        data.setValue(\"B\", \"Y\", 2.0);\n        \n        StringWriter writer = new StringWriter();\n        JSONUtils.writeKeyedValues2D(data, writer);\n        \n        assertEqualJSON(\"{'columnKeys': ['X', 'Y'], rows: [['A', [1, null]], ['B', [null, 2]]]}\", writer.toString());\n    }\n}", "import org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\nimport org.jfree.data.json.JSONUtils;", "import java.io.*;\nimport java.util.*;\nimport org.jfree.chart.plot.*;\nimport org.jfree.data.category.*;\nimport org.jfree.data.general.*;\nimport org.jfree.ui.*;\n\npublic class CSVPieChartDemo {\n    public static void main(String[] args) throws IOException {\n        String fileName = \"data/pie-chart-example.csv\";  // replace with your file name\n        CategoryDataset dataset = createDatasetFromCSVFile(fileName);\n        JFreeChart chart = createPieChart(\"Pie Chart\", dataset);\n        PiePlot plot = (PiePlot) chart.getPlot();\n        plot.setLabelFormat(new DecimalFormat(\"#0.0\"));  // display values as percentages\n        plot.setLabelLinkPaint(Color.WHITE);  \n        new SwingWrapper(chart).displayChart();     // opens a window with the pie chart \n    }\n\n    private static CategoryDataset createDatasetFromCSVFile(String fileName) throws IOException {\n        DefaultCategoryDataset dataset = new DefaultCategoryDataset();\n        try (BufferedReader reader = Files.newBufferedReader(Paths.get(fileName))) {\n            String line;\n            while ((line = reader.readLine()) != null) {\n                // split the line into parts separated by commas\n                String[] columns = line.split(\",\");  \n                if (columns[0].equals(\"Category\")) continue;  // skip the header row\n                dataset.addValue(Integer.parseInt(columns[1]), \"Pie Chart\", columns[0]);\n            }\n        }\n        return dataset;\n    }\n\n    private static JFreeChart createPieChart(String title, CategoryDataset dataset) {\n        JFreeChart chart = ChartFactory.createPieChart(title, dataset);\n        PiePlot plot = (PiePlot) chart.getPlot();\n        plot.setLabelLinkStyle(LinkStyle.Standard);  // add links to the slices of the pie chart\n        return chart;\n    }\n}", "package org.jfree.data.json;\n\nimport java.io.IOException;\nimport java.io.StringWriter;\nimport java.util.ArrayList;\nimport java.util.List;\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class JSONUtilsTest {\n    @Test\n    public void writeKeyedValuesTest() throws IOException {\n        KeyedValues data = new DefaultKeyedValues();\n        List<String> keys = new ArrayList<>();\n        keys.add(\"First\");\n        keys.add(\"Second\");\n        keys.add(\"Third\");\n        for (String key : keys) {\n            data.setValue(key, Math.random());\n        }\n        StringWriter sw = new StringWriter();\n        JSONUtils.writeKeyedValues(data, sw);\n    }\n}", "\npackage org.jfree.data;\nimport java.io.StringWriter;\nimport java.util.*;\nimport org.junit.jupiter.api.*;\npublic class JSONUtilsTest {\n    private static final KeyedValues KEYED_VALUES = new DefaultKeyedValues();\n    static {\n        KEYED_VALUES.put(\"key1\", 1);\n        KEYED_VALUES.put(\"key2\", 34);\n        KEYED_VALUES.put(\"key3\", -50);\n        KEYED_VALUES.put(\"key4\", 789);\n    }\n    \n    private static final StringWriter OUTPUT = new StringWriter();\n    @Test\n    public void writeKeyedValues2D() {\n        JSONUtils.writeKeyedValues(KEYED_VALUES, OUTPUT);\n        assertEquals(\"[\\\"key1\\\", 1], [\\\"key2\\\", 34], \"\n                + \"[\\\"key3\\\", -50], [\\\"key4\\\", 789]\",\n                    OUTPUT.toString());\n    }\n}", "\nimport java.io.*;\nimport org.jfree.data.json.JSONUtils;\nimport org.jfree.data.keyed.KeyedValues;\n\npublic class WriteKeyedValues {\n    public static void main(String[] args) throws IOException {\n        KeyedValues data = new KeyedValues();\n        data.put(\"A\", 1);\n        data.put(\"B\", 2);\n        data.put(\"C\", 3);\n        \n        JSONUtils.writeKeyedValues(data, new PrintWriter(System.out));\n    }\n}\n"]